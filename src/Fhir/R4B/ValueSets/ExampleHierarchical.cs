// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// Demonstration of extensions that build a hierarchical contains
  /// </summary>
  public static class ExampleHierarchicalCodes
  {
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Conflict = new Coding
    {
      Code = "conflict",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EditVersionConflict = new Coding
    {
      Code = "conflict",
      Display = "Edit Version Conflict",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Duplicate = new Coding
    {
      Code = "duplicate",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Duplicate_2 = new Coding
    {
      Code = "duplicate",
      Display = "Duplicate",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Exception = new Coding
    {
      Code = "exception",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Exception_2 = new Coding
    {
      Code = "exception",
      Display = "Exception",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Invalid = new Coding
    {
      Code = "invalid",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InvalidContent = new Coding
    {
      Code = "invalid",
      Display = "Invalid Content",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VALLock = new Coding
    {
      Code = "lock",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LockError = new Coding
    {
      Code = "lock-error",
      Display = "Lock Error",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Login = new Coding
    {
      Code = "login",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LoginRequired = new Coding
    {
      Code = "login",
      Display = "Login Required",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NotFound = new Coding
    {
      Code = "not-found",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NotFound_2 = new Coding
    {
      Code = "not-found",
      Display = "Not Found",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Processing = new Coding
    {
      Code = "processing",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ProcessingFailure = new Coding
    {
      Code = "processing",
      Display = "Processing Failure",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Required = new Coding
    {
      Code = "required",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RequiredElementMissing = new Coding
    {
      Code = "required",
      Display = "Required element missing",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SecurityProblem = new Coding
    {
      Code = "security",
      Display = "Security Problem",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Structure = new Coding
    {
      Code = "structure",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StructuralIssue = new Coding
    {
      Code = "structure",
      Display = "Structural Issue",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Tbrottled = new Coding
    {
      Code = "tbrottled",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Throttled = new Coding
    {
      Code = "throttled",
      Display = "Throttled",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TransientIssue = new Coding
    {
      Code = "transient",
      Display = "Transient Issue",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Unknown = new Coding
    {
      Code = "unknown",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnknownUser = new Coding
    {
      Code = "unknown",
      Display = "Unknown User",
      System = "http://hl7.org/fhir/hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Value = new Coding
    {
      Code = "value",
      System = "#hacked"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElementValueInvalid = new Coding
    {
      Code = "value",
      Display = "Element value invalid",
      System = "http://hl7.org/fhir/hacked"
    };

    /// <summary>
    /// Literal for code: Conflict
    /// </summary>
    public const string LiteralConflict = "conflict";

    /// <summary>
    /// Literal for code: EditVersionConflict
    /// </summary>
    public const string LiteralEditVersionConflict = "conflict";

    /// <summary>
    /// Literal for code: Duplicate
    /// </summary>
    public const string LiteralDuplicate = "duplicate";

    /// <summary>
    /// Literal for code: Duplicate_2
    /// </summary>
    public const string LiteralDuplicate_2 = "duplicate";

    /// <summary>
    /// Literal for code: Exception
    /// </summary>
    public const string LiteralException = "exception";

    /// <summary>
    /// Literal for code: Exception_2
    /// </summary>
    public const string LiteralException_2 = "exception";

    /// <summary>
    /// Literal for code: Invalid
    /// </summary>
    public const string LiteralInvalid = "invalid";

    /// <summary>
    /// Literal for code: InvalidContent
    /// </summary>
    public const string LiteralInvalidContent = "invalid";

    /// <summary>
    /// Literal for code: VALLock
    /// </summary>
    public const string LiteralVALLock = "lock";

    /// <summary>
    /// Literal for code: LockError
    /// </summary>
    public const string LiteralLockError = "lock-error";

    /// <summary>
    /// Literal for code: Login
    /// </summary>
    public const string LiteralLogin = "login";

    /// <summary>
    /// Literal for code: LoginRequired
    /// </summary>
    public const string LiteralLoginRequired = "login";

    /// <summary>
    /// Literal for code: NotFound
    /// </summary>
    public const string LiteralNotFound = "not-found";

    /// <summary>
    /// Literal for code: NotFound_2
    /// </summary>
    public const string LiteralNotFound_2 = "not-found";

    /// <summary>
    /// Literal for code: Processing
    /// </summary>
    public const string LiteralProcessing = "processing";

    /// <summary>
    /// Literal for code: ProcessingFailure
    /// </summary>
    public const string LiteralProcessingFailure = "processing";

    /// <summary>
    /// Literal for code: Required
    /// </summary>
    public const string LiteralRequired = "required";

    /// <summary>
    /// Literal for code: RequiredElementMissing
    /// </summary>
    public const string LiteralRequiredElementMissing = "required";

    /// <summary>
    /// Literal for code: SecurityProblem
    /// </summary>
    public const string LiteralSecurityProblem = "security";

    /// <summary>
    /// Literal for code: Structure
    /// </summary>
    public const string LiteralStructure = "structure";

    /// <summary>
    /// Literal for code: StructuralIssue
    /// </summary>
    public const string LiteralStructuralIssue = "structure";

    /// <summary>
    /// Literal for code: Tbrottled
    /// </summary>
    public const string LiteralTbrottled = "tbrottled";

    /// <summary>
    /// Literal for code: Throttled
    /// </summary>
    public const string LiteralThrottled = "throttled";

    /// <summary>
    /// Literal for code: TransientIssue
    /// </summary>
    public const string LiteralTransientIssue = "transient";

    /// <summary>
    /// Literal for code: Unknown
    /// </summary>
    public const string LiteralUnknown = "unknown";

    /// <summary>
    /// Literal for code: UnknownUser
    /// </summary>
    public const string LiteralUnknownUser = "unknown";

    /// <summary>
    /// Literal for code: Value
    /// </summary>
    public const string LiteralValue = "value";

    /// <summary>
    /// Literal for code: ElementValueInvalid
    /// </summary>
    public const string LiteralElementValueInvalid = "value";
  };
}
