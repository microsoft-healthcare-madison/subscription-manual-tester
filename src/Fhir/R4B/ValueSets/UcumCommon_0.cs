// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// Commonly encountered UCUM units (for purposes of helping populate look ups.
  /// </summary>
  public static class UcumCommonCodes
  {
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Minute = new Coding
    {
      Code = "'",
      Display = "minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Second = new Coding
    {
      Code = "''",
      Display = "second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Percent = new Coding
    {
      Code = "%",
      Display = "percent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Percent100WBC = new Coding
    {
      Code = "%/100{WBC}",
      Display = "percent / 100 WBC",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfSlope = new Coding
    {
      Code = "%[slope]",
      Display = "percent of slope",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Percent0to3Hours = new Coding
    {
      Code = "%{0to3Hours}",
      Display = "percent 0to3Hours",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentAbnormal = new Coding
    {
      Code = "%{abnormal}",
      Display = "percent abnormal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentAbnormal_2 = new Coding
    {
      Code = "%{Abnormal}",
      Display = "percent Abnormal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentActivity = new Coding
    {
      Code = "%{activity}",
      Display = "percent activity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentActivity_2 = new Coding
    {
      Code = "%{Activity}",
      Display = "percent Activity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentAggregation = new Coding
    {
      Code = "%{aggregation}",
      Display = "percent aggregation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentAt60Minute = new Coding
    {
      Code = "%{at_60_min}",
      Display = "percent at 60 minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfBacteria = new Coding
    {
      Code = "%{bacteria}",
      Display = "percent of bacteria",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBasalActivity = new Coding
    {
      Code = "%{basal_activity}",
      Display = "percent basal activity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBasalActivity_2 = new Coding
    {
      Code = "%{BasalActivity}",
      Display = "percent BasalActivity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfBaseline = new Coding
    {
      Code = "%{baseline}",
      Display = "percent of baseline",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBinding = new Coding
    {
      Code = "%{binding}",
      Display = "percent binding",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBinding_2 = new Coding
    {
      Code = "%{Binding}",
      Display = "percent Binding",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBlockade = new Coding
    {
      Code = "%{blockade}",
      Display = "percent blockade",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBlockade_2 = new Coding
    {
      Code = "%{Blockade}",
      Display = "percent Blockade",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBlocked = new Coding
    {
      Code = "%{blocked}",
      Display = "percent blocked",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBound = new Coding
    {
      Code = "%{bound}",
      Display = "percent bound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBound_2 = new Coding
    {
      Code = "%{Bound}",
      Display = "PercentBound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentBreakdown = new Coding
    {
      Code = "%{breakdown}",
      Display = "percent breakdown",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentCarboxyhemoglobin = new Coding
    {
      Code = "%{Carboxyhemoglobin}",
      Display = "percent Carboxyhemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfCells = new Coding
    {
      Code = "%{cells}",
      Display = "percent of cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentConversion = new Coding
    {
      Code = "%{Conversion}",
      Display = "percent Conversion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentCound = new Coding
    {
      Code = "%{Cound}",
      Display = "percent Cound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentDeficient = new Coding
    {
      Code = "%{deficient}",
      Display = "percent deficient",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentDose = new Coding
    {
      Code = "%{dose}",
      Display = "percent dose",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentEosSeen = new Coding
    {
      Code = "%{EosSeen}",
      Display = "percent EosSeen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentExcretion = new Coding
    {
      Code = "%{excretion}",
      Display = "percent excretion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentExcretion_2 = new Coding
    {
      Code = "%{Excretion}",
      Display = "percent Excretion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentFat = new Coding
    {
      Code = "%{Fat}",
      Display = "percent Fat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentFetalErythrocytes = new Coding
    {
      Code = "%{FetalErythrocytes}",
      Display = "percent FetalErythrocytes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemoglobin = new Coding
    {
      Code = "%{Hb}",
      Display = "percent hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemoglobin_2 = new Coding
    {
      Code = "%{Hemoglobin}",
      Display = "percent Hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemoglobinA1C = new Coding
    {
      Code = "%{HemoglobinA1C}",
      Display = "percent HemoglobinA1C",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemoglobinSaturation = new Coding
    {
      Code = "%{HemoglobinSaturation}",
      Display = "percent HemoglobinSaturation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemolysis = new Coding
    {
      Code = "%{hemolysis}",
      Display = "percent hemolysis",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHemolysis_2 = new Coding
    {
      Code = "%{Hemolysis}",
      Display = "percent Hemolysis",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentHumanResponse = new Coding
    {
      Code = "%{HumanResponse}",
      Display = "percent HumanResponse",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentIndex = new Coding
    {
      Code = "%{index}",
      Display = "percent index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentIndex_2 = new Coding
    {
      Code = "%{Index}",
      Display = "percent Index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentInhibition = new Coding
    {
      Code = "%{inhibition}",
      Display = "percent inhibition",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentInhibition_2 = new Coding
    {
      Code = "%{Inhibition}",
      Display = "percent Inhibition",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentLive = new Coding
    {
      Code = "%{Live}",
      Display = "percent Live",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentLossOfAcetylcholineReceptor = new Coding
    {
      Code = "%{loss_AChR}",
      Display = "percent  loss of acetylcholine receptor",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentLoss = new Coding
    {
      Code = "%{loss}",
      Display = "percent loss",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentLysis = new Coding
    {
      Code = "%{lysis}",
      Display = "percent lysis",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNegativeControl = new Coding
    {
      Code = "%{Negative Control}",
      Display = "percent Negative Control",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNormalPooledPlasma = new Coding
    {
      Code = "%{normal_pooled_plasma}",
      Display = "percent normal pooled plasma",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNormal = new Coding
    {
      Code = "%{normal}",
      Display = "percent normal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNormal_2 = new Coding
    {
      Code = "%{Normal}",
      Display = "percent Normal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNormalControl = new Coding
    {
      Code = "%{NormalControl}",
      Display = "percent NormalControl",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentNormalPooledPlasma_2 = new Coding
    {
      Code = "%{NormalPooledPlasma}",
      Display = "percent NormalPooledPlasma",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfAvailable = new Coding
    {
      Code = "%{ofAvailable}",
      Display = "percent ofAvailable",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfBacteria_2 = new Coding
    {
      Code = "%{ofBacteria}",
      Display = "percent ofBacteria",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfLymphocytes = new Coding
    {
      Code = "%{OfLymphocytes}",
      Display = "percent OfLymphocytes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfWBCs = new Coding
    {
      Code = "%{OfWBCs}",
      Display = "percent OfWBCs",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOxygen = new Coding
    {
      Code = "%{Oxygen}",
      Display = "percent Oxygen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentPenetration = new Coding
    {
      Code = "%{penetration}",
      Display = "percent  penetration",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentPositive = new Coding
    {
      Code = "%{positive}",
      Display = "percent positive",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentPositive_2 = new Coding
    {
      Code = "%{Positive}",
      Display = "percent Positive",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentPrecipitate = new Coding
    {
      Code = "%{Precipitate}",
      Display = "percent Precipitate",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfRedBloodCells = new Coding
    {
      Code = "%{RBCs}",
      Display = "percent of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentReactive = new Coding
    {
      Code = "%{reactive}",
      Display = "percent reactive",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentReactivity = new Coding
    {
      Code = "%{Reactivity}",
      Display = "percent Reactivity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentRecovery = new Coding
    {
      Code = "%{recovery}",
      Display = "percent recovery",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentReference = new Coding
    {
      Code = "%{reference}",
      Display = "percent reference",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RelativePercent = new Coding
    {
      Code = "%{relative}",
      Display = "relative percent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentResidual = new Coding
    {
      Code = "%{residual}",
      Display = "percent residual",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentResponse = new Coding
    {
      Code = "%{response}",
      Display = "percent response",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentRisk = new Coding
    {
      Code = "%{risk}",
      Display = "percent risk",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentSaturation = new Coding
    {
      Code = "%{saturation}",
      Display = "percent saturation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentSpermMotility = new Coding
    {
      Code = "%{SpermMotility}",
      Display = "percent SpermMotility",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentTotal = new Coding
    {
      Code = "%{total}",
      Display = "percent total",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentTotal_2 = new Coding
    {
      Code = "%{Total}",
      Display = "percent Total",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentTotalProtein = new Coding
    {
      Code = "%{TotalProtein}",
      Display = "percent TotalProtein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentTotQuoteCholesterol = new Coding
    {
      Code = "%{Tot'Cholesterol}",
      Display = "percent Tot'Cholesterol",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentTotQuoteHgb = new Coding
    {
      Code = "%{Tot'Hgb}",
      Display = "percent Tot'Hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentUptake = new Coding
    {
      Code = "%{uptake}",
      Display = "percent uptake",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentUptake_2 = new Coding
    {
      Code = "%{Uptake}",
      Display = "percent Uptake",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentViable = new Coding
    {
      Code = "%{viable}",
      Display = "percent viable",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VolumePercent = new Coding
    {
      Code = "%{vol}",
      Display = "VolumePercent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentOfWhiteBloodCells = new Coding
    {
      Code = "%{WBCs}",
      Display = "percent of white blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PercentWeightToWeight = new Coding
    {
      Code = "%{WeightToWeight}",
      Display = "percent WeightToWeight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per12AsteriskHour = new Coding
    {
      Code = "/(12.h)",
      Display = "per 12 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerArbitraryUnit = new Coding
    {
      Code = "/[arb'U]",
      Display = "per arbitrary unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerHighPowerField = new Coding
    {
      Code = "/[HPF]",
      Display = "per high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerInternationalUnit = new Coding
    {
      Code = "/[iU]",
      Display = "per international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerInternationalUnit_2 = new Coding
    {
      Code = "/[IU]",
      Display = "per international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerLowPowerField = new Coding
    {
      Code = "/[LPF]",
      Display = "per low power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerEntity = new Coding
    {
      Code = "/{entity}",
      Display = "per entity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerEntity_2 = new Coding
    {
      Code = "/{Entity}",
      Display = "per Entity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerOif = new Coding
    {
      Code = "/{oif}",
      Display = "per oif",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerOilImmersionField = new Coding
    {
      Code = "/{OIF}",
      Display = "per oil immersion field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerSpecimen = new Coding
    {
      Code = "/{Specimen}",
      Display = "per Specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerTot = new Coding
    {
      Code = "/{tot}",
      Display = "per tot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerTenGiga = new Coding
    {
      Code = "/10*10",
      Display = "PerTenGiga",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerTrillion = new Coding
    {
      Code = "/10*12",
      Display = "PerTrillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerTrillionRedBloodCells = new Coding
    {
      Code = "/10*12{rbc}",
      Display = "PerTrillionRedBloodCells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerTrillionRedBloodCells_2 = new Coding
    {
      Code = "/10*12{RBCs}",
      Display = "per trillion red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerThousand = new Coding
    {
      Code = "/10*3",
      Display = "per thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerThousandRedBloodCells = new Coding
    {
      Code = "/10*3.{RBCs}",
      Display = "per thousand red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per10ThousandRedBloodCells = new Coding
    {
      Code = "/10*4{RBCs}",
      Display = "per 10 thousand red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMillion = new Coding
    {
      Code = "/10*6",
      Display = "PerMillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerBillion = new Coding
    {
      Code = "/10*9",
      Display = "PerBillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100 = new Coding
    {
      Code = "/100",
      Display = "per 100",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100Cells = new Coding
    {
      Code = "/100{cells}",
      Display = "per 100 cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100Neutrophils = new Coding
    {
      Code = "/100{neutrophils}",
      Display = "per 100 neutrophils",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100Spermatozoa = new Coding
    {
      Code = "/100{spermatozoa}",
      Display = "per 100 spermatozoa",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100Spermatozoa_2 = new Coding
    {
      Code = "/100{Spermatozoa}",
      Display = "Per100Spermatozoa",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100WBC = new Coding
    {
      Code = "/100{WBC}",
      Display = "Per100WBC",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Per100WBC_2 = new Coding
    {
      Code = "/100{WBCs}",
      Display = "Per100WBC",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerYear = new Coding
    {
      Code = "/a",
      Display = "/ year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerCentimeterOfWater = new Coding
    {
      Code = "/cm[H2O]",
      Display = "per centimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerDay = new Coding
    {
      Code = "/d",
      Display = "per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerDeciliter = new Coding
    {
      Code = "/dL",
      Display = "per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGram = new Coding
    {
      Code = "/g",
      Display = "per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramCreat = new Coding
    {
      Code = "/g{creat}",
      Display = "per gram creat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramOfHemoglobin = new Coding
    {
      Code = "/g{Hb}",
      Display = "per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramHgb = new Coding
    {
      Code = "/g{hgb}",
      Display = "per gram hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramHemoglobin = new Coding
    {
      Code = "/g{HGB}",
      Display = "PerGramHemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramOfTotalNitrogen = new Coding
    {
      Code = "/g{tot_nit}",
      Display = "per gram of total nitrogen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramOfTotalProtein = new Coding
    {
      Code = "/g{tot_prot}",
      Display = "per gram of total protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramTotQuoteNit = new Coding
    {
      Code = "/g{tot'nit}",
      Display = "per gram tot'nit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramTotQuoteProt = new Coding
    {
      Code = "/g{tot'prot}",
      Display = "per gram tot'prot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramOfWetTissue = new Coding
    {
      Code = "/g{wet_tis}",
      Display = "per gram of wet tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerGramWetQuoteTis = new Coding
    {
      Code = "/g{wet'tis}",
      Display = "per gram wet'tis",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerHour = new Coding
    {
      Code = "/h",
      Display = "per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerKilogram = new Coding
    {
      Code = "/kg",
      Display = "per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerKilogramOfBodyWeight = new Coding
    {
      Code = "/kg{body_wt}",
      Display = "per kilogram of body weight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerKilogramBodyWt = new Coding
    {
      Code = "/kg{body'wt}",
      Display = "per kilogram body wt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerLiter = new Coding
    {
      Code = "/L",
      Display = "per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerSquareMeter = new Coding
    {
      Code = "/m2",
      Display = "per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerCubicMeter = new Coding
    {
      Code = "/m3",
      Display = "per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMilligram = new Coding
    {
      Code = "/mg",
      Display = "per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMinute = new Coding
    {
      Code = "/min",
      Display = "per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMilliliter = new Coding
    {
      Code = "/mL",
      Display = "per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMillimeter = new Coding
    {
      Code = "/mm",
      Display = "per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerCubicMillimeter = new Coding
    {
      Code = "/mm3",
      Display = "per cubic millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMillimole = new Coding
    {
      Code = "/mmol",
      Display = "per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMillimoleOfCreatinine = new Coding
    {
      Code = "/mmol{creat}",
      Display = "per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMonth = new Coding
    {
      Code = "/mo",
      Display = "per month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerSecond = new Coding
    {
      Code = "/s",
      Display = "per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerEnzymeUnit = new Coding
    {
      Code = "/U",
      Display = "per enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMicrogram = new Coding
    {
      Code = "/ug",
      Display = "per microgram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerMicroliter = new Coding
    {
      Code = "/uL",
      Display = "per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PerWeek = new Coding
    {
      Code = "/wk",
      Display = "per week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Acre = new Coding
    {
      Code = "[acr_br]",
      Display = "acre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Acre_2 = new Coding
    {
      Code = "[acr_us]",
      Display = "acre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AmbA1Units = new Coding
    {
      Code = "[Amb'a'1'U]",
      Display = "Amb a 1 units",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgAAnticardiolipinUnit = new Coding
    {
      Code = "[APL'U]",
      Display = "IgA anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgAAnticardiolipinUnitPerMilliliter = new Coding
    {
      Code = "[APL'U]/mL",
      Display = "IgA anticardiolipin unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ArbitraryUnit = new Coding
    {
      Code = "[arb'U]",
      Display = "arbitrary unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ArbitaryUnitLiter = new Coding
    {
      Code = "[arb'U]/L",
      Display = "arbitary unit / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ArbitraryUnitPerMilliliter = new Coding
    {
      Code = "[arb'U]/mL",
      Display = "arbitrary unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AllergyUnit = new Coding
    {
      Code = "[AU]",
      Display = "allergy unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BioequivalentAllergenUnit = new Coding
    {
      Code = "[BAU]",
      Display = "bioequivalent allergen unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Barrel = new Coding
    {
      Code = "[bbl_us]",
      Display = "barrel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BodanskyUnit = new Coding
    {
      Code = "[bdsk'U]",
      Display = "Bodansky unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BethesdaUnit = new Coding
    {
      Code = "[beth'U]",
      Display = "Bethesda unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BoardFoot = new Coding
    {
      Code = "[bf_i]",
      Display = "board foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BritishThermalUnit = new Coding
    {
      Code = "[Btu]",
      Display = "British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BritishThermalUnitAt39DegreesF = new Coding
    {
      Code = "[Btu_39]",
      Display = "British thermal unit at 39 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BritishThermalUnitAt59DegreesF = new Coding
    {
      Code = "[Btu_59]",
      Display = "British thermal unit at 59 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BritishThermalUnitAt60DegreesF = new Coding
    {
      Code = "[Btu_60]",
      Display = "British thermal unit at 60 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalTableBritishThermalUnit = new Coding
    {
      Code = "[Btu_IT]",
      Display = "international table British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanBritishThermalUnit = new Coding
    {
      Code = "[Btu_m]",
      Display = "mean British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThermochemicalBritishThermalUnit = new Coding
    {
      Code = "[Btu_th]",
      Display = "thermochemical British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bushel = new Coding
    {
      Code = "[bu_br]",
      Display = "bushel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bushel_2 = new Coding
    {
      Code = "[bu_us]",
      Display = "bushel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VelocityOfLight = new Coding
    {
      Code = "[c]",
      Display = "velocity of light",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NutritionLabelCalories = new Coding
    {
      Code = "[Cal]",
      Display = "nutrition label Calories",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CaratOfGoldAlloys = new Coding
    {
      Code = "[car_Au]",
      Display = "carat of gold alloys",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MetricCarat = new Coding
    {
      Code = "[car_m]",
      Display = "metric carat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CELLCULTUREINFECTIOUSDOSE50Percent = new Coding
    {
      Code = "[CCID_50]",
      Display = "CELL CULTURE INFECTIOUS DOSE 50%",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicFoot = new Coding
    {
      Code = "[cft_i]",
      Display = "cubic foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ColonyFormingUnit = new Coding
    {
      Code = "[CFU]",
      Display = "colony forming unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ColonyFormingUnitPerLiter = new Coding
    {
      Code = "[CFU]/L",
      Display = "colony forming unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ColonyFormingUnitPerMilliliter = new Coding
    {
      Code = "[CFU]/mL",
      Display = "colony forming unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FrenchCatheterGauge = new Coding
    {
      Code = "[Ch]",
      Display = "French (catheter gauge)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GunterQuoteSChain = new Coding
    {
      Code = "[ch_br]",
      Display = "Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GunterQuoteSChainSurveyorQuoteSChain = new Coding
    {
      Code = "[ch_us]",
      Display = "Gunter's chain Surveyor's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CiceroDidotQuoteSPica = new Coding
    {
      Code = "[cicero]",
      Display = "cicero Didot's pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicInch = new Coding
    {
      Code = "[cin_i]",
      Display = "cubic inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CircularMil = new Coding
    {
      Code = "[cml_i]",
      Display = "circular mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cord = new Coding
    {
      Code = "[cr_i]",
      Display = "cord",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cord_2 = new Coding
    {
      Code = "[crd_us]",
      Display = "cord",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cup = new Coding
    {
      Code = "[cup_us]",
      Display = "cup",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicYard = new Coding
    {
      Code = "[cyd_i]",
      Display = "cubic yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DANTIGENUNITS = new Coding
    {
      Code = "[D'ag'U]",
      Display = "D-ANTIGEN UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DegreeFahrenheit = new Coding
    {
      Code = "[degF]",
      Display = "degree Fahrenheit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DidotDidotQuoteSPoint = new Coding
    {
      Code = "[didot]",
      Display = "didot Didot's point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Diopter = new Coding
    {
      Code = "[diop]",
      Display = "diopter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DryPint = new Coding
    {
      Code = "[dpt_us]",
      Display = "dry pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DryQuart = new Coding
    {
      Code = "[dqt_us]",
      Display = "dry quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DramDrachm = new Coding
    {
      Code = "[dr_ap]",
      Display = "dram drachm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DramUSAndBritish = new Coding
    {
      Code = "[dr_av]",
      Display = "Dram (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Drop = new Coding
    {
      Code = "[drp]",
      Display = "drop",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DropHPF = new Coding
    {
      Code = "[drp]/[HPF]",
      Display = "drop / HPF",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DropHour = new Coding
    {
      Code = "[drp]/h",
      Display = "drop / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DropMinute = new Coding
    {
      Code = "[drp]/min",
      Display = "drop / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DropMilliliter = new Coding
    {
      Code = "[drp]/mL",
      Display = "drop / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DropSecond = new Coding
    {
      Code = "[drp]/s",
      Display = "drop / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DyeUnit = new Coding
    {
      Code = "[dye'U]",
      Display = "Dye unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElementaryCharge = new Coding
    {
      Code = "[e]",
      Display = "elementary charge",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PermittivityOfVacuum = new Coding
    {
      Code = "[eps_0]",
      Display = "permittivity of vacuum",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluidDram = new Coding
    {
      Code = "[fdr_br]",
      Display = "fluid dram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluidDram_2 = new Coding
    {
      Code = "[fdr_us]",
      Display = "fluid dram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FOCUSFORMINGUNITS = new Coding
    {
      Code = "[FFU]",
      Display = "FOCUS-FORMING UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluidOunce = new Coding
    {
      Code = "[foz_br]",
      Display = "fluid ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluidOunce_2 = new Coding
    {
      Code = "[foz_us]",
      Display = "fluid ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Foot = new Coding
    {
      Code = "[ft_br]",
      Display = "foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Feet = new Coding
    {
      Code = "[ft_i]",
      Display = "Feet",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Foot_2 = new Coding
    {
      Code = "[ft_us]",
      Display = "foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Fathom = new Coding
    {
      Code = "[fth_br]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Fathom_2 = new Coding
    {
      Code = "[fth_i]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Fathom_3 = new Coding
    {
      Code = "[fth_us]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Furlong = new Coding
    {
      Code = "[fur_us]",
      Display = "furlong",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NewtonianConstantOfGravitation = new Coding
    {
      Code = "[G]",
      Display = "Newtonian constant of gravitation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gallon = new Coding
    {
      Code = "[gal_br]",
      Display = "gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding QueenAnneQuoteSWineGallon = new Coding
    {
      Code = "[gal_us]",
      Display = "Queen Anne's wine gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HistoricalWinchesterGallon = new Coding
    {
      Code = "[gal_wi]",
      Display = "historical winchester gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gill = new Coding
    {
      Code = "[gil_br]",
      Display = "gill",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gill_2 = new Coding
    {
      Code = "[gil_us]",
      Display = "gill",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgGAnticardiolipinUnit = new Coding
    {
      Code = "[GPL'U]",
      Display = "IgG anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = new Coding
    {
      Code = "[GPL'U]/mL",
      Display = "IgG anticardiolipin unit per milliliter**",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Grain = new Coding
    {
      Code = "[gr]",
      Display = "grain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PlanckConstant = new Coding
    {
      Code = "[h]",
      Display = "Planck constant",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Hand = new Coding
    {
      Code = "[hd_i]",
      Display = "hand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HounsfieldUnit = new Coding
    {
      Code = "[hnsf'U]",
      Display = "Hounsfield unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Horsepower = new Coding
    {
      Code = "[HP]",
      Display = "horsepower",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFCENTESIMALSERIES = new Coding
    {
      Code = "[hp_C]",
      Display = "HOMEOPATHIC POTENCY OF CENTESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFMILLESIMALSERIES = new Coding
    {
      Code = "[hp_M]",
      Display = "HOMEOPATHIC POTENCY OF MILLESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES = new Coding
    {
      Code = "[hp_Q]",
      Display = "HOMEOPATHIC POTENCY OF QUINTAMILLESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFDECIMALSERIES = new Coding
    {
      Code = "[hp_X]",
      Display = "HOMEOPATHIC POTENCY OF DECIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HighPowerField = new Coding
    {
      Code = "[HPF]",
      Display = "high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Inch = new Coding
    {
      Code = "[in_br]",
      Display = "inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InchInternational = new Coding
    {
      Code = "[in_i]",
      Display = "inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InchInternationalOfWater = new Coding
    {
      Code = "[in_i'H2O]",
      Display = "inch (international) of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InchOfMercuryColumn = new Coding
    {
      Code = "[in_i'Hg]",
      Display = "inch of mercury column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Inch_2 = new Coding
    {
      Code = "[in_us]",
      Display = "inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnit = new Coding
    {
      Code = "[iU]",
      Display = "international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnit_2 = new Coding
    {
      Code = "[IU]",
      Display = "international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPer2Hour = new Coding
    {
      Code = "[IU]/(2.h)",
      Display = "international unit per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPer24Hour = new Coding
    {
      Code = "[IU]/(24.h)",
      Display = "international unit per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerBillionRedBloodCells = new Coding
    {
      Code = "[IU]/10*9{RBCs}",
      Display = "international unit per billion red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerDay = new Coding
    {
      Code = "[IU]/d",
      Display = "international unit per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitsPerDeciLiter = new Coding
    {
      Code = "[iU]/dL",
      Display = "InternationalUnitsPerDeciLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerDeciliter = new Coding
    {
      Code = "[IU]/dL",
      Display = "international unit per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitsPerGram = new Coding
    {
      Code = "[iU]/g",
      Display = "InternationalUnitsPerGram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerGram = new Coding
    {
      Code = "[IU]/g",
      Display = "international unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerGramOfHemoglobin = new Coding
    {
      Code = "[IU]/g{Hb}",
      Display = "international unit per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitGramHgb = new Coding
    {
      Code = "[iU]/g{Hgb}",
      Display = "international unit / gram Hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerHour = new Coding
    {
      Code = "[IU]/h",
      Display = "international unit per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitsPerKilogram = new Coding
    {
      Code = "[iU]/kg",
      Display = "InternationalUnitsPerKilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerKilogram = new Coding
    {
      Code = "[IU]/kg",
      Display = "international unit per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerKilogramPerDay = new Coding
    {
      Code = "[IU]/kg/d",
      Display = "international unit per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitsPerLiter = new Coding
    {
      Code = "[iU]/L",
      Display = "InternationalUnitsPerLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerLiter = new Coding
    {
      Code = "[IU]/L",
      Display = "international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerLiterAt37DegreesCelsius = new Coding
    {
      Code = "[IU]/L{37Cel}",
      Display = "international unit per liter at 37 degrees Celsius",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerMilligramOfCreatinine = new Coding
    {
      Code = "[IU]/mg{creat}",
      Display = "international unit per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerMinute = new Coding
    {
      Code = "[IU]/min",
      Display = "international unit per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitsPerMilliLiter = new Coding
    {
      Code = "[iU]/mL",
      Display = "InternationalUnitsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalUnitPerMilliliter = new Coding
    {
      Code = "[IU]/mL",
      Display = "international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BoltzmannConstant = new Coding
    {
      Code = "[k]",
      Display = "Boltzmann constant",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KingArmstrongUnit = new Coding
    {
      Code = "[ka'U]",
      Display = "King Armstrong unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Knot = new Coding
    {
      Code = "[kn_br]",
      Display = "knot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Knot_2 = new Coding
    {
      Code = "[kn_i]",
      Display = "knot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KunkelUnit = new Coding
    {
      Code = "[knk'U]",
      Display = "Kunkel unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pound = new Coding
    {
      Code = "[lb_ap]",
      Display = "pound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PoundUSAndBritish = new Coding
    {
      Code = "[lb_av]",
      Display = "pound (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pound_2 = new Coding
    {
      Code = "[lb_tr]",
      Display = "pound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PoundForce = new Coding
    {
      Code = "[lbf_av]",
      Display = "pound force",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LongHunderdweightBritishHundredweight = new Coding
    {
      Code = "[lcwt_av]",
      Display = "long hunderdweight British hundredweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LIMITOFFLOCCULATION = new Coding
    {
      Code = "[Lf]",
      Display = "LIMIT OF FLOCCULATION",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LigneFrenchLine = new Coding
    {
      Code = "[ligne]",
      Display = "ligne French line",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LinkForGunterQuoteSChain = new Coding
    {
      Code = "[lk_br]",
      Display = "link for Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LinkForGunterQuoteSChain_2 = new Coding
    {
      Code = "[lk_us]",
      Display = "link for Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Line = new Coding
    {
      Code = "[lne]",
      Display = "line",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LowPowerField = new Coding
    {
      Code = "[LPF]",
      Display = "low power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LongTonBritishTon = new Coding
    {
      Code = "[lton_av]",
      Display = "long ton British ton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LightYear = new Coding
    {
      Code = "[ly]",
      Display = "light-year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElectronMass = new Coding
    {
      Code = "[m_e]",
      Display = "electron mass",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ProtonMass = new Coding
    {
      Code = "[m_p]",
      Display = "proton mass",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MacLaganUnit = new Coding
    {
      Code = "[mclg'U]",
      Display = "Mac Lagan unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mesh = new Coding
    {
      Code = "[mesh_i]",
      Display = "mesh",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MetabolicEquivalent = new Coding
    {
      Code = "[MET]",
      Display = "metabolic equivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mile = new Coding
    {
      Code = "[mi_br]",
      Display = "mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StatuteMile = new Coding
    {
      Code = "[mi_i]",
      Display = "statute mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mile_2 = new Coding
    {
      Code = "[mi_us]",
      Display = "mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mil = new Coding
    {
      Code = "[mil_i]",
      Display = "mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mil_2 = new Coding
    {
      Code = "[mil_us]",
      Display = "mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Minim = new Coding
    {
      Code = "[min_br]",
      Display = "minim",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Minim_2 = new Coding
    {
      Code = "[min_us]",
      Display = "minim",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMAnticardiolipinUnit = new Coding
    {
      Code = "[MPL'U]",
      Display = "IgM anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = new Coding
    {
      Code = "[MPL'U]/mL",
      Display = "IgM anticardiolipin unit per milliliter**",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PermeabilityOfVacuum = new Coding
    {
      Code = "[mu_0]",
      Display = "permeability of vacuum",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NauticalMile = new Coding
    {
      Code = "[nmi_br]",
      Display = "nautical mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NauticalMile_2 = new Coding
    {
      Code = "[nmi_i]",
      Display = "nautical mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OunceUSAndBritish = new Coding
    {
      Code = "[oz_ap]",
      Display = "ounce (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OunceUSAndBritish_2 = new Coding
    {
      Code = "[oz_av]",
      Display = "ounce (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Ounce = new Coding
    {
      Code = "[oz_tr]",
      Display = "ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pace = new Coding
    {
      Code = "[pc_br]",
      Display = "pace",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pica = new Coding
    {
      Code = "[pca]",
      Display = "pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PrinterQuoteSPica = new Coding
    {
      Code = "[pca_pr]",
      Display = "Printer's pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PrismDiopter = new Coding
    {
      Code = "[p'diop]",
      Display = "prism diopter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PLAQUEFORMINGUNITS = new Coding
    {
      Code = "[PFU]",
      Display = "PLAQUE-FORMING UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PH = new Coding
    {
      Code = "[pH]",
      Display = "pH",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberPi = new Coding
    {
      Code = "[pi]",
      Display = "the number pi",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberPiAsteriskRadianMinute = new Coding
    {
      Code = "[pi].rad/min",
      Display = "the number pi * radian / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PiedFrenchFoot = new Coding
    {
      Code = "[pied]",
      Display = "pied French foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Peck = new Coding
    {
      Code = "[pk_br]",
      Display = "peck",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Peck_2 = new Coding
    {
      Code = "[pk_us]",
      Display = "peck",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Point = new Coding
    {
      Code = "[pnt]",
      Display = "point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PrinterQuoteSPoint = new Coding
    {
      Code = "[pnt_pr]",
      Display = "Printer's point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PROTEINNITROGENUNITS = new Coding
    {
      Code = "[PNU]",
      Display = "PROTEIN NITROGEN UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PouceFrenchInch = new Coding
    {
      Code = "[pouce]",
      Display = "pouce French inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PartPerBillion = new Coding
    {
      Code = "[ppb]",
      Display = "part per billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PartPerMillion = new Coding
    {
      Code = "[ppm]",
      Display = "part per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PartPerMillionInVolumePerVolume = new Coding
    {
      Code = "[ppm]{v/v}",
      Display = "part per million in volume per volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PartsPerThousand = new Coding
    {
      Code = "[ppth]",
      Display = "parts per thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PartPerTrillion = new Coding
    {
      Code = "[pptr]",
      Display = "part per trillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PeripheralVascularResistanceUnit = new Coding
    {
      Code = "[PRU]",
      Display = "peripheral vascular resistance unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PoundPerSquareInch = new Coding
    {
      Code = "[psi]",
      Display = "pound per square inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pint = new Coding
    {
      Code = "[pt_br]",
      Display = "pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pint_2 = new Coding
    {
      Code = "[pt_us]",
      Display = "pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pennyweight = new Coding
    {
      Code = "[pwt_tr]",
      Display = "pennyweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Quart = new Coding
    {
      Code = "[qt_br]",
      Display = "quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Quart_2 = new Coding
    {
      Code = "[qt_us]",
      Display = "quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RamdenQuoteSChainEngineerQuoteSChain = new Coding
    {
      Code = "[rch_us]",
      Display = "Ramden's chain Engineer's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Rod = new Coding
    {
      Code = "[rd_br]",
      Display = "rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Rod_2 = new Coding
    {
      Code = "[rd_us]",
      Display = "rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LinkForRamdenQuoteSChain = new Coding
    {
      Code = "[rlk_us]",
      Display = "link for Ramden's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SvedbergUnit = new Coding
    {
      Code = "[S]",
      Display = "Svedberg unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Scruple = new Coding
    {
      Code = "[sc_ap]",
      Display = "scruple",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Section = new Coding
    {
      Code = "[sct]",
      Display = "section",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ShortHundredweightUSHundredweight = new Coding
    {
      Code = "[scwt_av]",
      Display = "short hundredweight U.S. hundredweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareFootInternational = new Coding
    {
      Code = "[sft_i]",
      Display = "square foot (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareInchInternational = new Coding
    {
      Code = "[sin_i]",
      Display = "square inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SomogyiUnit = new Coding
    {
      Code = "[smgy'U]",
      Display = "Somogyi unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareMile = new Coding
    {
      Code = "[smi_us]",
      Display = "square mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Smoot = new Coding
    {
      Code = "[smoot]",
      Display = "Smoot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareRod = new Coding
    {
      Code = "[srd_us]",
      Display = "square rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ShortTonUSTon = new Coding
    {
      Code = "[ston_av]",
      Display = "short ton U.S. ton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StoneBritishStone = new Coding
    {
      Code = "[stone_av]",
      Display = "stone British stone",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareYard = new Coding
    {
      Code = "[syd_i]",
      Display = "square yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TablespoonUS = new Coding
    {
      Code = "[tbs_us]",
      Display = "tablespoon (US)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TuberculinUnit = new Coding
    {
      Code = "[tb'U]",
      Display = "tuberculin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TISSUECULTUREINFECTIOUSDOSE50Percent = new Coding
    {
      Code = "[TCID_50]",
      Display = "TISSUE CULTURE INFECTIOUS DOSE 50%",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ToddUnit = new Coding
    {
      Code = "[todd'U]",
      Display = "Todd unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Teaspoon = new Coding
    {
      Code = "[tsp_us]",
      Display = "teaspoon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Township = new Coding
    {
      Code = "[twp]",
      Display = "township",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UNITEDSTATESPHARMACOPEIAUNIT = new Coding
    {
      Code = "[USP'U]",
      Display = "UNITED STATES PHARMACOPEIA UNIT",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Yard = new Coding
    {
      Code = "[yd_br]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Yard_2 = new Coding
    {
      Code = "[yd_i]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Yard_3 = new Coding
    {
      Code = "[yd_us]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberOfCalculi = new Coding
    {
      Code = "{# of calculi}",
      Display = "# of calculi",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberOfDonorInformativeMarkers = new Coding
    {
      Code = "{# of donor informative markers}",
      Display = "# of donor informative markers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberOfFetuses = new Coding
    {
      Code = "{# of fetuses}",
      Display = "# of fetuses",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberOfInformativeMarkers = new Coding
    {
      Code = "{# of informative markers}",
      Display = "# of informative markers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Number = new Coding
    {
      Code = "{#}",
      Display = "#",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerHighPowerField = new Coding
    {
      Code = "{#}/[HPF]",
      Display = "number per high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerLowPowerField = new Coding
    {
      Code = "{#}/[LPF]",
      Display = "number per low power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerLiter = new Coding
    {
      Code = "{#}/L",
      Display = "number per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerMinute = new Coding
    {
      Code = "{#}/min",
      Display = "number per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerMilliliter = new Coding
    {
      Code = "{#}/mL",
      Display = "number per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NumberPerMicroliter = new Coding
    {
      Code = "{#}/uL",
      Display = "number per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL2Or3TimesDay = new Coding
    {
      Code = "{2 or 3 times}/d",
      Display = "2 or 3 times / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL3TimesDay = new Coding
    {
      Code = "{3 times}/d",
      Display = "3 times / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL4TimesDay = new Coding
    {
      Code = "{4 times}/d",
      Display = "4 times / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL5TimesDay = new Coding
    {
      Code = "{5 times}/d",
      Display = "5 times / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Absorbance = new Coding
    {
      Code = "{absorbance}",
      Display = "absorbance",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AbsorbanceQuoteU = new Coding
    {
      Code = "{Absorbance'U}",
      Display = "Absorbance'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AbsorbanceQuoteUMilliliter = new Coding
    {
      Code = "{Absorbance'U}/mL",
      Display = "Absorbance'U / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Activity = new Coding
    {
      Code = "{activity}",
      Display = "activity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ActivityCoefficient = new Coding
    {
      Code = "{ActivityCoefficient}",
      Display = "ActivityCoefficient",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AHFQuoteU = new Coding
    {
      Code = "{AHF'U}",
      Display = "AHF'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AntibodyResponseQuoteU = new Coding
    {
      Code = "{AntibodyResponse'U}",
      Display = "AntibodyResponse'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Applicator = new Coding
    {
      Code = "{Applicator}",
      Display = "Applicator",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgAAntiphosphatidylserineUnit = new Coding
    {
      Code = "{APS'U}",
      Display = "IgA antiphosphatidylserine unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AspirinResponseUnit = new Coding
    {
      Code = "{ARU}",
      Display = "aspirin response unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AspirinReactionQuoteU = new Coding
    {
      Code = "{AspirinReaction'U}",
      Display = "AspirinReaction'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bead = new Coding
    {
      Code = "{Bead}",
      Display = "Bead",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HeartBeatsPerMinute = new Coding
    {
      Code = "{beats}/min",
      Display = "heart beats per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BeatsMinute = new Coding
    {
      Code = "{Beats}/min",
      Display = "Beats / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BindingIndex = new Coding
    {
      Code = "{binding_index}",
      Display = "binding index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bottle = new Coding
    {
      Code = "{Bottle}",
      Display = "Bottle",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BowlsDay = new Coding
    {
      Code = "{Bowls}/d",
      Display = "Bowls / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BreathsMinute = new Coding
    {
      Code = "{Breaths}/min",
      Display = "Breaths / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ComplementActivityEnzymeUnit = new Coding
    {
      Code = "{CAE'U}",
      Display = "complement activity enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CAGTrinucleotideRepeats = new Coding
    {
      Code = "{CAG_repeats}",
      Display = "CAG trinucleotide repeats",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CagRepeat = new Coding
    {
      Code = "{CagRepeat}",
      Display = "CagRepeat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Can = new Coding
    {
      Code = "{Can}",
      Display = "Can",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CansWeek = new Coding
    {
      Code = "{Cans}/wk",
      Display = "Cans / week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Capsule = new Coding
    {
      Code = "{Capsule}",
      Display = "Capsule",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cell = new Coding
    {
      Code = "{Cell}",
      Display = "Cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cells = new Coding
    {
      Code = "{cells}",
      Display = "cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CellsPerHighPowerField = new Coding
    {
      Code = "{cells}/[HPF]",
      Display = "cells per high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CellsMilliliter = new Coding
    {
      Code = "{Cells}/mL",
      Display = "Cells / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CellsPerMicroliter = new Coding
    {
      Code = "{cells}/uL",
      Display = "cells per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CellsPerMicroLiter = new Coding
    {
      Code = "{Cells}/uL",
      Display = "CellsPerMicroLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CfTiter = new Coding
    {
      Code = "{CfTiter}",
      Display = "CfTiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Cfu = new Coding
    {
      Code = "{cfu}",
      Display = "cfu",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CfuMilliliter = new Coding
    {
      Code = "{cfu}/mL",
      Display = "cfu / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CGGRepeats = new Coding
    {
      Code = "{CGG_repeats}",
      Display = "CGG_repeats",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CGG = new Coding
    {
      Code = "{CGG}",
      Display = "CGG",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ComplementCH100Unit = new Coding
    {
      Code = "{CH100'U}",
      Display = "complement CH100 unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ClockTime = new Coding
    {
      Code = "{clock time}",
      Display = "clock time",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ClockTime_2 = new Coding
    {
      Code = "{clock_time}",
      Display = "clock_time",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ComplementActivityEnzymeQuoteU = new Coding
    {
      Code = "{ComplementActivityEnzyme'U}",
      Display = "ComplementActivityEnzyme'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ComplementCH100QuoteU = new Coding
    {
      Code = "{ComplementCH100'U}",
      Display = "ComplementCH100'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ComplementCH50QuoteU = new Coding
    {
      Code = "{ComplementCH50'U}",
      Display = "ComplementCH50'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Copies = new Coding
    {
      Code = "{copies}",
      Display = "copies",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CopiesPerMilliliter = new Coding
    {
      Code = "{copies}/mL",
      Display = "copies per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CopiesPerMilliLiter = new Coding
    {
      Code = "{Copies}/mL",
      Display = "CopiesPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CopiesPerMicrogram = new Coding
    {
      Code = "{copies}/ug",
      Display = "copies per microgram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CopiesMicroliter = new Coding
    {
      Code = "{Copies}/uL",
      Display = "Copies / microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Count = new Coding
    {
      Code = "{count}",
      Display = "count",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Count_2 = new Coding
    {
      Code = "{Count}",
      Display = "Count",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CountsMinute = new Coding
    {
      Code = "{Counts}/min",
      Display = "Counts / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CountsPerMinute = new Coding
    {
      Code = "{CPM}",
      Display = "counts per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CountsPerMinutePerThousandCells = new Coding
    {
      Code = "{CPM}/10*3{cell}",
      Display = "counts per minute per thousand cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CrossingThreshold = new Coding
    {
      Code = "{Ct}",
      Display = "crossing threshold",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Dalton = new Coding
    {
      Code = "{Dalton}",
      Display = "Dalton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DdTiter = new Coding
    {
      Code = "{DdTiter}",
      Display = "DdTiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ChangeInDeltaOpticalDensity = new Coding
    {
      Code = "{delta_OD}",
      Display = "change in (delta) optical density",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DeltaOpticalDensity = new Coding
    {
      Code = "{DeltaOpticalDensity}",
      Display = "DeltaOpticalDensity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Dilution = new Coding
    {
      Code = "{dilution}",
      Display = "dilution",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Dilution_2 = new Coding
    {
      Code = "{Dilution}",
      Display = "dilution",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DisintegrationsMinute = new Coding
    {
      Code = "{Disintegrations}/min",
      Display = "Disintegrations / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Dose = new Coding
    {
      Code = "{Dose}",
      Display = "Dose",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DrinksDay = new Coding
    {
      Code = "{Drinks}/d",
      Display = "Drinks / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Each = new Coding
    {
      Code = "{Each}",
      Display = "Each",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnitsPerDeciLiter = new Coding
    {
      Code = "{Ehrlich_U}/dL",
      Display = "EhrlichUnitsPerDeciLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnit = new Coding
    {
      Code = "{Ehrlich'U}",
      Display = "Ehrlich unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnitPer2Hour = new Coding
    {
      Code = "{Ehrlich'U}/(2.h)",
      Display = "Ehrlich unit per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnitPer100Gram = new Coding
    {
      Code = "{Ehrlich'U}/100.g",
      Display = "Ehrlich unit per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnitPerDay = new Coding
    {
      Code = "{Ehrlich'U}/d",
      Display = "Ehrlich unit per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichUnitsPerDeciLiterArbitraryConcentrationUnits = new Coding
    {
      Code = "{EhrlichU}/dL",
      Display = "EhrlichUnitsPerDeciLiter [Arbitrary Concentration Units]",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrilichUnitPerDeciliter = new Coding
    {
      Code = "{Ehrlich'U}/dL",
      Display = "Ehrilich unit per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EhrlichQuoteUMilliliter = new Coding
    {
      Code = "{Ehrlich'U}/mL",
      Display = "Ehrlich'U / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIAIndex = new Coding
    {
      Code = "{EIA_index}",
      Display = "EIA index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIATiter = new Coding
    {
      Code = "{EIA_titer}",
      Display = "EIA titer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIAIndex_2 = new Coding
    {
      Code = "{EIAIndex}",
      Display = "EIA index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIATiter_2 = new Coding
    {
      Code = "{EIATiter}",
      Display = "EIA titer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIAUnit = new Coding
    {
      Code = "{EIA'U}",
      Display = "EIA unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIAUnitPerEnzymeUnit = new Coding
    {
      Code = "{EIA'U}/U",
      Display = "EIA unit per enzyme Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElisaUnitsPerMilliLiter = new Coding
    {
      Code = "{Elisa_U}/mL",
      Display = "ElisaUnitsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElisaIndex = new Coding
    {
      Code = "{ElisaIndex}",
      Display = "ElisaIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ELISAUnit = new Coding
    {
      Code = "{ELISA'U}",
      Display = "ELISA unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElisaUnitsPerMilliLiterArbitraryConcentrationUnits = new Coding
    {
      Code = "{ElisaU}/mL",
      Display = "ElisaUnitsPerMilliLiter [Arbitrary Concentration Units]",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElisaQuoteUMilliliter = new Coding
    {
      Code = "{Elisa'U}/mL",
      Display = "Elisa'U / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ElisaValue = new Coding
    {
      Code = "{ElisaValue}",
      Display = "ElisaValue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ErythrocytePerMicroliter = new Coding
    {
      Code = "{ERY}/uL",
      Display = "erythrocyte per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EIAValue = new Coding
    {
      Code = "{EV}",
      Display = "EIA value",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Events = new Coding
    {
      Code = "{Events}",
      Display = "Events",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluorescentIntensityUnit = new Coding
    {
      Code = "{FIU}",
      Display = "fluorescent intensity unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FluorescenceIntensityQuoteU = new Coding
    {
      Code = "{FluorescenceIntensity'U}",
      Display = "FluorescenceIntensity'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Fraction = new Coding
    {
      Code = "{fraction}",
      Display = "fraction",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GAATrinucleotideRepeats = new Coding
    {
      Code = "{GAA_repeats}",
      Display = "GAA trinucleotide repeats",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GenomesPerMilliliter = new Coding
    {
      Code = "{genomes}/mL",
      Display = "genomes per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GliadinIndexValue = new Coding
    {
      Code = "{GliadinIndexValue}",
      Display = "GliadinIndexValue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GlobulesDropsPerHighPowerField = new Coding
    {
      Code = "{Globules}/[HPF]",
      Display = "globules (drops)  per high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GPortionPhospholipids = new Coding
    {
      Code = "{G-PortionPhospholipids}",
      Display = "G-PortionPhospholipids",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgGAntiphosphatidylserineUnit = new Coding
    {
      Code = "{GPS'U}",
      Display = "IgG antiphosphatidylserine unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InfluenzaHemagglutinationTiter = new Coding
    {
      Code = "{HA_titer}",
      Display = "influenza hemagglutination titer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HaTiter = new Coding
    {
      Code = "{HaTiter}",
      Display = "HaTiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ImmunofluorescenceAssayIndex = new Coding
    {
      Code = "{IFA_index}",
      Display = "immunofluorescence assay index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ImmunofluorescenceAssayTiter = new Coding
    {
      Code = "{IFA_titer}",
      Display = "Immunofluorescence assay titer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IfaIndex = new Coding
    {
      Code = "{IfaIndex}",
      Display = "IfaIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IfaTiter = new Coding
    {
      Code = "{IfaTiter}",
      Display = "IfaTiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgAAntiphosphatidyleserineQuoteU = new Coding
    {
      Code = "{IgAAntiphosphatidyleserine'U}",
      Display = "IgAAntiphosphatidyleserine'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgAPhospholipidQuoteU = new Coding
    {
      Code = "{IgAPhospholipid'U}",
      Display = "IgAPhospholipid'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgGAntiphosphatidyleserineQuoteU = new Coding
    {
      Code = "{IgGAntiphosphatidyleserine'U}",
      Display = "IgGAntiphosphatidyleserine'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgGIndex = new Coding
    {
      Code = "{IgGIndex}",
      Display = "IgGIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMAntiphosphatidyleserineQuoteU = new Coding
    {
      Code = "{IgMAntiphosphatidyleserine'U}",
      Display = "IgMAntiphosphatidyleserine'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMIndex = new Coding
    {
      Code = "{IgMIndex}",
      Display = "IgMIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ImmuneComplexUnit = new Coding
    {
      Code = "{ImmuneComplex'U}",
      Display = "immune complex unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ImmuneStatusRatio = new Coding
    {
      Code = "{ImmuneStatusRatio}",
      Display = "ImmuneStatusRatio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Immunity = new Coding
    {
      Code = "{Immunity}",
      Display = "Immunity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IndexValue = new Coding
    {
      Code = "{index_val}",
      Display = "index value",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IndexVal = new Coding
    {
      Code = "{Index_val}",
      Display = "Index_val",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Index = new Coding
    {
      Code = "{index}",
      Display = "index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IndexValue_2 = new Coding
    {
      Code = "{IndexValue}",
      Display = "IndexValue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InhaledTobaccoUseAmountYears = new Coding
    {
      Code = "{InhaledTobaccoUseAmountYears}",
      Display = "InhaledTobaccoUseAmountYears",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InhaledTobaccoUsePacksDay = new Coding
    {
      Code = "{InhaledTobaccoUsePacks}/d",
      Display = "InhaledTobaccoUsePacks / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalNormalizedRatio = new Coding
    {
      Code = "{INR}",
      Display = "international normalized ratio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding INRQuoteUnit = new Coding
    {
      Code = "{INR'unit}",
      Display = "INR'unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ImmuneStatusRatio_2 = new Coding
    {
      Code = "{ISR}",
      Display = "immune status ratio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding JuvenileDiabetesFoundationUnit = new Coding
    {
      Code = "{JDF'U}",
      Display = "Juvenile Diabetes Foundation unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding JuvenileDiabetesFoundationUnitPerLiter = new Coding
    {
      Code = "{JDF'U}/L",
      Display = "Juvenile Diabetes Foundation unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding JuvenileDiabetesFoundQuoteU = new Coding
    {
      Code = "{JuvenileDiabetesFound'U}",
      Display = "JuvenileDiabetesFound'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KaolinClottingTime = new Coding
    {
      Code = "{KCT'U}",
      Display = "kaolin clotting time",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES = new Coding
    {
      Code = "{kp_C}",
      Display = "HOMEOPATHIC POTENCY OF CENTESIMAL KORSAKOVIAN SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KronusUnitPerLiter = new Coding
    {
      Code = "{KRONU'U}/L",
      Display = "Kronus unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KronusUnitPerMilliliter = new Coding
    {
      Code = "{KRONU'U}/mL",
      Display = "Kronus unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LgCopiesMilliliter = new Coding
    {
      Code = "{lgCopies}/ml",
      Display = "lgCopies / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10CopiesPerMilliliter = new Coding
    {
      Code = "{log_copies}/mL",
      Display = "log (base 10) copies per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10CopiesPerMilliliter_2 = new Coding
    {
      Code = "{Log_copies}/mL",
      Display = "log (base 10) copies per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10InternationalUnit = new Coding
    {
      Code = "{Log_IU}",
      Display = "log (base 10) international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10InternationalUnitPerMilliliter = new Coding
    {
      Code = "{log_IU}/mL",
      Display = "log (base 10) international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10InternationalUnitPerMilliliter_2 = new Coding
    {
      Code = "{Log_IU}/mL",
      Display = "log (base 10) international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogBase10 = new Coding
    {
      Code = "{Log}",
      Display = "log base 10",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LymeIndexValue = new Coding
    {
      Code = "{Lyme_index_value}",
      Display = "Lyme index value",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LymeIndexValue_2 = new Coding
    {
      Code = "{LymeIndexValue}",
      Display = "LymeIndexValue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MOM = new Coding
    {
      Code = "{M.o.M.}",
      Display = "M.o.M.",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MultipleOfTheMedian = new Coding
    {
      Code = "{M.o.M}",
      Display = "multiple of the median",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Markers = new Coding
    {
      Code = "{Markers}",
      Display = "Markers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MinidropPerMinute = new Coding
    {
      Code = "{minidrop}/min",
      Display = "minidrop per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MinidropPerSecond = new Coding
    {
      Code = "{minidrop}/s",
      Display = "minidrop per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Minidrp = new Coding
    {
      Code = "{minidrp}",
      Display = "minidrp",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MonthDayYear = new Coding
    {
      Code = "{mm/dd/yyyy}",
      Display = "month-day-year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MoleculePerPlatelet = new Coding
    {
      Code = "{molecule}/{platelet}",
      Display = "molecule per platelet",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MoleculePlatelet = new Coding
    {
      Code = "{Molecule}/{Platelet}",
      Display = "Molecule / Platelet",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MPortionPhospholipids = new Coding
    {
      Code = "{M-PortionPhospholipids}",
      Display = "M-PortionPhospholipids",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMAntiphosphatidylserineUnit = new Coding
    {
      Code = "{MPS'U}",
      Display = "IgM antiphosphatidylserine unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding IgMAntiphosphatidylserineUnitPerMilliliter = new Coding
    {
      Code = "{MPS'U}/mL",
      Display = "IgM antiphosphatidylserine unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MultOfMean = new Coding
    {
      Code = "{MultOfMean}",
      Display = "MultOfMean",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mutation = new Coding
    {
      Code = "{mutation}",
      Display = "mutation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NonspecificOunce = new Coding
    {
      Code = "{NonspecificOunce}",
      Display = "NonspecificOunce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Number_2 = new Coding
    {
      Code = "{Number}",
      Display = "Number",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OpticalDensityUnit = new Coding
    {
      Code = "{OD_unit}",
      Display = "optical density unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OnceDay = new Coding
    {
      Code = "{Once}/d",
      Display = "Once / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OpticalDensity = new Coding
    {
      Code = "{OpticalDensity}",
      Display = "OpticalDensity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OpticalDensityIndex = new Coding
    {
      Code = "{OpticalDensityIndex}",
      Display = "OpticalDensityIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OpticalDensityRatio = new Coding
    {
      Code = "{OpticalDensityRatio}",
      Display = "OpticalDensityRatio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding P2Y12ReactionUnits = new Coding
    {
      Code = "{P2Y12 Reaction Units}",
      Display = "P2Y12 Reaction Units",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Package = new Coding
    {
      Code = "{Package}",
      Display = "Package",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PacksDay = new Coding
    {
      Code = "{Packs}/d",
      Display = "Packs / day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PackYears = new Coding
    {
      Code = "{PackYears}",
      Display = "PackYears",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PanbioUnit = new Coding
    {
      Code = "{Pan_Bio'U}",
      Display = "panbio unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Patch = new Coding
    {
      Code = "{Patch}",
      Display = "Patch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Percentile = new Coding
    {
      Code = "{percentile}",
      Display = "percentile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Percentile_2 = new Coding
    {
      Code = "{Percentile}",
      Display = "Percentile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Phenotype = new Coding
    {
      Code = "{phenotype}",
      Display = "phenotype",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pill = new Coding
    {
      Code = "{Pill}",
      Display = "Pill",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PouchesWeek = new Coding
    {
      Code = "{Pouches}/wk",
      Display = "Pouches / week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RadioactiveT3UptakeRatio = new Coding
    {
      Code = "{RadioactiveT3UptakeRatio}",
      Display = "RadioactiveT3UptakeRatio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Ratio = new Coding
    {
      Code = "{ratio}",
      Display = "ratio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RedBloodCellCount = new Coding
    {
      Code = "{rbc}",
      Display = "red blood cell count",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RedBloodCellPerMicroliter = new Coding
    {
      Code = "{RBC}/uL",
      Display = "red blood cell per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RecTiter = new Coding
    {
      Code = "{RecTiter}",
      Display = "RecTiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RelativeSaturation = new Coding
    {
      Code = "{relative_saturation}",
      Display = "relative saturation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RelativeQuoteU = new Coding
    {
      Code = "{Relative'U}",
      Display = "Relative'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RelativeViscosity = new Coding
    {
      Code = "{RelativeViscosity}",
      Display = "RelativeViscosity",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RPIQuoteU = new Coding
    {
      Code = "{RPI'U}",
      Display = "RPI'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RubellaVirus = new Coding
    {
      Code = "{Rubella_virus}",
      Display = "rubella virus",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RubellaVirus_2 = new Coding
    {
      Code = "{RubellaVirus}",
      Display = "RubellaVirus",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SignalToCutoffRatio = new Coding
    {
      Code = "{s_co_ratio}",
      Display = "signal to cutoff ratio",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SatIndex = new Coding
    {
      Code = "{SatIndex}",
      Display = "SatIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Saturation = new Coding
    {
      Code = "{saturation}",
      Display = "saturation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Scoop = new Coding
    {
      Code = "{Scoop}",
      Display = "Scoop",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ScoreOf = new Coding
    {
      Code = "{ScoreOf}",
      Display = "ScoreOf",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Shift = new Coding
    {
      Code = "{shift}",
      Display = "shift",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SpermatozoaPerMilliliter = new Coding
    {
      Code = "{spermatozoa}/mL",
      Display = "spermatozoa per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SpermatozoaPerMilliLiter = new Coding
    {
      Code = "{Spermatozoa}/mL",
      Display = "SpermatozoaPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Spray = new Coding
    {
      Code = "{spray}",
      Display = "spray",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardDeviation = new Coding
    {
      Code = "{StandardDeviation}",
      Display = "StandardDeviation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardIgAQuoteU = new Coding
    {
      Code = "{StandardIgA'U}",
      Display = "StandardIgA'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardIgGQuoteU = new Coding
    {
      Code = "{StandardIgG'U}",
      Display = "StandardIgG'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardIgMQuoteU = new Coding
    {
      Code = "{StandardIgM'U}",
      Display = "StandardIgM'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StdDeviationQuoteU = new Coding
    {
      Code = "{StdDeviation'U}",
      Display = "StdDeviation'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardDeviation_2 = new Coding
    {
      Code = "{STDV}",
      Display = "standard deviation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StimulatingIndex = new Coding
    {
      Code = "{StimulatingIndex}",
      Display = "StimulatingIndex",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StreptozymeQuoteU = new Coding
    {
      Code = "{Streptozyme'U}",
      Display = "Streptozyme'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Tablets = new Coding
    {
      Code = "{tbl}",
      Display = "tablets",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThyroxinUptakeQuoteU = new Coding
    {
      Code = "{ThyroxinUptake'U}",
      Display = "ThyroxinUptake'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TIBCQuoteU = new Coding
    {
      Code = "{TIBC'U}",
      Display = "TIBC'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TimesWeek = new Coding
    {
      Code = "{Times}/wk",
      Display = "Times / week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TineQuoteU = new Coding
    {
      Code = "{Tine'U}",
      Display = "Tine'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Titer = new Coding
    {
      Code = "{titer}",
      Display = "titer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ParticlesTotalCount = new Coding
    {
      Code = "{tot}",
      Display = "particles total count",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ToxoplasmaIndexValue = new Coding
    {
      Code = "{ToxoplasmaIndexValue}",
      Display = "ToxoplasmaIndexValue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThyroidStimulatingImmunoglobulinIndex = new Coding
    {
      Code = "{TSI_index}",
      Display = "thyroid-stimulating immunoglobulin index",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Vial = new Coding
    {
      Code = "{Vial}",
      Display = "Vial",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VolumeVvolume = new Coding
    {
      Code = "{Volume}/{Vvolume}",
      Display = "Volume / Vvolume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding WhiteBloodCells = new Coding
    {
      Code = "{WBCs}",
      Display = "white blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding WeeksDays = new Coding
    {
      Code = "{WeeksDays}",
      Display = "WeeksDays",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding WhiteBloodCell = new Coding
    {
      Code = "{WhiteBloodCell}",
      Display = "WhiteBloodCell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL1Asterisk = new Coding
    {
      Code = "1",
      Display = "1*",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OnePerDay = new Coding
    {
      Code = "1/d",
      Display = "one per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OnePerMinute = new Coding
    {
      Code = "1/min",
      Display = "one per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowers = new Coding
    {
      Code = "10*",
      Display = "the number ten for arbitrary powers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TrillionPerLiter = new Coding
    {
      Code = "10*12/L",
      Display = "trillion per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Thousand = new Coding
    {
      Code = "10*3",
      Display = "Thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandRedBloodCells = new Coding
    {
      Code = "10*3.{RBC}",
      Display = "Thousand Red Blood Cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandPerAsteriskUnit = new Coding
    {
      Code = "10*3.U",
      Display = "Thousand Per * Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandPerLiter = new Coding
    {
      Code = "10*3/L",
      Display = "Thousand Per Liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandPerMilliLiter = new Coding
    {
      Code = "10*3/mL",
      Display = "Thousand Per MilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandsPerMicroLiter = new Coding
    {
      Code = "10*3/uL",
      Display = "Thousands Per MicroLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandCopiesPerMilliliter = new Coding
    {
      Code = "10*3{copies}/mL",
      Display = "thousand copies per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandCopiesPerMilliLiter = new Coding
    {
      Code = "10*3{Copies}/mL",
      Display = "Thousand Copies Per MilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower3PolarizationQuoteU = new Coding
    {
      Code = "10*-3{Polarization'U}",
      Display = "(the number ten for arbitrary powers ^ -3) Polarization'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThousandRedBloodCells_2 = new Coding
    {
      Code = "10*3{RBCs}",
      Display = "thousand red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10ThousandPerMicroliter = new Coding
    {
      Code = "10*4/uL",
      Display = "10 thousand per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OneHundredThousand = new Coding
    {
      Code = "10*5",
      Display = "OneHundredThousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Million = new Coding
    {
      Code = "10*6",
      Display = "Million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionColonyFormingUnitPerLiter = new Coding
    {
      Code = "10*6.[CFU]/L",
      Display = "million colony forming unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionInternationalUnit = new Coding
    {
      Code = "10*6.[iU]",
      Display = "MillionInternationalUnit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionInternationalUnit_2 = new Coding
    {
      Code = "10*6.[IU]",
      Display = "million international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionEquivalentsPerMilliLiter = new Coding
    {
      Code = "10*6.eq/mL",
      Display = "MillionEquivalentsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6AsteriskUnit = new Coding
    {
      Code = "10*6.U",
      Display = "(the number ten for arbitrary powers ^ 6) * Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPer24Hour = new Coding
    {
      Code = "10*6/(24.h)",
      Display = "million per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPerSpecimen = new Coding
    {
      Code = "10*6/{Specimen}",
      Display = "MillionPerSpecimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPerKilogram = new Coding
    {
      Code = "10*6/kg",
      Display = "million per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPerLiter = new Coding
    {
      Code = "10*6/L",
      Display = "million per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPerMilliliter = new Coding
    {
      Code = "10*6/mL",
      Display = "million per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6MillimeterPower3 = new Coding
    {
      Code = "10*6/mm3",
      Display = "(the number ten for arbitrary powers ^ 6) / (millimeter ^ 3)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillionPerMicroliter = new Coding
    {
      Code = "10*6/uL",
      Display = "million per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6ImmunofluorescenceQuoteU = new Coding
    {
      Code = "10*-6{Immunofluorescence'U}",
      Display = "(the number ten for arbitrary powers ^ -6) Immunofluorescence'U",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TenToEighth = new Coding
    {
      Code = "10*8",
      Display = "TenToEighth",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BillionPerLiter = new Coding
    {
      Code = "10*9/L",
      Display = "billion per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BillionPerMilliliter = new Coding
    {
      Code = "10*9/mL",
      Display = "billion per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BillionPerMicroliter = new Coding
    {
      Code = "10*9/uL",
      Display = "billion per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10LiterPerMinutePerSquareMeter = new Coding
    {
      Code = "10.L/(min.m2)",
      Display = "10 liter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10LiterPerMinute = new Coding
    {
      Code = "10.L/min",
      Display = "10 liter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = new Coding
    {
      Code = "10.uN.s/(cm.m2)",
      Display = "10 * microNewton * second / centimeter * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = new Coding
    {
      Code = "10.uN.s/(cm5.m2)",
      Display = "10 micronewton second per centimeter to the fifth power per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeter = new Coding
    {
      Code = "10.uN.s/cm",
      Display = "10 * microNewton * second / centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = new Coding
    {
      Code = "10.uN.s/cm2",
      Display = "10 * microNewton * second / (centimeter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowers_2 = new Coding
    {
      Code = "10^",
      Display = "the number ten for arbitrary powers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VAL24Hour = new Coding
    {
      Code = "24.h",
      Display = "24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Year = new Coding
    {
      Code = "a",
      Display = "year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Ampre = new Coding
    {
      Code = "A",
      Display = "Ampère",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AmpreMeter = new Coding
    {
      Code = "A/m",
      Display = "Ampère / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanGregorianYear = new Coding
    {
      Code = "a_g",
      Display = "mean Gregorian year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanJulianYear = new Coding
    {
      Code = "a_j",
      Display = "mean Julian year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TropicalYear = new Coding
    {
      Code = "a_t",
      Display = "tropical year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AttogramPerCell = new Coding
    {
      Code = "ag/{cell}",
      Display = "attogram per cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Ngstrm = new Coding
    {
      Code = "Ao",
      Display = "Ångström",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Are = new Coding
    {
      Code = "ar",
      Display = "are",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding StandardAtmosphere = new Coding
    {
      Code = "atm",
      Display = "standard atmosphere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding TechnicalAtmosphere = new Coding
    {
      Code = "att",
      Display = "technical atmosphere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AstronomicUnit = new Coding
    {
      Code = "AU",
      Display = "astronomic unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Barn = new Coding
    {
      Code = "b",
      Display = "barn",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bel = new Coding
    {
      Code = "B",
      Display = "bel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelKilowatt = new Coding
    {
      Code = "B[kW]",
      Display = "bel kilowatt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelMillivolt = new Coding
    {
      Code = "B[mV]",
      Display = "bel millivolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelSoundPressure = new Coding
    {
      Code = "B[SPL]",
      Display = "bel sound pressure",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelMicrovolt = new Coding
    {
      Code = "B[uV]",
      Display = "bel microvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelVolt = new Coding
    {
      Code = "B[V]",
      Display = "bel volt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BelWatt = new Coding
    {
      Code = "B[W]",
      Display = "bel watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bar = new Coding
    {
      Code = "bar",
      Display = "bar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Baud = new Coding
    {
      Code = "Bd",
      Display = "baud",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Biot = new Coding
    {
      Code = "Bi",
      Display = "Biot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bit = new Coding
    {
      Code = "bit",
      Display = "bit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Bit_2 = new Coding
    {
      Code = "bit_s",
      Display = "bit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Becquerel = new Coding
    {
      Code = "Bq",
      Display = "Becquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding VALByte = new Coding
    {
      Code = "By",
      Display = "byte",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Coulomb = new Coding
    {
      Code = "C",
      Display = "Coulomb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Calorie = new Coding
    {
      Code = "cal",
      Display = "calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CalorieAt15DegreesC = new Coding
    {
      Code = "cal_[15]",
      Display = "calorie at 15 °C",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CalorieAt20DegreesC = new Coding
    {
      Code = "cal_[20]",
      Display = "calorie at 20 °C",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InternationalTableCalorie = new Coding
    {
      Code = "cal_IT",
      Display = "international table calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanCalorie = new Coding
    {
      Code = "cal_m",
      Display = "mean calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ThermochemicalCalorie = new Coding
    {
      Code = "cal_th",
      Display = "thermochemical calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Candela = new Coding
    {
      Code = "cd",
      Display = "candela",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DegreeCelsius = new Coding
    {
      Code = "Cel",
      Display = "degree Celsius",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Centigram = new Coding
    {
      Code = "cg",
      Display = "centigram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CURIE = new Coding
    {
      Code = "Ci",
      Display = "CURIE",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Circle = new Coding
    {
      Code = "circ",
      Display = "circle",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Centiliter = new Coding
    {
      Code = "cL",
      Display = "centiliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Centimeter = new Coding
    {
      Code = "cm",
      Display = "centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentimeterOfWater = new Coding
    {
      Code = "cm[H2O]",
      Display = "centimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentimeterOfWaterColumnSecondAsteriskMeter = new Coding
    {
      Code = "cm[H2O]/(s.m)",
      Display = "centimeter of water column / second * meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentimeterOfWaterPerLiterPerSecond = new Coding
    {
      Code = "cm[H2O]/L/s",
      Display = "centimeter of water per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentimeterOfWaterPerSecondPerMeter = new Coding
    {
      Code = "cm[H2O]/s/m",
      Display = "centimeter of water per second per meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentimeterOfMercury = new Coding
    {
      Code = "cm[Hg]",
      Display = "centimeter of mercury",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareCentimeter = new Coding
    {
      Code = "cm2",
      Display = "square centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareCentimeterPerSecond = new Coding
    {
      Code = "cm2/s",
      Display = "square centimeter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicCentimeter = new Coding
    {
      Code = "cm3",
      Display = "cubic centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentiPoise = new Coding
    {
      Code = "cP",
      Display = "centiPoise",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CentiStokes = new Coding
    {
      Code = "cSt",
      Display = "centiStokes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Day = new Coding
    {
      Code = "d",
      Display = "day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DekaliterPerMinute = new Coding
    {
      Code = "daL/min",
      Display = "dekaliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DekaliterPerMinutePerSquareMeter = new Coding
    {
      Code = "daL/min/m2",
      Display = "dekaliter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Decibel = new Coding
    {
      Code = "dB",
      Display = "decibel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Degree = new Coding
    {
      Code = "deg",
      Display = "degree",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DegreePerSecond = new Coding
    {
      Code = "deg/s",
      Display = "degree per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Decigram = new Coding
    {
      Code = "dg",
      Display = "decigram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Deciliter = new Coding
    {
      Code = "dL",
      Display = "deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Decimeter = new Coding
    {
      Code = "dm",
      Display = "decimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareDecimeterPerSquareSecond = new Coding
    {
      Code = "dm2/s2",
      Display = "square decimeter per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Dyne = new Coding
    {
      Code = "dyn",
      Display = "dyne",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DyneSecondPerCentimeterPerSquareMeter = new Coding
    {
      Code = "dyn.s/(cm.m2)",
      Display = "dyne second per centimeter per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding DyneSecondPerCentimeter = new Coding
    {
      Code = "dyn.s/cm",
      Display = "dyne second per centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Equivalents = new Coding
    {
      Code = "eq",
      Display = "equivalents",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EquivalentsLiter = new Coding
    {
      Code = "eq/L",
      Display = "equivalents / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EquivalentsMilliliter = new Coding
    {
      Code = "eq/mL",
      Display = "equivalents / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EquivalentsMillimole = new Coding
    {
      Code = "eq/mmol",
      Display = "equivalents / millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EquivalentsMicromole = new Coding
    {
      Code = "eq/umol",
      Display = "equivalents / micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Erg = new Coding
    {
      Code = "erg",
      Display = "erg",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Electronvolt = new Coding
    {
      Code = "eV",
      Display = "electronvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Farad = new Coding
    {
      Code = "F",
      Display = "Farad",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Femtogram = new Coding
    {
      Code = "fg",
      Display = "femtogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Femtoliter = new Coding
    {
      Code = "fL",
      Display = "femtoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtoliterNanoliter = new Coding
    {
      Code = "fL/nL",
      Display = "femtoliter / nanoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Femtometer = new Coding
    {
      Code = "fm",
      Display = "femtometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Femtomole = new Coding
    {
      Code = "fmol",
      Display = "femtomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomolePerGram = new Coding
    {
      Code = "fmol/g",
      Display = "femtomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomolePerLiter = new Coding
    {
      Code = "fmol/L",
      Display = "femtomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomoleMilligram = new Coding
    {
      Code = "fmol/mg",
      Display = "femtomole / milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomolePerMilligramOfCytosolProtein = new Coding
    {
      Code = "fmol/mg{cytosol_protein}",
      Display = "femtomole per milligram of cytosol protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomolePerMilligramOfProtein = new Coding
    {
      Code = "fmol/mg{protein}",
      Display = "femtomole per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding FemtomoleMilliliter = new Coding
    {
      Code = "fmol/mL",
      Display = "femtomole / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gram = new Coding
    {
      Code = "g",
      Display = "gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gauss = new Coding
    {
      Code = "G",
      Display = "Gauss",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPercent = new Coding
    {
      Code = "g%",
      Display = "gram percent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramAsteriskMeter = new Coding
    {
      Code = "g.m",
      Display = "gram * meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramAsteriskMeterHbAsteriskMeterPower2 = new Coding
    {
      Code = "g.m/({hb}.m2)",
      Display = "gram * meter / hb * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramMeterPerHeartBeat = new Coding
    {
      Code = "g.m/{beat}",
      Display = "gram meter per heart beat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramMeterPerHeartbeat = new Coding
    {
      Code = "g.m/{H.B.}",
      Display = "gram meter per heartbeat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramAsteriskMeterHb = new Coding
    {
      Code = "g.m/{hb}",
      Display = "gram * meter / hb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer100Gram = new Coding
    {
      Code = "g/(100.g)",
      Display = "gram per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer12Hour = new Coding
    {
      Code = "g/(12.h)",
      Display = "gram per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer24Hour = new Coding
    {
      Code = "g/(24.h)",
      Display = "gram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer3Days = new Coding
    {
      Code = "g/(3.d)",
      Display = "gram per 3 days",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer4Hour = new Coding
    {
      Code = "g/(4.h)",
      Display = "gram per 4 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer48Hour = new Coding
    {
      Code = "g/(48.h)",
      Display = "gram per 48 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer5Hour = new Coding
    {
      Code = "g/(5.h)",
      Display = "gram per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer6Hour = new Coding
    {
      Code = "g/(6.h)",
      Display = "gram per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer72Hour = new Coding
    {
      Code = "g/(72.h)",
      Display = "gram per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gram8AsteriskHour = new Coding
    {
      Code = "g/(8.h)",
      Display = "gram / 8 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPer8HourShift = new Coding
    {
      Code = "g/(8.h){shift}",
      Display = "gram per 8 hour shift",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gram8AsteriskKilogramAsteriskHour = new Coding
    {
      Code = "g/(8.kg.h)",
      Display = "gram / 8 * kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramKilogramAsteriskHour = new Coding
    {
      Code = "g/(kg.h)",
      Display = "gram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramKilogramAsteriskMinute = new Coding
    {
      Code = "g/(kg.min)",
      Display = "gram / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerSpecimen = new Coding
    {
      Code = "g/{specimen}",
      Display = "gram per specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerTotalOutput = new Coding
    {
      Code = "g/{total_output}",
      Display = "gram per total output",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerTotalWeight = new Coding
    {
      Code = "g/{total_weight}",
      Display = "gram per total weight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramTotalWeight = new Coding
    {
      Code = "g/{TotalWeight}",
      Display = "gram / TotalWeight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerCubicCentimeter = new Coding
    {
      Code = "g/cm3",
      Display = "gram per cubic centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerDay = new Coding
    {
      Code = "g/d",
      Display = "gram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerDeciliter = new Coding
    {
      Code = "g/dL",
      Display = "gram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerGram = new Coding
    {
      Code = "g/g",
      Display = "gram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramGramCre = new Coding
    {
      Code = "g/g{Cre}",
      Display = "gram / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramGramCreat = new Coding
    {
      Code = "g/g{creat}",
      Display = "gram / gram creat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerGramOfGlobulin = new Coding
    {
      Code = "g/g{globulin}",
      Display = "gram per gram of globulin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerGramOfTissue = new Coding
    {
      Code = "g/g{tissue}",
      Display = "gram per gram of tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerHour = new Coding
    {
      Code = "g/h",
      Display = "gram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerHourPerSquareMeter = new Coding
    {
      Code = "g/h/m2",
      Display = "gram per hour per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogram = new Coding
    {
      Code = "g/kg",
      Display = "gram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogramPer8Hour = new Coding
    {
      Code = "g/kg/(8.h)",
      Display = "gram per  kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogramPer8HourShift = new Coding
    {
      Code = "g/kg/(8.h){shift}",
      Display = "gram per kilogram per 8 hour shift",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogramPerDay = new Coding
    {
      Code = "g/kg/d",
      Display = "gram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogramPerHour = new Coding
    {
      Code = "g/kg/h",
      Display = "gram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerKilogramPerMinute = new Coding
    {
      Code = "g/kg/min",
      Display = "gram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerLiter = new Coding
    {
      Code = "g/L",
      Display = "gram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramsPerSquareMeter = new Coding
    {
      Code = "g/m2",
      Display = "grams Per Square Meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMilligram = new Coding
    {
      Code = "g/mg",
      Display = "gram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMinute = new Coding
    {
      Code = "g/min",
      Display = "gram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMilliliter = new Coding
    {
      Code = "g/mL",
      Display = "gram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMillimole = new Coding
    {
      Code = "g/mmol",
      Display = "gram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramMillimoleCreat = new Coding
    {
      Code = "g/mmol{creat}",
      Display = "gram / millimole creat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMole = new Coding
    {
      Code = "g/mol",
      Display = "gram per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramPerMoleOfCreatinine = new Coding
    {
      Code = "g/mol{creat}",
      Display = "gram per mole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramOfCreatinine = new Coding
    {
      Code = "g{creat}",
      Display = "gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramOfHemoglobin = new Coding
    {
      Code = "g{Hb}",
      Display = "gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramOfTotalNitrogen = new Coding
    {
      Code = "g{total_nit}",
      Display = "gram of total nitrogen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramOfTotalProtein = new Coding
    {
      Code = "g{total_prot}",
      Display = "gram of total protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramOfWetTissue = new Coding
    {
      Code = "g{wet_tissue}",
      Display = "gram of wet tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gal = new Coding
    {
      Code = "Gal",
      Display = "Gal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gilbert = new Coding
    {
      Code = "Gb",
      Display = "Gilbert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GigaBecquerel = new Coding
    {
      Code = "GBq",
      Display = "gigaBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GramForce = new Coding
    {
      Code = "gf",
      Display = "gram-force",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GonGrade = new Coding
    {
      Code = "gon",
      Display = "gon grade",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gray = new Coding
    {
      Code = "Gy",
      Display = "Gray",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Hour = new Coding
    {
      Code = "h",
      Display = "hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Henry = new Coding
    {
      Code = "H",
      Display = "Henry",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Hectoliter = new Coding
    {
      Code = "hL",
      Display = "hectoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Hertz = new Coding
    {
      Code = "Hz",
      Display = "Hertz",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Joule = new Coding
    {
      Code = "J",
      Display = "joule",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding JoulePerLiter = new Coding
    {
      Code = "J/L",
      Display = "joule per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kelvin = new Coding
    {
      Code = "K",
      Display = "Kelvin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KelvinWatt = new Coding
    {
      Code = "K/W",
      Display = "Kelvin / Watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloInternationalUnitPerLiter = new Coding
    {
      Code = "k[IU]/L",
      Display = "kilo international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloInternationalUnitsPerMilliLiter = new Coding
    {
      Code = "k[iU]/mL",
      Display = "KiloInternationalUnitsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloInternationalUnitPerMilliliter = new Coding
    {
      Code = "k[IU]/mL",
      Display = "kilo international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Katal = new Coding
    {
      Code = "kat",
      Display = "katal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KatalKilogram = new Coding
    {
      Code = "kat/kg",
      Display = "katal / kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KatalLiter = new Coding
    {
      Code = "kat/L",
      Display = "katal / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloBecquerel = new Coding
    {
      Code = "kBq",
      Display = "kiloBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kilocalorie = new Coding
    {
      Code = "kcal",
      Display = "kilocalorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kilocalorie8AsteriskHour = new Coding
    {
      Code = "kcal/(8.h)",
      Display = "kilocalorie / 8 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilocaloriePerOunceUSAndBritish = new Coding
    {
      Code = "kcal/[oz_av]",
      Display = "kilocalorie per ounce (US & British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilocaloriePerDay = new Coding
    {
      Code = "kcal/d",
      Display = "kilocalorie per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilocaloriePerHour = new Coding
    {
      Code = "kcal/h",
      Display = "kilocalorie per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilocaloriePerKilogramPer24Hour = new Coding
    {
      Code = "kcal/kg/(24.h)",
      Display = "kilocalorie per kilogram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kilogram = new Coding
    {
      Code = "kg",
      Display = "kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramMeterPerSecond = new Coding
    {
      Code = "kg.m/s",
      Display = "kilogram meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramPerSecondPerSquareMeter = new Coding
    {
      Code = "kg/(s.m2)",
      Display = "kilogram per second per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramPerHour = new Coding
    {
      Code = "kg/h",
      Display = "kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramPerLiter = new Coding
    {
      Code = "kg/L",
      Display = "kilogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramMeterPower2 = new Coding
    {
      Code = "kg/m2",
      Display = "kilogram / (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramMeterPower3 = new Coding
    {
      Code = "kg/m3",
      Display = "kilogram / (meter ^ 3)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramMinute = new Coding
    {
      Code = "kg/min",
      Display = "kilogram / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramPerMole = new Coding
    {
      Code = "kg/mol",
      Display = "kilogram per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramSecond = new Coding
    {
      Code = "kg/s",
      Display = "kilogram / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KilogramOfWetTissue = new Coding
    {
      Code = "kg{wet'tis}",
      Display = "kilogram of wet tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kiloliter = new Coding
    {
      Code = "kL",
      Display = "kiloliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kilometer = new Coding
    {
      Code = "km",
      Display = "kilometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloPascal = new Coding
    {
      Code = "kPa",
      Display = "kiloPascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kilosecond = new Coding
    {
      Code = "ks",
      Display = "kilosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloEnzymeUnit = new Coding
    {
      Code = "kU",
      Display = "kilo enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloenzymeUnitPerGram = new Coding
    {
      Code = "kU/g",
      Display = "kiloenzyme Unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloUnitHour = new Coding
    {
      Code = "kU/h",
      Display = "kiloUnit / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloenzymeUnitPerLiter = new Coding
    {
      Code = "kU/L",
      Display = "kiloenzyme Unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloEnzymeUnitPerLiterClass = new Coding
    {
      Code = "kU/L{class}",
      Display = "kilo enzyme unit per liter class",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding KiloEnzymeUnitPerMilliliter = new Coding
    {
      Code = "kU/mL",
      Display = "kilo enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Kayser = new Coding
    {
      Code = "Ky",
      Display = "Kayser",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Liter = new Coding
    {
      Code = "L",
      Display = "liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterAsteriskSecondPower2Second = new Coding
    {
      Code = "L.s2/s",
      Display = "liter * (second ^ 2) / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPer24Hour = new Coding
    {
      Code = "L/(24.h)",
      Display = "liter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPer8Hour = new Coding
    {
      Code = "L/(8.h)",
      Display = "liter per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerMinutePerSquareMeter = new Coding
    {
      Code = "L/(min.m2)",
      Display = "liter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerDay = new Coding
    {
      Code = "L/d",
      Display = "liter per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerHour = new Coding
    {
      Code = "L/h",
      Display = "liter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerKilogram = new Coding
    {
      Code = "L/kg",
      Display = "liter per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerLiter = new Coding
    {
      Code = "L/L",
      Display = "liter per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerMinute = new Coding
    {
      Code = "L/min",
      Display = "liter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterSecond = new Coding
    {
      Code = "L/s",
      Display = "liter / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LiterPerSecondPerSquareSecond = new Coding
    {
      Code = "L/s/s2",
      Display = "liter per second per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Lumen = new Coding
    {
      Code = "lm",
      Display = "lumen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LumenSquareMeter = new Coding
    {
      Code = "lm.m2",
      Display = "lumen square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LumenMeterPower2 = new Coding
    {
      Code = "lm/m2",
      Display = "lumen / (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Lambert = new Coding
    {
      Code = "Lmb",
      Display = "Lambert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Lux = new Coding
    {
      Code = "lx",
      Display = "lux",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Meter = new Coding
    {
      Code = "m",
      Display = "meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeterPerSecond = new Coding
    {
      Code = "m/s",
      Display = "meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeterPerSquareSecond = new Coding
    {
      Code = "m/s2",
      Display = "meter per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeterOfWaterColumn = new Coding
    {
      Code = "m[H2O]",
      Display = "meter of water column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeterOfMercuryColumn = new Coding
    {
      Code = "m[Hg]",
      Display = "meter of mercury column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliinternationalUnit = new Coding
    {
      Code = "m[iU]",
      Display = "milliinternational unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliInternationalUnitPerLiter = new Coding
    {
      Code = "m[IU]/L",
      Display = "milli international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliInternationalUnitPerMilliliter = new Coding
    {
      Code = "m[IU]/mL",
      Display = "milli international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareMeter = new Coding
    {
      Code = "m2",
      Display = "square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareMeterPerSecond = new Coding
    {
      Code = "m2/s",
      Display = "square meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicMeterPerSecond = new Coding
    {
      Code = "m3/s",
      Display = "cubic meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliAmpre = new Coding
    {
      Code = "mA",
      Display = "milliAmpère",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millibar = new Coding
    {
      Code = "mbar",
      Display = "millibar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillibarSecondPerLiter = new Coding
    {
      Code = "mbar.s/L",
      Display = "millibar second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillibarPerLiterPerSecond = new Coding
    {
      Code = "mbar/L/s",
      Display = "millibar per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MegaBecquerel = new Coding
    {
      Code = "MBq",
      Display = "megaBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliCurie = new Coding
    {
      Code = "mCi",
      Display = "milliCurie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milliequivalent = new Coding
    {
      Code = "meq",
      Display = "milliequivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPer12Hour = new Coding
    {
      Code = "meq/(12.h)",
      Display = "milliequivalent per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPer2Hour = new Coding
    {
      Code = "meq/(2.h)",
      Display = "milliequivalent per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPer24Hour = new Coding
    {
      Code = "meq/(24.h)",
      Display = "milliequivalent per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPer8Hour = new Coding
    {
      Code = "meq/(8.h)",
      Display = "milliequivalent per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milliequivalents8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "meq/(8.h.kg)",
      Display = "milliequivalents / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentsKilogramAsteriskDay = new Coding
    {
      Code = "meq/(kg.d)",
      Display = "milliequivalents / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerSpecimen = new Coding
    {
      Code = "meq/{specimen}",
      Display = "milliequivalent per specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentsSpecimen = new Coding
    {
      Code = "meq/{Specimen}",
      Display = "milliequivalents / Specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerTotalVolume = new Coding
    {
      Code = "meq/{total_volume}",
      Display = "milliequivalent per total volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerDay = new Coding
    {
      Code = "meq/d",
      Display = "milliequivalent per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerDeciliter = new Coding
    {
      Code = "meq/dL",
      Display = "milliequivalent per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerGram = new Coding
    {
      Code = "meq/g",
      Display = "milliequivalent per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentsGramCre = new Coding
    {
      Code = "meq/g{Cre}",
      Display = "milliequivalents / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerGramOfCreatinine = new Coding
    {
      Code = "meq/g{creat}",
      Display = "milliequivalent per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerHour = new Coding
    {
      Code = "meq/h",
      Display = "milliequivalent per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerKilogram = new Coding
    {
      Code = "meq/kg",
      Display = "milliequivalent per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerKilogramPerHour = new Coding
    {
      Code = "meq/kg/h",
      Display = "milliequivalent per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentsKilogramMinute = new Coding
    {
      Code = "meq/kg/min",
      Display = "milliequivalents / kilogram / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerLiter = new Coding
    {
      Code = "meq/L",
      Display = "milliequivalent per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerSquareMeter = new Coding
    {
      Code = "meq/m2",
      Display = "milliequivalent per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerMinute = new Coding
    {
      Code = "meq/min",
      Display = "milliequivalent per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliequivalentPerMilliliter = new Coding
    {
      Code = "meq/mL",
      Display = "milliequivalent per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milligram = new Coding
    {
      Code = "mg",
      Display = "milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer10Hour = new Coding
    {
      Code = "mg/(10.h)",
      Display = "milligram per 10 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer12Hour = new Coding
    {
      Code = "mg/(12.h)",
      Display = "milligram per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer18Hour = new Coding
    {
      Code = "mg/(18.h)",
      Display = "milligram per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer2Hour = new Coding
    {
      Code = "mg/(2.h)",
      Display = "milligram per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer24Hour = new Coding
    {
      Code = "mg/(24.h)",
      Display = "milligram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer6Hour = new Coding
    {
      Code = "mg/(6.h)",
      Display = "milligram per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer72Hour = new Coding
    {
      Code = "mg/(72.h)",
      Display = "milligram per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPer8Hour = new Coding
    {
      Code = "mg/(8.h)",
      Display = "milligram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milligram8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "mg/(8.h.kg)",
      Display = "milligram / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramKilogramAsteriskHour = new Coding
    {
      Code = "mg/(kg.h)",
      Display = "milligram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerCollection = new Coding
    {
      Code = "mg/{collection}",
      Display = "milligram per collection",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramHgbGram = new Coding
    {
      Code = "mg/{Hgb}/g",
      Display = "milligram / Hgb / gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerSpecimen = new Coding
    {
      Code = "mg/{specimen}",
      Display = "milligram per specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramSpecimen = new Coding
    {
      Code = "mg/{Specimen}",
      Display = "milligram / Specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerTotalOutput = new Coding
    {
      Code = "mg/{total_output}",
      Display = "milligram per total output",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerTotalVolume = new Coding
    {
      Code = "mg/{total_volume}",
      Display = "milligram per total volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliGramPerTotalVolume = new Coding
    {
      Code = "mg/{TotalVolume}",
      Display = "MilliGramPerTotalVolume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramTotQuoteVolume = new Coding
    {
      Code = "mg/{Tot'Volume}",
      Display = "milligram / Tot'Volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramVolume = new Coding
    {
      Code = "mg/{Volume}",
      Display = "milligram / Volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerDay = new Coding
    {
      Code = "mg/d",
      Display = "milligram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = new Coding
    {
      Code = "mg/d/(173.10*-2.m2)",
      Display = "milligram / day / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerDayPer173SquareMeter = new Coding
    {
      Code = "mg/d/{1.73_m2}",
      Display = "milligram per day per 1.73 square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerDeciliter = new Coding
    {
      Code = "mg/dL",
      Display = "milligram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerDeciliterOfRedBloodCells = new Coding
    {
      Code = "mg/dL{RBCs}",
      Display = "milligram per deciliter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGram = new Coding
    {
      Code = "mg/g",
      Display = "milligram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramGramCre = new Coding
    {
      Code = "mg/g{Cre}",
      Display = "milligram / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGramOfCreatinine = new Coding
    {
      Code = "mg/g{creat}",
      Display = "milligram per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGramOfDryTissue = new Coding
    {
      Code = "mg/g{dry_tissue}",
      Display = "milligram per gram of dry tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGramOfFeces = new Coding
    {
      Code = "mg/g{feces}",
      Display = "milligram per gram of feces",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGramOfTissue = new Coding
    {
      Code = "mg/g{tissue}",
      Display = "milligram per gram of tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerGramOfWetTissue = new Coding
    {
      Code = "mg/g{wet_tissue}",
      Display = "milligram per gram of wet tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerHour = new Coding
    {
      Code = "mg/h",
      Display = "milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerKilogram = new Coding
    {
      Code = "mg/kg",
      Display = "milligram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramKilogram24AsteriskHour = new Coding
    {
      Code = "mg/kg/(24.h)",
      Display = "milligram / kilogram / 24 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerKilogramPer8Hour = new Coding
    {
      Code = "mg/kg/(8.h)",
      Display = "milligram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerDay = new Coding
    {
      Code = "mg/kg/d",
      Display = "milligram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerHour = new Coding
    {
      Code = "mg/kg/h",
      Display = "milligram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerMinute = new Coding
    {
      Code = "mg/kg/min",
      Display = "milligram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerLiter = new Coding
    {
      Code = "mg/L",
      Display = "milligram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerLiterOfRedBloodCells = new Coding
    {
      Code = "mg/L{RBCs}",
      Display = "milligram per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerSquareMeter = new Coding
    {
      Code = "mg/m2",
      Display = "milligram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerCubicMeter = new Coding
    {
      Code = "mg/m3",
      Display = "milligram per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMilligram = new Coding
    {
      Code = "mg/mg",
      Display = "milligram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramMilligramCre = new Coding
    {
      Code = "mg/mg{cre}",
      Display = "milligram / milligram cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramsPerMilligramCreatinine = new Coding
    {
      Code = "mg/mg{Cre}",
      Display = "MilligramsPerMilligramCreatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMilligramOfCreatinine = new Coding
    {
      Code = "mg/mg{creat}",
      Display = "milligram per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMinute = new Coding
    {
      Code = "mg/min",
      Display = "milligram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMilliliter = new Coding
    {
      Code = "mg/mL",
      Display = "milligram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMillimole = new Coding
    {
      Code = "mg/mmol",
      Display = "milligram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramMillimoleCre = new Coding
    {
      Code = "mg/mmol{Cre}",
      Display = "milligram / millimole Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerMillimoleOfCreatinine = new Coding
    {
      Code = "mg/mmol{creat}",
      Display = "milligram per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPerWeek = new Coding
    {
      Code = "mg/wk",
      Display = "milligram per week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramOfCreatinine = new Coding
    {
      Code = "mg{creat}",
      Display = "milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramFibrinogenEquivalentUnitPerLiter = new Coding
    {
      Code = "mg{FEU}/L",
      Display = "milligram fibrinogen equivalent unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilligramPhenylketonesDeciliter = new Coding
    {
      Code = "mg{Phenylketones}/dL",
      Display = "milligram Phenylketones / deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mho = new Coding
    {
      Code = "mho",
      Display = "mho",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Minute_2 = new Coding
    {
      Code = "min",
      Display = "minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milliliter = new Coding
    {
      Code = "mL",
      Display = "milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterHQuoteBAsteriskMeterPower2 = new Coding
    {
      Code = "mL/({h'b}.m2)",
      Display = "milliliter / h'b * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer10Hour = new Coding
    {
      Code = "mL/(10.h)",
      Display = "milliliter per 10 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer12Hour = new Coding
    {
      Code = "mL/(12.h)",
      Display = "milliliter per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer2Hour = new Coding
    {
      Code = "mL/(2.h)",
      Display = "milliliter per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer24Hour = new Coding
    {
      Code = "mL/(24.h)",
      Display = "milliliter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer4Hour = new Coding
    {
      Code = "mL/(4.h)",
      Display = "milliliter per 4 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer5Hour = new Coding
    {
      Code = "mL/(5.h)",
      Display = "milliliter per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer6Hour = new Coding
    {
      Code = "mL/(6.h)",
      Display = "milliliter per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer72Hour = new Coding
    {
      Code = "mL/(72.h)",
      Display = "milliliter per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPer8Hour = new Coding
    {
      Code = "mL/(8.h)",
      Display = "milliliter per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterKilogramAsteriskMinute = new Coding
    {
      Code = "mL/(kg.min)",
      Display = "milliliter / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerSquareInchInternational = new Coding
    {
      Code = "mL/[sin_i]",
      Display = "milliliter per square inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerHeartBeat = new Coding
    {
      Code = "mL/{beat}",
      Display = "milliliter per heart beat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerHeartBeatPerSquareMeter = new Coding
    {
      Code = "mL/{beat}/m2",
      Display = "milliliter per heart beat per  square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliLitersPerHeartbeatSIVolumeUnits = new Coding
    {
      Code = "mL/{h'b}",
      Display = "MilliLitersPerHeartbeat [SI Volume Units]",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterCentimeterOfWaterColumn = new Coding
    {
      Code = "mL/cm[H2O]",
      Display = "milliliter / centimeter of water column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerDay = new Coding
    {
      Code = "mL/d",
      Display = "milliliter per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerDeciliter = new Coding
    {
      Code = "mL/dL",
      Display = "milliliter per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerHour = new Coding
    {
      Code = "mL/h",
      Display = "milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerKilogram = new Coding
    {
      Code = "mL/kg",
      Display = "milliliter per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPer8Hour = new Coding
    {
      Code = "mL/kg/(8.h)",
      Display = "milliliter per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerDay = new Coding
    {
      Code = "mL/kg/d",
      Display = "milliliter per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerHour = new Coding
    {
      Code = "mL/kg/h",
      Display = "milliliter per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerMinute = new Coding
    {
      Code = "mL/kg/min",
      Display = "milliliter per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerLiter = new Coding
    {
      Code = "mL/L",
      Display = "milliliter per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerSquareMeter = new Coding
    {
      Code = "mL/m2",
      Display = "milliliter per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerMillibar = new Coding
    {
      Code = "mL/mbar",
      Display = "milliliter per millibar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerMinute = new Coding
    {
      Code = "mL/min",
      Display = "milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = new Coding
    {
      Code = "mL/min/(173.10*-2.m2)",
      Display = "milliliter / minute / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerMinutePer173SquareMeter = new Coding
    {
      Code = "mL/min/{1.73_m2}",
      Display = "milliliter per minute per 1.73 square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerMinutePerSquareMeter = new Coding
    {
      Code = "mL/min/m2",
      Display = "milliliter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerMillimeter = new Coding
    {
      Code = "mL/mm",
      Display = "milliliter per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterPerSecond = new Coding
    {
      Code = "mL/s",
      Display = "milliliter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliliterOfFetalRedBloodCells = new Coding
    {
      Code = "mL{fetal_RBCs}",
      Display = "milliliter of fetal red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millimeter = new Coding
    {
      Code = "mm",
      Display = "millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimeterPerHour = new Coding
    {
      Code = "mm/h",
      Display = "millimeter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimeterPerMinute = new Coding
    {
      Code = "mm/min",
      Display = "millimeter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimeterOfWater = new Coding
    {
      Code = "mm[H2O]",
      Display = "millimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimeterOfMercury = new Coding
    {
      Code = "mm[Hg]",
      Display = "millimeter of mercury",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SquareMillimeter = new Coding
    {
      Code = "mm2",
      Display = "square millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding CubicMillimeter = new Coding
    {
      Code = "mm3",
      Display = "cubic millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millimole = new Coding
    {
      Code = "mmol",
      Display = "millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer12Hour = new Coding
    {
      Code = "mmol/(12.h)",
      Display = "millimole per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer18Hour = new Coding
    {
      Code = "mmol/(18.h)",
      Display = "millimole per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer2Hour = new Coding
    {
      Code = "mmol/(2.h)",
      Display = "millimole per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer24Hour = new Coding
    {
      Code = "mmol/(24.h)",
      Display = "millimole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer5Hour = new Coding
    {
      Code = "mmol/(5.h)",
      Display = "millimole per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer6Hour = new Coding
    {
      Code = "mmol/(6.h)",
      Display = "millimole per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePer8Hour = new Coding
    {
      Code = "mmol/(8.h)",
      Display = "millimole per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millimole8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "mmol/(8.h.kg)",
      Display = "millimole / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerEjaculate = new Coding
    {
      Code = "mmol/{ejaculate}",
      Display = "millimole per ejaculate",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerSpecimen = new Coding
    {
      Code = "mmol/{specimen}",
      Display = "millimole per specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerTotalVolume = new Coding
    {
      Code = "mmol/{total_vol}",
      Display = "millimole per total volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliMolesPerTotalVolumeSubstanceUnits = new Coding
    {
      Code = "mmol/{TotalVolume}",
      Display = "MilliMolesPerTotalVolume [Substance Units]",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimoleTotQuoteVolume = new Coding
    {
      Code = "mmol/{Tot'Volume}",
      Display = "millimole / Tot'Volume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerDay = new Coding
    {
      Code = "mmol/d",
      Display = "millimole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerDeciliter = new Coding
    {
      Code = "mmol/dL",
      Display = "millimole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerGram = new Coding
    {
      Code = "mmol/g",
      Display = "millimole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerGramOfCreatinine = new Coding
    {
      Code = "mmol/g{creat}",
      Display = "millimole per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerGramOfHemoglobin = new Coding
    {
      Code = "mmol/g{hemoglobin}",
      Display = "millimole per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerHour = new Coding
    {
      Code = "mmol/h",
      Display = "millimole per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerHourPerMilligramOfHemoglobin = new Coding
    {
      Code = "mmol/h/mg{Hb}",
      Display = "millimole per hour per milligram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerHourPerMilligramOfProtein = new Coding
    {
      Code = "mmol/h/mg{protein}",
      Display = "millimole per hour per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogram = new Coding
    {
      Code = "mmol/kg",
      Display = "millimole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogramPer8Hour = new Coding
    {
      Code = "mmol/kg/(8.h)",
      Display = "millimole per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerDay = new Coding
    {
      Code = "mmol/kg/d",
      Display = "millimole per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerHour = new Coding
    {
      Code = "mmol/kg/h",
      Display = "millimole per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerMinute = new Coding
    {
      Code = "mmol/kg/min",
      Display = "millimole per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerKilogramOfWater = new Coding
    {
      Code = "mmol/kg{H2O}",
      Display = "millimole per kilogram of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerLiter = new Coding
    {
      Code = "mmol/L",
      Display = "millimole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerLiterPerSecond = new Coding
    {
      Code = "mmol/L/s",
      Display = "millimole per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerLiterOfRedBloodCells = new Coding
    {
      Code = "mmol/L{RBCs}",
      Display = "millimole per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimoleMeter = new Coding
    {
      Code = "mmol/m",
      Display = "millimole / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerSquareMeter = new Coding
    {
      Code = "mmol/m2",
      Display = "millimole per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMinute = new Coding
    {
      Code = "mmol/min",
      Display = "millimole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMillimole = new Coding
    {
      Code = "mmol/mmol",
      Display = "millimole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMillmoleOfCreatinine = new Coding
    {
      Code = "mmol/mmol{creat}",
      Display = "millimole per millmole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMillimoleOfUrea = new Coding
    {
      Code = "mmol/mmol{urea}",
      Display = "millimole per millimole of urea",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMole = new Coding
    {
      Code = "mmol/mol",
      Display = "millimole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliMolesPerMoleCreatinine = new Coding
    {
      Code = "mmol/mol{Cre}",
      Display = "MilliMolesPerMoleCreatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerMoleOfCreatinine = new Coding
    {
      Code = "mmol/mol{creat}",
      Display = "millimole per mole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillimolePerSecondPerLiter = new Coding
    {
      Code = "mmol/s/L",
      Display = "millimole per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Month = new Coding
    {
      Code = "mo",
      Display = "month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanGregorianMonth = new Coding
    {
      Code = "mo_g",
      Display = "mean Gregorian month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MeanJulianMonth = new Coding
    {
      Code = "mo_j",
      Display = "mean Julian month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SynodalMonth = new Coding
    {
      Code = "mo_s",
      Display = "synodal month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Mole = new Coding
    {
      Code = "mol",
      Display = "mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerDay = new Coding
    {
      Code = "mol/d",
      Display = "mole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerKilogram = new Coding
    {
      Code = "mol/kg",
      Display = "mole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerKilogramPerSecond = new Coding
    {
      Code = "mol/kg/s",
      Display = "mole per kilogram per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerLiter = new Coding
    {
      Code = "mol/L",
      Display = "mole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerCubicMeter = new Coding
    {
      Code = "mol/m3",
      Display = "mole per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerMilliliter = new Coding
    {
      Code = "mol/mL",
      Display = "mole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerMole = new Coding
    {
      Code = "mol/mol",
      Display = "mole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MoleMoleCreat = new Coding
    {
      Code = "mol/mol{creat}",
      Display = "mole / mole creat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MolePerSecond = new Coding
    {
      Code = "mol/s",
      Display = "mole per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Milliosmole = new Coding
    {
      Code = "mosm",
      Display = "milliosmole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliosmolePerKilogram = new Coding
    {
      Code = "mosm/kg",
      Display = "milliosmole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliosmolePerLiter = new Coding
    {
      Code = "mosm/L",
      Display = "milliosmole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millipascal = new Coding
    {
      Code = "mPa",
      Display = "millipascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillipascalSecond = new Coding
    {
      Code = "mPa.s",
      Display = "millipascal second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Millisecond = new Coding
    {
      Code = "ms",
      Display = "millisecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Megasecond = new Coding
    {
      Code = "Ms",
      Display = "megasecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnit = new Coding
    {
      Code = "mU",
      Display = "millienzyme Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerGram = new Coding
    {
      Code = "mU/g",
      Display = "millienzyme Unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliEnzymeUnitPerGramOfHemoglobin = new Coding
    {
      Code = "mU/g{Hb}",
      Display = "milli enzyme unit per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliUnitGramHgb = new Coding
    {
      Code = "mU/g{Hgb}",
      Display = "milliUnit / gram Hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliEnzymeUnitPerGramOfProtein = new Coding
    {
      Code = "mU/g{protein}",
      Display = "milli enzyme unit per gram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerLiter = new Coding
    {
      Code = "mU/L",
      Display = "millienzyme Unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliUnitMilligram = new Coding
    {
      Code = "mU/mg",
      Display = "milliUnit / milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliUnitMilligramCre = new Coding
    {
      Code = "mU/mg{Cre}",
      Display = "milliUnit / milligram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliEnzymeUnitPerMilligramOfCreatinine = new Coding
    {
      Code = "mU/mg{creat}",
      Display = "milli enzyme unit per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliUnitMinute = new Coding
    {
      Code = "mU/min",
      Display = "milliUnit / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMilliliter = new Coding
    {
      Code = "mU/mL",
      Display = "millienzyme Unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMilliliterPerMinute = new Coding
    {
      Code = "mU/mL/min",
      Display = "millienzyme Unit per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliEnzymeUnitPerMillimoleOfCreatinine = new Coding
    {
      Code = "mU/mmol{creat}",
      Display = "milli  enzyme unit per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMillimoleOfCreatinine = new Coding
    {
      Code = "mU/mmol{creatinine}",
      Display = "millienzyme Unit per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMillimoleOfRedBloodCells = new Coding
    {
      Code = "mU/mmol{RBCs}",
      Display = "millienzyme Unit per millimole of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MilliVolt = new Coding
    {
      Code = "mV",
      Display = "milliVolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Maxwell = new Coding
    {
      Code = "Mx",
      Display = "Maxwell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Newton = new Coding
    {
      Code = "N",
      Display = "Newton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NewtonCentimeter = new Coding
    {
      Code = "N.cm",
      Display = "Newton centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NewtonSecond = new Coding
    {
      Code = "N.s",
      Display = "Newton second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanoCurie = new Coding
    {
      Code = "nCi",
      Display = "nanoCurie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanogram = new Coding
    {
      Code = "ng",
      Display = "nanogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPer24Hour = new Coding
    {
      Code = "ng/(24.h)",
      Display = "nanogram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPer8Hour = new Coding
    {
      Code = "ng/(8.h)",
      Display = "nanogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanogram8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "ng/(8.h.kg)",
      Display = "nanogram / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskDay = new Coding
    {
      Code = "ng/(kg.d)",
      Display = "nanogram / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskHour = new Coding
    {
      Code = "ng/(kg.h)",
      Display = "nanogram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskMinute = new Coding
    {
      Code = "ng/(kg.min)",
      Display = "nanogram / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMillion = new Coding
    {
      Code = "ng/10*6",
      Display = "nanogram per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMillionRedBloodCells = new Coding
    {
      Code = "ng/10*6{RBCs}",
      Display = "nanogram per million red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerDay = new Coding
    {
      Code = "ng/d",
      Display = "nanogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerDeciliter = new Coding
    {
      Code = "ng/dL",
      Display = "nanogram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramDeciliterHour = new Coding
    {
      Code = "ng/dL/h",
      Display = "nanogram / deciliter / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerGram = new Coding
    {
      Code = "ng/g",
      Display = "nanogram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramGramCre = new Coding
    {
      Code = "ng/g{Cre}",
      Display = "nanogram / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerGramOfCreatinine = new Coding
    {
      Code = "ng/g{creat}",
      Display = "nanogram per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerHour = new Coding
    {
      Code = "ng/h",
      Display = "nanogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerKilogram = new Coding
    {
      Code = "ng/kg",
      Display = "nanogram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerKilogramPer8Hour = new Coding
    {
      Code = "ng/kg/(8.h)",
      Display = "nanogram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerKilogramPerHour = new Coding
    {
      Code = "ng/kg/h",
      Display = "nanogram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerKilogramPerMinute = new Coding
    {
      Code = "ng/kg/min",
      Display = "nanogram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerLiter = new Coding
    {
      Code = "ng/L",
      Display = "nanogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerSquareMeter = new Coding
    {
      Code = "ng/m2",
      Display = "nanogram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilligram = new Coding
    {
      Code = "ng/mg",
      Display = "nanogram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilligramPerHour = new Coding
    {
      Code = "ng/mg/h",
      Display = "nanogram per milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilligramOfCreatinine = new Coding
    {
      Code = "ng/mg{creat}",
      Display = "nanogram per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilligramOfProtein = new Coding
    {
      Code = "ng/mg{protein}",
      Display = "nanogram per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramMilligramProtein = new Coding
    {
      Code = "ng/mg{Protein}",
      Display = "nanogram / milligram Protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMinute = new Coding
    {
      Code = "ng/min",
      Display = "nanogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMillliiter = new Coding
    {
      Code = "ng/mL",
      Display = "nanogram per millliiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilliliterPerHour = new Coding
    {
      Code = "ng/mL/h",
      Display = "nanogram per milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramMilliliterRbc = new Coding
    {
      Code = "ng/mL{rbc}",
      Display = "nanogram / milliliter rbc",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerMilliliterOfRedBloodCells = new Coding
    {
      Code = "ng/mL{RBCs}",
      Display = "nanogram per milliliter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerSecond = new Coding
    {
      Code = "ng/s",
      Display = "nanogram per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramPerEnzymeUnit = new Coding
    {
      Code = "ng/U",
      Display = "nanogram per enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanogramFibrinogenEquivalentUnitPerMilliliter = new Coding
    {
      Code = "ng{FEU}/mL",
      Display = "nanogram fibrinogen equivalent unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanokatal = new Coding
    {
      Code = "nkat",
      Display = "nanokatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanoliter = new Coding
    {
      Code = "nL",
      Display = "nanoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanometer = new Coding
    {
      Code = "nm",
      Display = "nanometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanometerPerSecondPerLiter = new Coding
    {
      Code = "nm/s/L",
      Display = "nanometer per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanomole = new Coding
    {
      Code = "nmol",
      Display = "nanomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePer24Hour = new Coding
    {
      Code = "nmol/(24.h)",
      Display = "nanomole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerDay = new Coding
    {
      Code = "nmol/d",
      Display = "nanomole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerDeciliter = new Coding
    {
      Code = "nmol/dL",
      Display = "nanomole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerDeciliterOfGlomerularFiltrate = new Coding
    {
      Code = "nmol/dL{GF}",
      Display = "nanomole per deciliter of glomerular filtrate",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerGram = new Coding
    {
      Code = "nmol/g",
      Display = "nanomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleGramCre = new Coding
    {
      Code = "nmol/g{Cre}",
      Display = "nanomole / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerGramOfCreatinine = new Coding
    {
      Code = "nmol/g{creat}",
      Display = "nanomole per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerGramOfDryWeight = new Coding
    {
      Code = "nmol/g{dry_wt}",
      Display = "nanomole per gram of dry weight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerHourPerLiter = new Coding
    {
      Code = "nmol/h/L",
      Display = "nanomole per hour per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerHourPerMilligramOfProtein = new Coding
    {
      Code = "nmol/h/mg{protein}",
      Display = "nanomole per hour per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerHourPerMilliliter = new Coding
    {
      Code = "nmol/h/mL",
      Display = "nanomole per hour per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerLiter = new Coding
    {
      Code = "nmol/L",
      Display = "nanomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerLiterPerMillimoleOfCreatinine = new Coding
    {
      Code = "nmol/L/mmol{creat}",
      Display = "nanomole per liter per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerLiterPerSecond = new Coding
    {
      Code = "nmol/L/s",
      Display = "nanomole per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerLiterOfRedBloodCells = new Coding
    {
      Code = "nmol/L{RBCs}",
      Display = "nanomole per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMeterPerMilligramOfProtein = new Coding
    {
      Code = "nmol/m/mg{protein}",
      Display = "nanomole per meter per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilligram = new Coding
    {
      Code = "nmol/mg",
      Display = "nanomole per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilligramPerHour = new Coding
    {
      Code = "nmol/mg/h",
      Display = "nanomole per milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilligramOfCreatinine = new Coding
    {
      Code = "nmol/mg{creat}",
      Display = "nanomole per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilligramOfProtein = new Coding
    {
      Code = "nmol/mg{protein}",
      Display = "nanomole per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilligramOfProteinPerHour = new Coding
    {
      Code = "nmol/mg{protein}/h",
      Display = "nanomole per milligram of protein per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinute = new Coding
    {
      Code = "nmol/min",
      Display = "nanomole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMillionCells = new Coding
    {
      Code = "nmol/min/10*6{cells}",
      Display = "nanomole per minute per million cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilligramOfHemoglobin = new Coding
    {
      Code = "nmol/min/mg{Hb}",
      Display = "nanomole per minute per milligram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilligramOfHemoglobin_2 = new Coding
    {
      Code = "nmol/min/mg{hemoglobin}",
      Display = "nanomole per minute per milligram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilligramOfProtein = new Coding
    {
      Code = "nmol/min/mg{protein}",
      Display = "nanomole per minute per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilliliter = new Coding
    {
      Code = "nmol/min/mL",
      Display = "nanomole per minute per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilliliter = new Coding
    {
      Code = "nmol/mL",
      Display = "nanomole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilliliterPerHour = new Coding
    {
      Code = "nmol/mL/h",
      Display = "nanomole per milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMilliliterPerMinute = new Coding
    {
      Code = "nmol/mL/min",
      Display = "nanomole per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMillimole = new Coding
    {
      Code = "nmol/mmol",
      Display = "nanomole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleMillimoleCre = new Coding
    {
      Code = "nmol/mmol{Cre}",
      Display = "nanomole / millimole Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMillimoleOfCreatinine = new Coding
    {
      Code = "nmol/mmol{creat}",
      Display = "nanomole per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMole = new Coding
    {
      Code = "nmol/mol",
      Display = "nanomole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerNanomole = new Coding
    {
      Code = "nmol/nmol",
      Display = "nanomole per nanomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerSecond = new Coding
    {
      Code = "nmol/s",
      Display = "nanomole per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerSecondPerLiter = new Coding
    {
      Code = "nmol/s/L",
      Display = "nanomole per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomolePerMicromoleOfCreatinine = new Coding
    {
      Code = "nmol/umol{creat}",
      Display = "nanomole per micromole  of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleOf12CystinePerMilligramOfProtein = new Coding
    {
      Code = "nmol{1/2cys}/mg{protein}",
      Display = "nanomole of 1/2 cystine per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleOfATP = new Coding
    {
      Code = "nmol{ATP}",
      Display = "nanomole of ATP",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleBoneCollagenEquivalent = new Coding
    {
      Code = "nmol{BCE}",
      Display = "nanomole bone collagen equivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleBoneCollagenEquivalentPerLiter = new Coding
    {
      Code = "nmol{BCE}/L",
      Display = "nanomole bone collagen equivalent per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanomoleBoneCollagenEquivalentPerMillimoleOfCreatinine = new Coding
    {
      Code = "nmol{BCE}/mmol{creat}",
      Display = "nanomole bone collagen equivalent per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Neper = new Coding
    {
      Code = "Np",
      Display = "neper",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Nanosecond = new Coding
    {
      Code = "ns",
      Display = "nanosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanoenzymeUnitPerRedBloodCell = new Coding
    {
      Code = "nU/{RBC}",
      Display = "nanoenzyme unit per red blood cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NanoenzymeUnitPerMilliliter = new Coding
    {
      Code = "nU/mL",
      Display = "nanoenzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Oersted = new Coding
    {
      Code = "Oe",
      Display = "Oersted",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Ohm = new Coding
    {
      Code = "Ohm",
      Display = "Ohm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OhmMeter = new Coding
    {
      Code = "Ohm.m",
      Display = "Ohm meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Osmole = new Coding
    {
      Code = "osm",
      Display = "osmole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OsmolePerKilogram = new Coding
    {
      Code = "osm/kg",
      Display = "osmole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding OsmolePerLiter = new Coding
    {
      Code = "osm/L",
      Display = "osmole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Poise = new Coding
    {
      Code = "P",
      Display = "Poise",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picoampere = new Coding
    {
      Code = "pA",
      Display = "picoampere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Pascal = new Coding
    {
      Code = "Pa",
      Display = "Pascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Parsec = new Coding
    {
      Code = "pc",
      Display = "parsec",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picogram = new Coding
    {
      Code = "pg",
      Display = "picogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerCell = new Coding
    {
      Code = "pg/{cell}",
      Display = "picogram per cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerRedBloodCell = new Coding
    {
      Code = "pg/{RBC}",
      Display = "picogram per red blood cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerDeciliter = new Coding
    {
      Code = "pg/dL",
      Display = "picogram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerLiter = new Coding
    {
      Code = "pg/L",
      Display = "picogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerMilligram = new Coding
    {
      Code = "pg/mg",
      Display = "picogram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerMilligramOfCreatinine = new Coding
    {
      Code = "pg/mg{creat}",
      Display = "picogram per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerMilliliter = new Coding
    {
      Code = "pg/mL",
      Display = "picogram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicogramPerMillimeter = new Coding
    {
      Code = "pg/mm",
      Display = "picogram per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Phot = new Coding
    {
      Code = "ph",
      Display = "phot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picokatal = new Coding
    {
      Code = "pkat",
      Display = "picokatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picoliter = new Coding
    {
      Code = "pL",
      Display = "picoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picometer = new Coding
    {
      Code = "pm",
      Display = "picometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picomole = new Coding
    {
      Code = "pmol",
      Display = "picomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePer24Hour = new Coding
    {
      Code = "pmol/(24.h)",
      Display = "picomole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerRedBloodCell = new Coding
    {
      Code = "pmol/{RBC}",
      Display = "picomole per red blood cell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerDay = new Coding
    {
      Code = "pmol/d",
      Display = "picomole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerDeciliter = new Coding
    {
      Code = "pmol/dL",
      Display = "picomole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerGram = new Coding
    {
      Code = "pmol/g",
      Display = "picomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerHourPerMilligramOfProtein = new Coding
    {
      Code = "pmol/h/mg{protein}",
      Display = "picomole per hour per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerHourPerMilliliter = new Coding
    {
      Code = "pmol/h/mL",
      Display = "picomole per hour per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerLiter = new Coding
    {
      Code = "pmol/L",
      Display = "picomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMilligramOfProtein = new Coding
    {
      Code = "pmol/mg{protein}",
      Display = "picomole per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMinute = new Coding
    {
      Code = "pmol/min",
      Display = "picomole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMinutePerMilligramOfProtein = new Coding
    {
      Code = "pmol/min/mg{protein}",
      Display = "picomole per minute per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMilliliter = new Coding
    {
      Code = "pmol/mL",
      Display = "picomole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMillimole = new Coding
    {
      Code = "pmol/mmol",
      Display = "picomole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMillimoleOfCreatinine = new Coding
    {
      Code = "pmol/mmol{creat}",
      Display = "picomole per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMole = new Coding
    {
      Code = "pmol/mol",
      Display = "picomole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMicromole = new Coding
    {
      Code = "pmol/umol",
      Display = "picomole per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PicomolePerMicromoleOfCreatinine = new Coding
    {
      Code = "pmol/umol{creat}",
      Display = "picomole per micromole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picosecond = new Coding
    {
      Code = "ps",
      Display = "picosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Picotesla = new Coding
    {
      Code = "pT",
      Display = "picotesla",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Roentgen = new Coding
    {
      Code = "R",
      Display = "Roentgen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Radian = new Coding
    {
      Code = "rad",
      Display = "radian",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RadiationAbsorbedDose = new Coding
    {
      Code = "RAD",
      Display = "radiation absorbed dose",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RadiationEquivalentMan = new Coding
    {
      Code = "REM",
      Display = "radiation equivalent man",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Second_2 = new Coding
    {
      Code = "s",
      Display = "second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Siemens = new Coding
    {
      Code = "S",
      Display = "Siemens",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding SecondPerControl = new Coding
    {
      Code = "s/{control}",
      Display = "second per control",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Stilb = new Coding
    {
      Code = "sb",
      Display = "stilb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Spere = new Coding
    {
      Code = "sph",
      Display = "spere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Steradian = new Coding
    {
      Code = "sr",
      Display = "steradian",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Stere = new Coding
    {
      Code = "st",
      Display = "stere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Stokes = new Coding
    {
      Code = "St",
      Display = "Stokes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Sievert = new Coding
    {
      Code = "Sv",
      Display = "Sievert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Tonne = new Coding
    {
      Code = "t",
      Display = "tonne",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Tesla = new Coding
    {
      Code = "T",
      Display = "Tesla",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnifiedAtomicMassUnit = new Coding
    {
      Code = "u",
      Display = "unified atomic mass unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnit = new Coding
    {
      Code = "U",
      Display = "enzyme Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer1Hour = new Coding
    {
      Code = "U/(1.h)",
      Display = "enzyme Unit per 1 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer10GramOfFeces = new Coding
    {
      Code = "U/(10.g){feces}",
      Display = "enzyme unit per 10 gram of feces",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer12Hour = new Coding
    {
      Code = "U/(12.h)",
      Display = "enzyme unit per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer18Hour = new Coding
    {
      Code = "U/(18.h)",
      Display = "enzyme Unit per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer2Hour = new Coding
    {
      Code = "U/(2.h)",
      Display = "enzyme unit per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer24Hour = new Coding
    {
      Code = "U/(24.h)",
      Display = "enzyme unit per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer10 = new Coding
    {
      Code = "U/10",
      Display = "enzyme unit per 10",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer10Billion = new Coding
    {
      Code = "U/10*10",
      Display = "enzyme unit per 10 billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPer10BillionCells = new Coding
    {
      Code = "U/10*10{cells}",
      Display = "enzyme unit per 10 billion cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerTrillion = new Coding
    {
      Code = "U/10*12",
      Display = "enzyme unit per trillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerTrillionRedBloodCells = new Coding
    {
      Code = "U/10*12{RBCs}",
      Display = "enzyme unit per trillion red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMillion = new Coding
    {
      Code = "U/10*6",
      Display = "enzyme unit per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerBillion = new Coding
    {
      Code = "U/10*9",
      Display = "enzyme unit per billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerDay = new Coding
    {
      Code = "U/d",
      Display = "enzyme unit per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerDeciliter = new Coding
    {
      Code = "U/dL",
      Display = "enzyme unit per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerGram = new Coding
    {
      Code = "U/g",
      Display = "enzyme unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnitGramCre = new Coding
    {
      Code = "U/g{Cre}",
      Display = "Unit / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerGramOfCreatinine = new Coding
    {
      Code = "U/g{creat}",
      Display = "enzyme unit per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerGramOfHemoglobin = new Coding
    {
      Code = "U/g{Hb}",
      Display = "enzyme unit per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerGramOfHemoglobin_2 = new Coding
    {
      Code = "U/g{hemoglobin}",
      Display = "enzyme Unit per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnitsPerGramHemoglobin = new Coding
    {
      Code = "U/g{Hgb}",
      Display = "UnitsPerGramHemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerGramOfProtein = new Coding
    {
      Code = "U/g{protein}",
      Display = "enzyme unit per gram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerHour = new Coding
    {
      Code = "U/h",
      Display = "enzyme unit per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnitKilogramHour = new Coding
    {
      Code = "U/kg/h",
      Display = "Unit / kilogram / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerKilogramOfHemoglobin = new Coding
    {
      Code = "U/kg{Hb}",
      Display = "enzyme unit per kilogram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerKilogramOfHemoglobin_2 = new Coding
    {
      Code = "U/kg{hemoglobin}",
      Display = "enzyme Unit per kilogram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerLiter = new Coding
    {
      Code = "U/L",
      Display = "enzyme unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMinute = new Coding
    {
      Code = "U/min",
      Display = "enzyme unit per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMilliliter = new Coding
    {
      Code = "U/mL",
      Display = "enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding UnitMilliliterRBC = new Coding
    {
      Code = "U/mL{RBC}",
      Display = "Unit / milliliter RBC",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMilliliterOfRedBloodCells = new Coding
    {
      Code = "U/mL{RBCs}",
      Display = "enzyme unit per milliliter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMillimoleOfCreatinine = new Coding
    {
      Code = "U/mmol{creat}",
      Display = "enzyme unit per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMole = new Coding
    {
      Code = "U/mol",
      Display = "enzyme Unit per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerSecond = new Coding
    {
      Code = "U/s",
      Display = "enzyme unit per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerMicromole = new Coding
    {
      Code = "U/umol",
      Display = "enzyme Unit per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroInternationalUnit = new Coding
    {
      Code = "u[IU]",
      Display = "micro international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrointernationalUnitPerLiter = new Coding
    {
      Code = "u[IU]/L",
      Display = "microinternational unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroInternationalUnitPerMilliliter = new Coding
    {
      Code = "u[IU]/mL",
      Display = "micro international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerLiterAt25DegCelsius = new Coding
    {
      Code = "U{25Cel}/L",
      Display = "enzyme unit per liter at 25 deg Celsius",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EnzymeUnitPerLiterAt37DegCelsius = new Coding
    {
      Code = "U{37Cel}/L",
      Display = "enzyme unit per liter at 37 deg Celsius",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding GUnit = new Coding
    {
      Code = "U{G}",
      Display = "G unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MICROCURIE = new Coding
    {
      Code = "uCi",
      Display = "MICROCURIE",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microequivalents = new Coding
    {
      Code = "ueq",
      Display = "microequivalents",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroequivalentPerLiter = new Coding
    {
      Code = "ueq/L",
      Display = "microequivalent per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroequivalentPerMilliliter = new Coding
    {
      Code = "ueq/mL",
      Display = "microequivalent per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microgram = new Coding
    {
      Code = "ug",
      Display = "microgram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPer100Gram = new Coding
    {
      Code = "ug/(100.g)",
      Display = "microgram per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPer24Hour = new Coding
    {
      Code = "ug/(24.h)",
      Display = "microgram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPer8Hour = new Coding
    {
      Code = "ug/(8.h)",
      Display = "microgram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramKilogramAsteriskDay = new Coding
    {
      Code = "ug/(kg.d)",
      Display = "microgram / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramKilogramAsteriskHour = new Coding
    {
      Code = "ug/(kg.h)",
      Display = "microgram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerSquareFootInternational = new Coding
    {
      Code = "ug/[sft_i]",
      Display = "microgram per square foot (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerSpecimen = new Coding
    {
      Code = "ug/{specimen}",
      Display = "microgram per specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramSpecimen = new Coding
    {
      Code = "ug/{Specimen}",
      Display = "microgram / Specimen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroGramsPerTotalVolume = new Coding
    {
      Code = "ug/{TotalVolume}",
      Display = "MicroGramsPerTotalVolume",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerDay = new Coding
    {
      Code = "ug/d",
      Display = "microgram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerDeciliter = new Coding
    {
      Code = "ug/dL",
      Display = "microgram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramDeciliterRbc = new Coding
    {
      Code = "ug/dL{rbc}",
      Display = "microgram / deciliter rbc",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerDeciliterOfRedBloodCells = new Coding
    {
      Code = "ug/dL{RBCs}",
      Display = "microgram per deciliter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGram = new Coding
    {
      Code = "ug/g",
      Display = "microgram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramGramCre = new Coding
    {
      Code = "ug/g{Cre}",
      Display = "microgram / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfCreatinine = new Coding
    {
      Code = "ug/g{creat}",
      Display = "microgram per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfDryTissue = new Coding
    {
      Code = "ug/g{dry_tissue}",
      Display = "microgram per gram of dry tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfDryWeight = new Coding
    {
      Code = "ug/g{dry_wt}",
      Display = "microgram per gram of dry weight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramGramDryWeight = new Coding
    {
      Code = "ug/g{DryWeight}",
      Display = "microgram / gram DryWeight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfFeces = new Coding
    {
      Code = "ug/g{feces}",
      Display = "microgram  per gram of feces",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfHair = new Coding
    {
      Code = "ug/g{hair}",
      Display = "microgram per gram of hair",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfHemoglobin = new Coding
    {
      Code = "ug/g{Hb}",
      Display = "microgram per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramGramHgb = new Coding
    {
      Code = "ug/g{Hgb}",
      Display = "microgram / gram Hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerGramOfTissue = new Coding
    {
      Code = "ug/g{tissue}",
      Display = "microgram per gram of tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramGramTissue = new Coding
    {
      Code = "ug/g{Tissue}",
      Display = "microgram / gram Tissue",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerHour = new Coding
    {
      Code = "ug/h",
      Display = "microgram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerKilogram = new Coding
    {
      Code = "ug/kg",
      Display = "microgram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPer8Hour = new Coding
    {
      Code = "ug/kg/(8.h)",
      Display = "microgram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerDay = new Coding
    {
      Code = "ug/kg/d",
      Display = "microgram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerHour = new Coding
    {
      Code = "ug/kg/h",
      Display = "microgram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerMinute = new Coding
    {
      Code = "ug/kg/min",
      Display = "microgram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerLiter = new Coding
    {
      Code = "ug/L",
      Display = "microgram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerLiterPer24Hour = new Coding
    {
      Code = "ug/L/(24.h)",
      Display = "microgram per liter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramLiterDDU = new Coding
    {
      Code = "ug/L{DDU}",
      Display = "microgram / liter DDU",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerLiterOfRedBloodCells = new Coding
    {
      Code = "ug/L{RBCs}",
      Display = "microgram per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerSquareMeter = new Coding
    {
      Code = "ug/m2",
      Display = "microgram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerCubicMeter = new Coding
    {
      Code = "ug/m3",
      Display = "microgram per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMilligram = new Coding
    {
      Code = "ug/mg",
      Display = "microgram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramMilligramCre = new Coding
    {
      Code = "ug/mg{Cre}",
      Display = "microgram / milligram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMilligramOfCreatinine = new Coding
    {
      Code = "ug/mg{creat}",
      Display = "microgram per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMinute = new Coding
    {
      Code = "ug/min",
      Display = "microgram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMilliliter = new Coding
    {
      Code = "ug/mL",
      Display = "microgram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMilliliterClass = new Coding
    {
      Code = "ug/mL{class}",
      Display = "microgram per milliliter class",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMilliliterEquivalent = new Coding
    {
      Code = "ug/mL{eqv}",
      Display = "microgram per milliliter equivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramMilliliterFEU = new Coding
    {
      Code = "ug/mL{FEU}",
      Display = "microgram / milliliter FEU",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMillimole = new Coding
    {
      Code = "ug/mmol",
      Display = "microgram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerMillimoleOfCreatinine = new Coding
    {
      Code = "ug/mmol{creat}",
      Display = "microgram per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramPerNanogram = new Coding
    {
      Code = "ug/ng",
      Display = "microgram per nanogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramFibrinogenEquivalentUnitPerMilliliter = new Coding
    {
      Code = "ug{FEU}/mL",
      Display = "microgram fibrinogen equivalent unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrogramT4Deciliter = new Coding
    {
      Code = "ug{T4}/dL",
      Display = "microgram T4 / deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microkatal = new Coding
    {
      Code = "ukat",
      Display = "microkatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microliter = new Coding
    {
      Code = "uL",
      Display = "microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroliterPer2Hour = new Coding
    {
      Code = "uL/(2.h)",
      Display = "microliter per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroliterPerHour = new Coding
    {
      Code = "uL/h",
      Display = "microliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Micrometer = new Coding
    {
      Code = "um",
      Display = "micrometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicrometerPerSecond = new Coding
    {
      Code = "um/s",
      Display = "micrometer per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Micromole = new Coding
    {
      Code = "umol",
      Display = "micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePer2Hour = new Coding
    {
      Code = "umol/(2.h)",
      Display = "micromole per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePer24Hour = new Coding
    {
      Code = "umol/(24.h)",
      Display = "micromole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePer8Hour = new Coding
    {
      Code = "umol/(8.h)",
      Display = "micromole per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerDay = new Coding
    {
      Code = "umol/d",
      Display = "micromole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerDeciliter = new Coding
    {
      Code = "umol/dL",
      Display = "micromole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerDeciliterOfGlomerularFiltrate = new Coding
    {
      Code = "umol/dL{GF}",
      Display = "micromole per deciliter of glomerular filtrate",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerGram = new Coding
    {
      Code = "umol/g",
      Display = "micromole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleGramCre = new Coding
    {
      Code = "umol/g{Cre}",
      Display = "micromole / gram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerGramOfCreatinine = new Coding
    {
      Code = "umol/g{creat}",
      Display = "micromole per gram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerGramOfHemoglobin = new Coding
    {
      Code = "umol/g{Hb}",
      Display = "micromole per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerGramOfHemoglobin_2 = new Coding
    {
      Code = "umol/g{hemoglobin}",
      Display = "micromole per gram of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleGramHgb = new Coding
    {
      Code = "umol/g{Hgb}",
      Display = "micromole / gram Hgb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerHour = new Coding
    {
      Code = "umol/h",
      Display = "micromole per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleHourGram = new Coding
    {
      Code = "umol/h/g",
      Display = "micromole / hour / gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerHourPerLiter = new Coding
    {
      Code = "umol/h/L",
      Display = "micromole per hour per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerHourPerMilligramOfProtein = new Coding
    {
      Code = "umol/h/mg{protein}",
      Display = "micromole per hour per milligram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerKilogram = new Coding
    {
      Code = "umol/kg",
      Display = "micromole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerKilogramOfFeces = new Coding
    {
      Code = "umol/kg{feces}",
      Display = "micromole per kilogram of feces",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerLiter = new Coding
    {
      Code = "umol/L",
      Display = "micromole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerLiterPerHour = new Coding
    {
      Code = "umol/L/h",
      Display = "micromole per liter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerLiterOfRedBloodCells = new Coding
    {
      Code = "umol/L{rbc}",
      Display = "micromole per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerLiterOfRedBloodCells_2 = new Coding
    {
      Code = "umol/L{RBCs}",
      Display = "micromole per liter of red blood cells",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleMeter = new Coding
    {
      Code = "umol/m",
      Display = "micromole / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMilligram = new Coding
    {
      Code = "umol/mg",
      Display = "micromole per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleMilligramCre = new Coding
    {
      Code = "umol/mg{Cre}",
      Display = "micromole / milligram Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMilligramOfCreatinine = new Coding
    {
      Code = "umol/mg{creat}",
      Display = "micromole per milligram of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMinute = new Coding
    {
      Code = "umol/min",
      Display = "micromole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMinutePerGram = new Coding
    {
      Code = "umol/min/g",
      Display = "micromole per minute per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMinutePerGramOfMucosa = new Coding
    {
      Code = "umol/min/g{mucosa}",
      Display = "micromole per minute per gram of mucosa",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleMinuteGramProt = new Coding
    {
      Code = "umol/min/g{prot}",
      Display = "micromole / minute / gram prot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMinutePerGramOfProtein = new Coding
    {
      Code = "umol/min/g{protein}",
      Display = "micromole per minute per gram of protein",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMinutePerLiter = new Coding
    {
      Code = "umol/min/L",
      Display = "micromole per minute per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMilliliter = new Coding
    {
      Code = "umol/mL",
      Display = "micromole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMilliliterPerMinute = new Coding
    {
      Code = "umol/mL/min",
      Display = "micromole per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMillimole = new Coding
    {
      Code = "umol/mmol",
      Display = "micromole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMillimoleOfCreatinine = new Coding
    {
      Code = "umol/mmol{creat}",
      Display = "micromole per millimole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMole = new Coding
    {
      Code = "umol/mol",
      Display = "micromole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleMoleCre = new Coding
    {
      Code = "umol/mol{Cre}",
      Display = "micromole / mole Cre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMoleOfCreatinine = new Coding
    {
      Code = "umol/mol{creat}",
      Display = "micromole per mole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMoleOfHemoglobin = new Coding
    {
      Code = "umol/mol{Hb}",
      Display = "micromole per mole of hemoglobin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMicromole = new Coding
    {
      Code = "umol/umol",
      Display = "micromole per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromolePerMicromoleOfCreatinine = new Coding
    {
      Code = "umol/umol{creat}",
      Display = "micromole per micromole of creatinine",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicromoleBoneCollagenEquivalentPerMole = new Coding
    {
      Code = "umol{BCE}/mol",
      Display = "micromole bone collagen equivalent per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroOhm = new Coding
    {
      Code = "uOhm",
      Display = "microOhm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microsecond = new Coding
    {
      Code = "us",
      Display = "microsecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroUnit = new Coding
    {
      Code = "uU",
      Display = "microUnit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerGram = new Coding
    {
      Code = "uU/g",
      Display = "micro enzyme unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerLiter = new Coding
    {
      Code = "uU/L",
      Display = "micro enzyme unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerMilliliter = new Coding
    {
      Code = "uU/mL",
      Display = "micro enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Microvolt = new Coding
    {
      Code = "uV",
      Display = "microvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Volt = new Coding
    {
      Code = "V",
      Display = "volt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Watt = new Coding
    {
      Code = "W",
      Display = "Watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Weber = new Coding
    {
      Code = "Wb",
      Display = "Weber",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Week = new Coding
    {
      Code = "wk",
      Display = "week",
      System = "http://unitsofmeasure.org"
    };

    /// <summary>
    /// Literal for code: Minute
    /// </summary>
    public const string LiteralMinute = "'";

    /// <summary>
    /// Literal for code: Second
    /// </summary>
    public const string LiteralSecond = "''";

    /// <summary>
    /// Literal for code: Percent
    /// </summary>
    public const string LiteralPercent = "%";

    /// <summary>
    /// Literal for code: Percent100WBC
    /// </summary>
    public const string LiteralPercent100WBC = "%/100{WBC}";

    /// <summary>
    /// Literal for code: PercentOfSlope
    /// </summary>
    public const string LiteralPercentOfSlope = "%[slope]";

    /// <summary>
    /// Literal for code: Percent0to3Hours
    /// </summary>
    public const string LiteralPercent0to3Hours = "%{0to3Hours}";

    /// <summary>
    /// Literal for code: PercentAbnormal
    /// </summary>
    public const string LiteralPercentAbnormal = "%{abnormal}";

    /// <summary>
    /// Literal for code: PercentAbnormal_2
    /// </summary>
    public const string LiteralPercentAbnormal_2 = "%{Abnormal}";

    /// <summary>
    /// Literal for code: PercentActivity
    /// </summary>
    public const string LiteralPercentActivity = "%{activity}";

    /// <summary>
    /// Literal for code: PercentActivity_2
    /// </summary>
    public const string LiteralPercentActivity_2 = "%{Activity}";

    /// <summary>
    /// Literal for code: PercentAggregation
    /// </summary>
    public const string LiteralPercentAggregation = "%{aggregation}";

    /// <summary>
    /// Literal for code: PercentAt60Minute
    /// </summary>
    public const string LiteralPercentAt60Minute = "%{at_60_min}";

    /// <summary>
    /// Literal for code: PercentOfBacteria
    /// </summary>
    public const string LiteralPercentOfBacteria = "%{bacteria}";

    /// <summary>
    /// Literal for code: PercentBasalActivity
    /// </summary>
    public const string LiteralPercentBasalActivity = "%{basal_activity}";

    /// <summary>
    /// Literal for code: PercentBasalActivity_2
    /// </summary>
    public const string LiteralPercentBasalActivity_2 = "%{BasalActivity}";

    /// <summary>
    /// Literal for code: PercentOfBaseline
    /// </summary>
    public const string LiteralPercentOfBaseline = "%{baseline}";

    /// <summary>
    /// Literal for code: PercentBinding
    /// </summary>
    public const string LiteralPercentBinding = "%{binding}";

    /// <summary>
    /// Literal for code: PercentBinding_2
    /// </summary>
    public const string LiteralPercentBinding_2 = "%{Binding}";

    /// <summary>
    /// Literal for code: PercentBlockade
    /// </summary>
    public const string LiteralPercentBlockade = "%{blockade}";

    /// <summary>
    /// Literal for code: PercentBlockade_2
    /// </summary>
    public const string LiteralPercentBlockade_2 = "%{Blockade}";

    /// <summary>
    /// Literal for code: PercentBlocked
    /// </summary>
    public const string LiteralPercentBlocked = "%{blocked}";

    /// <summary>
    /// Literal for code: PercentBound
    /// </summary>
    public const string LiteralPercentBound = "%{bound}";

    /// <summary>
    /// Literal for code: PercentBound_2
    /// </summary>
    public const string LiteralPercentBound_2 = "%{Bound}";

    /// <summary>
    /// Literal for code: PercentBreakdown
    /// </summary>
    public const string LiteralPercentBreakdown = "%{breakdown}";

    /// <summary>
    /// Literal for code: PercentCarboxyhemoglobin
    /// </summary>
    public const string LiteralPercentCarboxyhemoglobin = "%{Carboxyhemoglobin}";

    /// <summary>
    /// Literal for code: PercentOfCells
    /// </summary>
    public const string LiteralPercentOfCells = "%{cells}";

    /// <summary>
    /// Literal for code: PercentConversion
    /// </summary>
    public const string LiteralPercentConversion = "%{Conversion}";

    /// <summary>
    /// Literal for code: PercentCound
    /// </summary>
    public const string LiteralPercentCound = "%{Cound}";

    /// <summary>
    /// Literal for code: PercentDeficient
    /// </summary>
    public const string LiteralPercentDeficient = "%{deficient}";

    /// <summary>
    /// Literal for code: PercentDose
    /// </summary>
    public const string LiteralPercentDose = "%{dose}";

    /// <summary>
    /// Literal for code: PercentEosSeen
    /// </summary>
    public const string LiteralPercentEosSeen = "%{EosSeen}";

    /// <summary>
    /// Literal for code: PercentExcretion
    /// </summary>
    public const string LiteralPercentExcretion = "%{excretion}";

    /// <summary>
    /// Literal for code: PercentExcretion_2
    /// </summary>
    public const string LiteralPercentExcretion_2 = "%{Excretion}";

    /// <summary>
    /// Literal for code: PercentFat
    /// </summary>
    public const string LiteralPercentFat = "%{Fat}";

    /// <summary>
    /// Literal for code: PercentFetalErythrocytes
    /// </summary>
    public const string LiteralPercentFetalErythrocytes = "%{FetalErythrocytes}";

    /// <summary>
    /// Literal for code: PercentHemoglobin
    /// </summary>
    public const string LiteralPercentHemoglobin = "%{Hb}";

    /// <summary>
    /// Literal for code: PercentHemoglobin_2
    /// </summary>
    public const string LiteralPercentHemoglobin_2 = "%{Hemoglobin}";

    /// <summary>
    /// Literal for code: PercentHemoglobinA1C
    /// </summary>
    public const string LiteralPercentHemoglobinA1C = "%{HemoglobinA1C}";

    /// <summary>
    /// Literal for code: PercentHemoglobinSaturation
    /// </summary>
    public const string LiteralPercentHemoglobinSaturation = "%{HemoglobinSaturation}";

    /// <summary>
    /// Literal for code: PercentHemolysis
    /// </summary>
    public const string LiteralPercentHemolysis = "%{hemolysis}";

    /// <summary>
    /// Literal for code: PercentHemolysis_2
    /// </summary>
    public const string LiteralPercentHemolysis_2 = "%{Hemolysis}";

    /// <summary>
    /// Literal for code: PercentHumanResponse
    /// </summary>
    public const string LiteralPercentHumanResponse = "%{HumanResponse}";

    /// <summary>
    /// Literal for code: PercentIndex
    /// </summary>
    public const string LiteralPercentIndex = "%{index}";

    /// <summary>
    /// Literal for code: PercentIndex_2
    /// </summary>
    public const string LiteralPercentIndex_2 = "%{Index}";

    /// <summary>
    /// Literal for code: PercentInhibition
    /// </summary>
    public const string LiteralPercentInhibition = "%{inhibition}";

    /// <summary>
    /// Literal for code: PercentInhibition_2
    /// </summary>
    public const string LiteralPercentInhibition_2 = "%{Inhibition}";

    /// <summary>
    /// Literal for code: PercentLive
    /// </summary>
    public const string LiteralPercentLive = "%{Live}";

    /// <summary>
    /// Literal for code: PercentLossOfAcetylcholineReceptor
    /// </summary>
    public const string LiteralPercentLossOfAcetylcholineReceptor = "%{loss_AChR}";

    /// <summary>
    /// Literal for code: PercentLoss
    /// </summary>
    public const string LiteralPercentLoss = "%{loss}";

    /// <summary>
    /// Literal for code: PercentLysis
    /// </summary>
    public const string LiteralPercentLysis = "%{lysis}";

    /// <summary>
    /// Literal for code: PercentNegativeControl
    /// </summary>
    public const string LiteralPercentNegativeControl = "%{Negative Control}";

    /// <summary>
    /// Literal for code: PercentNormalPooledPlasma
    /// </summary>
    public const string LiteralPercentNormalPooledPlasma = "%{normal_pooled_plasma}";

    /// <summary>
    /// Literal for code: PercentNormal
    /// </summary>
    public const string LiteralPercentNormal = "%{normal}";

    /// <summary>
    /// Literal for code: PercentNormal_2
    /// </summary>
    public const string LiteralPercentNormal_2 = "%{Normal}";

    /// <summary>
    /// Literal for code: PercentNormalControl
    /// </summary>
    public const string LiteralPercentNormalControl = "%{NormalControl}";

    /// <summary>
    /// Literal for code: PercentNormalPooledPlasma_2
    /// </summary>
    public const string LiteralPercentNormalPooledPlasma_2 = "%{NormalPooledPlasma}";

    /// <summary>
    /// Literal for code: PercentOfAvailable
    /// </summary>
    public const string LiteralPercentOfAvailable = "%{ofAvailable}";

    /// <summary>
    /// Literal for code: PercentOfBacteria_2
    /// </summary>
    public const string LiteralPercentOfBacteria_2 = "%{ofBacteria}";

    /// <summary>
    /// Literal for code: PercentOfLymphocytes
    /// </summary>
    public const string LiteralPercentOfLymphocytes = "%{OfLymphocytes}";

    /// <summary>
    /// Literal for code: PercentOfWBCs
    /// </summary>
    public const string LiteralPercentOfWBCs = "%{OfWBCs}";

    /// <summary>
    /// Literal for code: PercentOxygen
    /// </summary>
    public const string LiteralPercentOxygen = "%{Oxygen}";

    /// <summary>
    /// Literal for code: PercentPenetration
    /// </summary>
    public const string LiteralPercentPenetration = "%{penetration}";

    /// <summary>
    /// Literal for code: PercentPositive
    /// </summary>
    public const string LiteralPercentPositive = "%{positive}";

    /// <summary>
    /// Literal for code: PercentPositive_2
    /// </summary>
    public const string LiteralPercentPositive_2 = "%{Positive}";

    /// <summary>
    /// Literal for code: PercentPrecipitate
    /// </summary>
    public const string LiteralPercentPrecipitate = "%{Precipitate}";

    /// <summary>
    /// Literal for code: PercentOfRedBloodCells
    /// </summary>
    public const string LiteralPercentOfRedBloodCells = "%{RBCs}";

    /// <summary>
    /// Literal for code: PercentReactive
    /// </summary>
    public const string LiteralPercentReactive = "%{reactive}";

    /// <summary>
    /// Literal for code: PercentReactivity
    /// </summary>
    public const string LiteralPercentReactivity = "%{Reactivity}";

    /// <summary>
    /// Literal for code: PercentRecovery
    /// </summary>
    public const string LiteralPercentRecovery = "%{recovery}";

    /// <summary>
    /// Literal for code: PercentReference
    /// </summary>
    public const string LiteralPercentReference = "%{reference}";

    /// <summary>
    /// Literal for code: RelativePercent
    /// </summary>
    public const string LiteralRelativePercent = "%{relative}";

    /// <summary>
    /// Literal for code: PercentResidual
    /// </summary>
    public const string LiteralPercentResidual = "%{residual}";

    /// <summary>
    /// Literal for code: PercentResponse
    /// </summary>
    public const string LiteralPercentResponse = "%{response}";

    /// <summary>
    /// Literal for code: PercentRisk
    /// </summary>
    public const string LiteralPercentRisk = "%{risk}";

    /// <summary>
    /// Literal for code: PercentSaturation
    /// </summary>
    public const string LiteralPercentSaturation = "%{saturation}";

    /// <summary>
    /// Literal for code: PercentSpermMotility
    /// </summary>
    public const string LiteralPercentSpermMotility = "%{SpermMotility}";

    /// <summary>
    /// Literal for code: PercentTotal
    /// </summary>
    public const string LiteralPercentTotal = "%{total}";

    /// <summary>
    /// Literal for code: PercentTotal_2
    /// </summary>
    public const string LiteralPercentTotal_2 = "%{Total}";

    /// <summary>
    /// Literal for code: PercentTotalProtein
    /// </summary>
    public const string LiteralPercentTotalProtein = "%{TotalProtein}";

    /// <summary>
    /// Literal for code: PercentTotQuoteCholesterol
    /// </summary>
    public const string LiteralPercentTotQuoteCholesterol = "%{Tot'Cholesterol}";

    /// <summary>
    /// Literal for code: PercentTotQuoteHgb
    /// </summary>
    public const string LiteralPercentTotQuoteHgb = "%{Tot'Hgb}";

    /// <summary>
    /// Literal for code: PercentUptake
    /// </summary>
    public const string LiteralPercentUptake = "%{uptake}";

    /// <summary>
    /// Literal for code: PercentUptake_2
    /// </summary>
    public const string LiteralPercentUptake_2 = "%{Uptake}";

    /// <summary>
    /// Literal for code: PercentViable
    /// </summary>
    public const string LiteralPercentViable = "%{viable}";

    /// <summary>
    /// Literal for code: VolumePercent
    /// </summary>
    public const string LiteralVolumePercent = "%{vol}";

    /// <summary>
    /// Literal for code: PercentOfWhiteBloodCells
    /// </summary>
    public const string LiteralPercentOfWhiteBloodCells = "%{WBCs}";

    /// <summary>
    /// Literal for code: PercentWeightToWeight
    /// </summary>
    public const string LiteralPercentWeightToWeight = "%{WeightToWeight}";

    /// <summary>
    /// Literal for code: Per12AsteriskHour
    /// </summary>
    public const string LiteralPer12AsteriskHour = "/(12.h)";

    /// <summary>
    /// Literal for code: PerArbitraryUnit
    /// </summary>
    public const string LiteralPerArbitraryUnit = "/[arb'U]";

    /// <summary>
    /// Literal for code: PerHighPowerField
    /// </summary>
    public const string LiteralPerHighPowerField = "/[HPF]";

    /// <summary>
    /// Literal for code: PerInternationalUnit
    /// </summary>
    public const string LiteralPerInternationalUnit = "/[iU]";

    /// <summary>
    /// Literal for code: PerInternationalUnit_2
    /// </summary>
    public const string LiteralPerInternationalUnit_2 = "/[IU]";

    /// <summary>
    /// Literal for code: PerLowPowerField
    /// </summary>
    public const string LiteralPerLowPowerField = "/[LPF]";

    /// <summary>
    /// Literal for code: PerEntity
    /// </summary>
    public const string LiteralPerEntity = "/{entity}";

    /// <summary>
    /// Literal for code: PerEntity_2
    /// </summary>
    public const string LiteralPerEntity_2 = "/{Entity}";

    /// <summary>
    /// Literal for code: PerOif
    /// </summary>
    public const string LiteralPerOif = "/{oif}";

    /// <summary>
    /// Literal for code: PerOilImmersionField
    /// </summary>
    public const string LiteralPerOilImmersionField = "/{OIF}";

    /// <summary>
    /// Literal for code: PerSpecimen
    /// </summary>
    public const string LiteralPerSpecimen = "/{Specimen}";

    /// <summary>
    /// Literal for code: PerTot
    /// </summary>
    public const string LiteralPerTot = "/{tot}";

    /// <summary>
    /// Literal for code: PerTenGiga
    /// </summary>
    public const string LiteralPerTenGiga = "/10*10";

    /// <summary>
    /// Literal for code: PerTrillion
    /// </summary>
    public const string LiteralPerTrillion = "/10*12";

    /// <summary>
    /// Literal for code: PerTrillionRedBloodCells
    /// </summary>
    public const string LiteralPerTrillionRedBloodCells = "/10*12{rbc}";

    /// <summary>
    /// Literal for code: PerTrillionRedBloodCells_2
    /// </summary>
    public const string LiteralPerTrillionRedBloodCells_2 = "/10*12{RBCs}";

    /// <summary>
    /// Literal for code: PerThousand
    /// </summary>
    public const string LiteralPerThousand = "/10*3";

    /// <summary>
    /// Literal for code: PerThousandRedBloodCells
    /// </summary>
    public const string LiteralPerThousandRedBloodCells = "/10*3.{RBCs}";

    /// <summary>
    /// Literal for code: Per10ThousandRedBloodCells
    /// </summary>
    public const string LiteralPer10ThousandRedBloodCells = "/10*4{RBCs}";

    /// <summary>
    /// Literal for code: PerMillion
    /// </summary>
    public const string LiteralPerMillion = "/10*6";

    /// <summary>
    /// Literal for code: PerBillion
    /// </summary>
    public const string LiteralPerBillion = "/10*9";

    /// <summary>
    /// Literal for code: Per100
    /// </summary>
    public const string LiteralPer100 = "/100";

    /// <summary>
    /// Literal for code: Per100Cells
    /// </summary>
    public const string LiteralPer100Cells = "/100{cells}";

    /// <summary>
    /// Literal for code: Per100Neutrophils
    /// </summary>
    public const string LiteralPer100Neutrophils = "/100{neutrophils}";

    /// <summary>
    /// Literal for code: Per100Spermatozoa
    /// </summary>
    public const string LiteralPer100Spermatozoa = "/100{spermatozoa}";

    /// <summary>
    /// Literal for code: Per100Spermatozoa_2
    /// </summary>
    public const string LiteralPer100Spermatozoa_2 = "/100{Spermatozoa}";

    /// <summary>
    /// Literal for code: Per100WBC
    /// </summary>
    public const string LiteralPer100WBC = "/100{WBC}";

    /// <summary>
    /// Literal for code: Per100WBC_2
    /// </summary>
    public const string LiteralPer100WBC_2 = "/100{WBCs}";

    /// <summary>
    /// Literal for code: PerYear
    /// </summary>
    public const string LiteralPerYear = "/a";

    /// <summary>
    /// Literal for code: PerCentimeterOfWater
    /// </summary>
    public const string LiteralPerCentimeterOfWater = "/cm[H2O]";

    /// <summary>
    /// Literal for code: PerDay
    /// </summary>
    public const string LiteralPerDay = "/d";

    /// <summary>
    /// Literal for code: PerDeciliter
    /// </summary>
    public const string LiteralPerDeciliter = "/dL";

    /// <summary>
    /// Literal for code: PerGram
    /// </summary>
    public const string LiteralPerGram = "/g";

    /// <summary>
    /// Literal for code: PerGramCreat
    /// </summary>
    public const string LiteralPerGramCreat = "/g{creat}";

    /// <summary>
    /// Literal for code: PerGramOfHemoglobin
    /// </summary>
    public const string LiteralPerGramOfHemoglobin = "/g{Hb}";

    /// <summary>
    /// Literal for code: PerGramHgb
    /// </summary>
    public const string LiteralPerGramHgb = "/g{hgb}";

    /// <summary>
    /// Literal for code: PerGramHemoglobin
    /// </summary>
    public const string LiteralPerGramHemoglobin = "/g{HGB}";

    /// <summary>
    /// Literal for code: PerGramOfTotalNitrogen
    /// </summary>
    public const string LiteralPerGramOfTotalNitrogen = "/g{tot_nit}";

    /// <summary>
    /// Literal for code: PerGramOfTotalProtein
    /// </summary>
    public const string LiteralPerGramOfTotalProtein = "/g{tot_prot}";

    /// <summary>
    /// Literal for code: PerGramTotQuoteNit
    /// </summary>
    public const string LiteralPerGramTotQuoteNit = "/g{tot'nit}";

    /// <summary>
    /// Literal for code: PerGramTotQuoteProt
    /// </summary>
    public const string LiteralPerGramTotQuoteProt = "/g{tot'prot}";

    /// <summary>
    /// Literal for code: PerGramOfWetTissue
    /// </summary>
    public const string LiteralPerGramOfWetTissue = "/g{wet_tis}";

    /// <summary>
    /// Literal for code: PerGramWetQuoteTis
    /// </summary>
    public const string LiteralPerGramWetQuoteTis = "/g{wet'tis}";

    /// <summary>
    /// Literal for code: PerHour
    /// </summary>
    public const string LiteralPerHour = "/h";

    /// <summary>
    /// Literal for code: PerKilogram
    /// </summary>
    public const string LiteralPerKilogram = "/kg";

    /// <summary>
    /// Literal for code: PerKilogramOfBodyWeight
    /// </summary>
    public const string LiteralPerKilogramOfBodyWeight = "/kg{body_wt}";

    /// <summary>
    /// Literal for code: PerKilogramBodyWt
    /// </summary>
    public const string LiteralPerKilogramBodyWt = "/kg{body'wt}";

    /// <summary>
    /// Literal for code: PerLiter
    /// </summary>
    public const string LiteralPerLiter = "/L";

    /// <summary>
    /// Literal for code: PerSquareMeter
    /// </summary>
    public const string LiteralPerSquareMeter = "/m2";

    /// <summary>
    /// Literal for code: PerCubicMeter
    /// </summary>
    public const string LiteralPerCubicMeter = "/m3";

    /// <summary>
    /// Literal for code: PerMilligram
    /// </summary>
    public const string LiteralPerMilligram = "/mg";

    /// <summary>
    /// Literal for code: PerMinute
    /// </summary>
    public const string LiteralPerMinute = "/min";

    /// <summary>
    /// Literal for code: PerMilliliter
    /// </summary>
    public const string LiteralPerMilliliter = "/mL";

    /// <summary>
    /// Literal for code: PerMillimeter
    /// </summary>
    public const string LiteralPerMillimeter = "/mm";

    /// <summary>
    /// Literal for code: PerCubicMillimeter
    /// </summary>
    public const string LiteralPerCubicMillimeter = "/mm3";

    /// <summary>
    /// Literal for code: PerMillimole
    /// </summary>
    public const string LiteralPerMillimole = "/mmol";

    /// <summary>
    /// Literal for code: PerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralPerMillimoleOfCreatinine = "/mmol{creat}";

    /// <summary>
    /// Literal for code: PerMonth
    /// </summary>
    public const string LiteralPerMonth = "/mo";

    /// <summary>
    /// Literal for code: PerSecond
    /// </summary>
    public const string LiteralPerSecond = "/s";

    /// <summary>
    /// Literal for code: PerEnzymeUnit
    /// </summary>
    public const string LiteralPerEnzymeUnit = "/U";

    /// <summary>
    /// Literal for code: PerMicrogram
    /// </summary>
    public const string LiteralPerMicrogram = "/ug";

    /// <summary>
    /// Literal for code: PerMicroliter
    /// </summary>
    public const string LiteralPerMicroliter = "/uL";

    /// <summary>
    /// Literal for code: PerWeek
    /// </summary>
    public const string LiteralPerWeek = "/wk";

    /// <summary>
    /// Literal for code: Acre
    /// </summary>
    public const string LiteralAcre = "[acr_br]";

    /// <summary>
    /// Literal for code: Acre_2
    /// </summary>
    public const string LiteralAcre_2 = "[acr_us]";

    /// <summary>
    /// Literal for code: AmbA1Units
    /// </summary>
    public const string LiteralAmbA1Units = "[Amb'a'1'U]";

    /// <summary>
    /// Literal for code: IgAAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgAAnticardiolipinUnit = "[APL'U]";

    /// <summary>
    /// Literal for code: IgAAnticardiolipinUnitPerMilliliter
    /// </summary>
    public const string LiteralIgAAnticardiolipinUnitPerMilliliter = "[APL'U]/mL";

    /// <summary>
    /// Literal for code: ArbitraryUnit
    /// </summary>
    public const string LiteralArbitraryUnit = "[arb'U]";

    /// <summary>
    /// Literal for code: ArbitaryUnitLiter
    /// </summary>
    public const string LiteralArbitaryUnitLiter = "[arb'U]/L";

    /// <summary>
    /// Literal for code: ArbitraryUnitPerMilliliter
    /// </summary>
    public const string LiteralArbitraryUnitPerMilliliter = "[arb'U]/mL";

    /// <summary>
    /// Literal for code: AllergyUnit
    /// </summary>
    public const string LiteralAllergyUnit = "[AU]";

    /// <summary>
    /// Literal for code: BioequivalentAllergenUnit
    /// </summary>
    public const string LiteralBioequivalentAllergenUnit = "[BAU]";

    /// <summary>
    /// Literal for code: Barrel
    /// </summary>
    public const string LiteralBarrel = "[bbl_us]";

    /// <summary>
    /// Literal for code: BodanskyUnit
    /// </summary>
    public const string LiteralBodanskyUnit = "[bdsk'U]";

    /// <summary>
    /// Literal for code: BethesdaUnit
    /// </summary>
    public const string LiteralBethesdaUnit = "[beth'U]";

    /// <summary>
    /// Literal for code: BoardFoot
    /// </summary>
    public const string LiteralBoardFoot = "[bf_i]";

    /// <summary>
    /// Literal for code: BritishThermalUnit
    /// </summary>
    public const string LiteralBritishThermalUnit = "[Btu]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt39DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt39DegreesF = "[Btu_39]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt59DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt59DegreesF = "[Btu_59]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt60DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt60DegreesF = "[Btu_60]";

    /// <summary>
    /// Literal for code: InternationalTableBritishThermalUnit
    /// </summary>
    public const string LiteralInternationalTableBritishThermalUnit = "[Btu_IT]";

    /// <summary>
    /// Literal for code: MeanBritishThermalUnit
    /// </summary>
    public const string LiteralMeanBritishThermalUnit = "[Btu_m]";

    /// <summary>
    /// Literal for code: ThermochemicalBritishThermalUnit
    /// </summary>
    public const string LiteralThermochemicalBritishThermalUnit = "[Btu_th]";

    /// <summary>
    /// Literal for code: Bushel
    /// </summary>
    public const string LiteralBushel = "[bu_br]";

    /// <summary>
    /// Literal for code: Bushel_2
    /// </summary>
    public const string LiteralBushel_2 = "[bu_us]";

    /// <summary>
    /// Literal for code: VelocityOfLight
    /// </summary>
    public const string LiteralVelocityOfLight = "[c]";

    /// <summary>
    /// Literal for code: NutritionLabelCalories
    /// </summary>
    public const string LiteralNutritionLabelCalories = "[Cal]";

    /// <summary>
    /// Literal for code: CaratOfGoldAlloys
    /// </summary>
    public const string LiteralCaratOfGoldAlloys = "[car_Au]";

    /// <summary>
    /// Literal for code: MetricCarat
    /// </summary>
    public const string LiteralMetricCarat = "[car_m]";

    /// <summary>
    /// Literal for code: CELLCULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralCELLCULTUREINFECTIOUSDOSE50Percent = "[CCID_50]";

    /// <summary>
    /// Literal for code: CubicFoot
    /// </summary>
    public const string LiteralCubicFoot = "[cft_i]";

    /// <summary>
    /// Literal for code: ColonyFormingUnit
    /// </summary>
    public const string LiteralColonyFormingUnit = "[CFU]";

    /// <summary>
    /// Literal for code: ColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralColonyFormingUnitPerLiter = "[CFU]/L";

    /// <summary>
    /// Literal for code: ColonyFormingUnitPerMilliliter
    /// </summary>
    public const string LiteralColonyFormingUnitPerMilliliter = "[CFU]/mL";

    /// <summary>
    /// Literal for code: FrenchCatheterGauge
    /// </summary>
    public const string LiteralFrenchCatheterGauge = "[Ch]";

    /// <summary>
    /// Literal for code: GunterQuoteSChain
    /// </summary>
    public const string LiteralGunterQuoteSChain = "[ch_br]";

    /// <summary>
    /// Literal for code: GunterQuoteSChainSurveyorQuoteSChain
    /// </summary>
    public const string LiteralGunterQuoteSChainSurveyorQuoteSChain = "[ch_us]";

    /// <summary>
    /// Literal for code: CiceroDidotQuoteSPica
    /// </summary>
    public const string LiteralCiceroDidotQuoteSPica = "[cicero]";

    /// <summary>
    /// Literal for code: CubicInch
    /// </summary>
    public const string LiteralCubicInch = "[cin_i]";

    /// <summary>
    /// Literal for code: CircularMil
    /// </summary>
    public const string LiteralCircularMil = "[cml_i]";

    /// <summary>
    /// Literal for code: Cord
    /// </summary>
    public const string LiteralCord = "[cr_i]";

    /// <summary>
    /// Literal for code: Cord_2
    /// </summary>
    public const string LiteralCord_2 = "[crd_us]";

    /// <summary>
    /// Literal for code: Cup
    /// </summary>
    public const string LiteralCup = "[cup_us]";

    /// <summary>
    /// Literal for code: CubicYard
    /// </summary>
    public const string LiteralCubicYard = "[cyd_i]";

    /// <summary>
    /// Literal for code: DANTIGENUNITS
    /// </summary>
    public const string LiteralDANTIGENUNITS = "[D'ag'U]";

    /// <summary>
    /// Literal for code: DegreeFahrenheit
    /// </summary>
    public const string LiteralDegreeFahrenheit = "[degF]";

    /// <summary>
    /// Literal for code: DidotDidotQuoteSPoint
    /// </summary>
    public const string LiteralDidotDidotQuoteSPoint = "[didot]";

    /// <summary>
    /// Literal for code: Diopter
    /// </summary>
    public const string LiteralDiopter = "[diop]";

    /// <summary>
    /// Literal for code: DryPint
    /// </summary>
    public const string LiteralDryPint = "[dpt_us]";

    /// <summary>
    /// Literal for code: DryQuart
    /// </summary>
    public const string LiteralDryQuart = "[dqt_us]";

    /// <summary>
    /// Literal for code: DramDrachm
    /// </summary>
    public const string LiteralDramDrachm = "[dr_ap]";

    /// <summary>
    /// Literal for code: DramUSAndBritish
    /// </summary>
    public const string LiteralDramUSAndBritish = "[dr_av]";

    /// <summary>
    /// Literal for code: Drop
    /// </summary>
    public const string LiteralDrop = "[drp]";

    /// <summary>
    /// Literal for code: DropHPF
    /// </summary>
    public const string LiteralDropHPF = "[drp]/[HPF]";

    /// <summary>
    /// Literal for code: DropHour
    /// </summary>
    public const string LiteralDropHour = "[drp]/h";

    /// <summary>
    /// Literal for code: DropMinute
    /// </summary>
    public const string LiteralDropMinute = "[drp]/min";

    /// <summary>
    /// Literal for code: DropMilliliter
    /// </summary>
    public const string LiteralDropMilliliter = "[drp]/mL";

    /// <summary>
    /// Literal for code: DropSecond
    /// </summary>
    public const string LiteralDropSecond = "[drp]/s";

    /// <summary>
    /// Literal for code: DyeUnit
    /// </summary>
    public const string LiteralDyeUnit = "[dye'U]";

    /// <summary>
    /// Literal for code: ElementaryCharge
    /// </summary>
    public const string LiteralElementaryCharge = "[e]";

    /// <summary>
    /// Literal for code: PermittivityOfVacuum
    /// </summary>
    public const string LiteralPermittivityOfVacuum = "[eps_0]";

    /// <summary>
    /// Literal for code: FluidDram
    /// </summary>
    public const string LiteralFluidDram = "[fdr_br]";

    /// <summary>
    /// Literal for code: FluidDram_2
    /// </summary>
    public const string LiteralFluidDram_2 = "[fdr_us]";

    /// <summary>
    /// Literal for code: FOCUSFORMINGUNITS
    /// </summary>
    public const string LiteralFOCUSFORMINGUNITS = "[FFU]";

    /// <summary>
    /// Literal for code: FluidOunce
    /// </summary>
    public const string LiteralFluidOunce = "[foz_br]";

    /// <summary>
    /// Literal for code: FluidOunce_2
    /// </summary>
    public const string LiteralFluidOunce_2 = "[foz_us]";

    /// <summary>
    /// Literal for code: Foot
    /// </summary>
    public const string LiteralFoot = "[ft_br]";

    /// <summary>
    /// Literal for code: Feet
    /// </summary>
    public const string LiteralFeet = "[ft_i]";

    /// <summary>
    /// Literal for code: Foot_2
    /// </summary>
    public const string LiteralFoot_2 = "[ft_us]";

    /// <summary>
    /// Literal for code: Fathom
    /// </summary>
    public const string LiteralFathom = "[fth_br]";

    /// <summary>
    /// Literal for code: Fathom_2
    /// </summary>
    public const string LiteralFathom_2 = "[fth_i]";

    /// <summary>
    /// Literal for code: Fathom_3
    /// </summary>
    public const string LiteralFathom_3 = "[fth_us]";

    /// <summary>
    /// Literal for code: Furlong
    /// </summary>
    public const string LiteralFurlong = "[fur_us]";

    /// <summary>
    /// Literal for code: NewtonianConstantOfGravitation
    /// </summary>
    public const string LiteralNewtonianConstantOfGravitation = "[G]";

    /// <summary>
    /// Literal for code: Gallon
    /// </summary>
    public const string LiteralGallon = "[gal_br]";

    /// <summary>
    /// Literal for code: QueenAnneQuoteSWineGallon
    /// </summary>
    public const string LiteralQueenAnneQuoteSWineGallon = "[gal_us]";

    /// <summary>
    /// Literal for code: HistoricalWinchesterGallon
    /// </summary>
    public const string LiteralHistoricalWinchesterGallon = "[gal_wi]";

    /// <summary>
    /// Literal for code: Gill
    /// </summary>
    public const string LiteralGill = "[gil_br]";

    /// <summary>
    /// Literal for code: Gill_2
    /// </summary>
    public const string LiteralGill_2 = "[gil_us]";

    /// <summary>
    /// Literal for code: IgGAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgGAnticardiolipinUnit = "[GPL'U]";

    /// <summary>
    /// Literal for code: IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralIgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[GPL'U]/mL";

    /// <summary>
    /// Literal for code: Grain
    /// </summary>
    public const string LiteralGrain = "[gr]";

    /// <summary>
    /// Literal for code: PlanckConstant
    /// </summary>
    public const string LiteralPlanckConstant = "[h]";

    /// <summary>
    /// Literal for code: Hand
    /// </summary>
    public const string LiteralHand = "[hd_i]";

    /// <summary>
    /// Literal for code: HounsfieldUnit
    /// </summary>
    public const string LiteralHounsfieldUnit = "[hnsf'U]";

    /// <summary>
    /// Literal for code: Horsepower
    /// </summary>
    public const string LiteralHorsepower = "[HP]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFCENTESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFCENTESIMALSERIES = "[hp_C]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFMILLESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFMILLESIMALSERIES = "[hp_M]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES = "[hp_Q]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFDECIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFDECIMALSERIES = "[hp_X]";

    /// <summary>
    /// Literal for code: HighPowerField
    /// </summary>
    public const string LiteralHighPowerField = "[HPF]";

    /// <summary>
    /// Literal for code: Inch
    /// </summary>
    public const string LiteralInch = "[in_br]";

    /// <summary>
    /// Literal for code: InchInternational
    /// </summary>
    public const string LiteralInchInternational = "[in_i]";

    /// <summary>
    /// Literal for code: InchInternationalOfWater
    /// </summary>
    public const string LiteralInchInternationalOfWater = "[in_i'H2O]";

    /// <summary>
    /// Literal for code: InchOfMercuryColumn
    /// </summary>
    public const string LiteralInchOfMercuryColumn = "[in_i'Hg]";

    /// <summary>
    /// Literal for code: Inch_2
    /// </summary>
    public const string LiteralInch_2 = "[in_us]";

    /// <summary>
    /// Literal for code: InternationalUnit
    /// </summary>
    public const string LiteralInternationalUnit = "[iU]";

    /// <summary>
    /// Literal for code: InternationalUnit_2
    /// </summary>
    public const string LiteralInternationalUnit_2 = "[IU]";

    /// <summary>
    /// Literal for code: InternationalUnitPer2Hour
    /// </summary>
    public const string LiteralInternationalUnitPer2Hour = "[IU]/(2.h)";

    /// <summary>
    /// Literal for code: InternationalUnitPer24Hour
    /// </summary>
    public const string LiteralInternationalUnitPer24Hour = "[IU]/(24.h)";

    /// <summary>
    /// Literal for code: InternationalUnitPerBillionRedBloodCells
    /// </summary>
    public const string LiteralInternationalUnitPerBillionRedBloodCells = "[IU]/10*9{RBCs}";

    /// <summary>
    /// Literal for code: InternationalUnitPerDay
    /// </summary>
    public const string LiteralInternationalUnitPerDay = "[IU]/d";

    /// <summary>
    /// Literal for code: InternationalUnitsPerDeciLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerDeciLiter = "[iU]/dL";

    /// <summary>
    /// Literal for code: InternationalUnitPerDeciliter
    /// </summary>
    public const string LiteralInternationalUnitPerDeciliter = "[IU]/dL";

    /// <summary>
    /// Literal for code: InternationalUnitsPerGram
    /// </summary>
    public const string LiteralInternationalUnitsPerGram = "[iU]/g";

    /// <summary>
    /// Literal for code: InternationalUnitPerGram
    /// </summary>
    public const string LiteralInternationalUnitPerGram = "[IU]/g";

    /// <summary>
    /// Literal for code: InternationalUnitPerGramOfHemoglobin
    /// </summary>
    public const string LiteralInternationalUnitPerGramOfHemoglobin = "[IU]/g{Hb}";

    /// <summary>
    /// Literal for code: InternationalUnitGramHgb
    /// </summary>
    public const string LiteralInternationalUnitGramHgb = "[iU]/g{Hgb}";

    /// <summary>
    /// Literal for code: InternationalUnitPerHour
    /// </summary>
    public const string LiteralInternationalUnitPerHour = "[IU]/h";

    /// <summary>
    /// Literal for code: InternationalUnitsPerKilogram
    /// </summary>
    public const string LiteralInternationalUnitsPerKilogram = "[iU]/kg";

    /// <summary>
    /// Literal for code: InternationalUnitPerKilogram
    /// </summary>
    public const string LiteralInternationalUnitPerKilogram = "[IU]/kg";

    /// <summary>
    /// Literal for code: InternationalUnitPerKilogramPerDay
    /// </summary>
    public const string LiteralInternationalUnitPerKilogramPerDay = "[IU]/kg/d";

    /// <summary>
    /// Literal for code: InternationalUnitsPerLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerLiter = "[iU]/L";

    /// <summary>
    /// Literal for code: InternationalUnitPerLiter
    /// </summary>
    public const string LiteralInternationalUnitPerLiter = "[IU]/L";

    /// <summary>
    /// Literal for code: InternationalUnitPerLiterAt37DegreesCelsius
    /// </summary>
    public const string LiteralInternationalUnitPerLiterAt37DegreesCelsius = "[IU]/L{37Cel}";

    /// <summary>
    /// Literal for code: InternationalUnitPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralInternationalUnitPerMilligramOfCreatinine = "[IU]/mg{creat}";

    /// <summary>
    /// Literal for code: InternationalUnitPerMinute
    /// </summary>
    public const string LiteralInternationalUnitPerMinute = "[IU]/min";

    /// <summary>
    /// Literal for code: InternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerMilliLiter = "[iU]/mL";

    /// <summary>
    /// Literal for code: InternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralInternationalUnitPerMilliliter = "[IU]/mL";

    /// <summary>
    /// Literal for code: BoltzmannConstant
    /// </summary>
    public const string LiteralBoltzmannConstant = "[k]";

    /// <summary>
    /// Literal for code: KingArmstrongUnit
    /// </summary>
    public const string LiteralKingArmstrongUnit = "[ka'U]";

    /// <summary>
    /// Literal for code: Knot
    /// </summary>
    public const string LiteralKnot = "[kn_br]";

    /// <summary>
    /// Literal for code: Knot_2
    /// </summary>
    public const string LiteralKnot_2 = "[kn_i]";

    /// <summary>
    /// Literal for code: KunkelUnit
    /// </summary>
    public const string LiteralKunkelUnit = "[knk'U]";

    /// <summary>
    /// Literal for code: Pound
    /// </summary>
    public const string LiteralPound = "[lb_ap]";

    /// <summary>
    /// Literal for code: PoundUSAndBritish
    /// </summary>
    public const string LiteralPoundUSAndBritish = "[lb_av]";

    /// <summary>
    /// Literal for code: Pound_2
    /// </summary>
    public const string LiteralPound_2 = "[lb_tr]";

    /// <summary>
    /// Literal for code: PoundForce
    /// </summary>
    public const string LiteralPoundForce = "[lbf_av]";

    /// <summary>
    /// Literal for code: LongHunderdweightBritishHundredweight
    /// </summary>
    public const string LiteralLongHunderdweightBritishHundredweight = "[lcwt_av]";

    /// <summary>
    /// Literal for code: LIMITOFFLOCCULATION
    /// </summary>
    public const string LiteralLIMITOFFLOCCULATION = "[Lf]";

    /// <summary>
    /// Literal for code: LigneFrenchLine
    /// </summary>
    public const string LiteralLigneFrenchLine = "[ligne]";

    /// <summary>
    /// Literal for code: LinkForGunterQuoteSChain
    /// </summary>
    public const string LiteralLinkForGunterQuoteSChain = "[lk_br]";

    /// <summary>
    /// Literal for code: LinkForGunterQuoteSChain_2
    /// </summary>
    public const string LiteralLinkForGunterQuoteSChain_2 = "[lk_us]";

    /// <summary>
    /// Literal for code: Line
    /// </summary>
    public const string LiteralLine = "[lne]";

    /// <summary>
    /// Literal for code: LowPowerField
    /// </summary>
    public const string LiteralLowPowerField = "[LPF]";

    /// <summary>
    /// Literal for code: LongTonBritishTon
    /// </summary>
    public const string LiteralLongTonBritishTon = "[lton_av]";

    /// <summary>
    /// Literal for code: LightYear
    /// </summary>
    public const string LiteralLightYear = "[ly]";

    /// <summary>
    /// Literal for code: ElectronMass
    /// </summary>
    public const string LiteralElectronMass = "[m_e]";

    /// <summary>
    /// Literal for code: ProtonMass
    /// </summary>
    public const string LiteralProtonMass = "[m_p]";

    /// <summary>
    /// Literal for code: MacLaganUnit
    /// </summary>
    public const string LiteralMacLaganUnit = "[mclg'U]";

    /// <summary>
    /// Literal for code: Mesh
    /// </summary>
    public const string LiteralMesh = "[mesh_i]";

    /// <summary>
    /// Literal for code: MetabolicEquivalent
    /// </summary>
    public const string LiteralMetabolicEquivalent = "[MET]";

    /// <summary>
    /// Literal for code: Mile
    /// </summary>
    public const string LiteralMile = "[mi_br]";

    /// <summary>
    /// Literal for code: StatuteMile
    /// </summary>
    public const string LiteralStatuteMile = "[mi_i]";

    /// <summary>
    /// Literal for code: Mile_2
    /// </summary>
    public const string LiteralMile_2 = "[mi_us]";

    /// <summary>
    /// Literal for code: Mil
    /// </summary>
    public const string LiteralMil = "[mil_i]";

    /// <summary>
    /// Literal for code: Mil_2
    /// </summary>
    public const string LiteralMil_2 = "[mil_us]";

    /// <summary>
    /// Literal for code: Minim
    /// </summary>
    public const string LiteralMinim = "[min_br]";

    /// <summary>
    /// Literal for code: Minim_2
    /// </summary>
    public const string LiteralMinim_2 = "[min_us]";

    /// <summary>
    /// Literal for code: IgMAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgMAnticardiolipinUnit = "[MPL'U]";

    /// <summary>
    /// Literal for code: IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralIgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[MPL'U]/mL";

    /// <summary>
    /// Literal for code: PermeabilityOfVacuum
    /// </summary>
    public const string LiteralPermeabilityOfVacuum = "[mu_0]";

    /// <summary>
    /// Literal for code: NauticalMile
    /// </summary>
    public const string LiteralNauticalMile = "[nmi_br]";

    /// <summary>
    /// Literal for code: NauticalMile_2
    /// </summary>
    public const string LiteralNauticalMile_2 = "[nmi_i]";

    /// <summary>
    /// Literal for code: OunceUSAndBritish
    /// </summary>
    public const string LiteralOunceUSAndBritish = "[oz_ap]";

    /// <summary>
    /// Literal for code: OunceUSAndBritish_2
    /// </summary>
    public const string LiteralOunceUSAndBritish_2 = "[oz_av]";

    /// <summary>
    /// Literal for code: Ounce
    /// </summary>
    public const string LiteralOunce = "[oz_tr]";

    /// <summary>
    /// Literal for code: Pace
    /// </summary>
    public const string LiteralPace = "[pc_br]";

    /// <summary>
    /// Literal for code: Pica
    /// </summary>
    public const string LiteralPica = "[pca]";

    /// <summary>
    /// Literal for code: PrinterQuoteSPica
    /// </summary>
    public const string LiteralPrinterQuoteSPica = "[pca_pr]";

    /// <summary>
    /// Literal for code: PrismDiopter
    /// </summary>
    public const string LiteralPrismDiopter = "[p'diop]";

    /// <summary>
    /// Literal for code: PLAQUEFORMINGUNITS
    /// </summary>
    public const string LiteralPLAQUEFORMINGUNITS = "[PFU]";

    /// <summary>
    /// Literal for code: PH
    /// </summary>
    public const string LiteralPH = "[pH]";

    /// <summary>
    /// Literal for code: TheNumberPi
    /// </summary>
    public const string LiteralTheNumberPi = "[pi]";

    /// <summary>
    /// Literal for code: TheNumberPiAsteriskRadianMinute
    /// </summary>
    public const string LiteralTheNumberPiAsteriskRadianMinute = "[pi].rad/min";

    /// <summary>
    /// Literal for code: PiedFrenchFoot
    /// </summary>
    public const string LiteralPiedFrenchFoot = "[pied]";

    /// <summary>
    /// Literal for code: Peck
    /// </summary>
    public const string LiteralPeck = "[pk_br]";

    /// <summary>
    /// Literal for code: Peck_2
    /// </summary>
    public const string LiteralPeck_2 = "[pk_us]";

    /// <summary>
    /// Literal for code: Point
    /// </summary>
    public const string LiteralPoint = "[pnt]";

    /// <summary>
    /// Literal for code: PrinterQuoteSPoint
    /// </summary>
    public const string LiteralPrinterQuoteSPoint = "[pnt_pr]";

    /// <summary>
    /// Literal for code: PROTEINNITROGENUNITS
    /// </summary>
    public const string LiteralPROTEINNITROGENUNITS = "[PNU]";

    /// <summary>
    /// Literal for code: PouceFrenchInch
    /// </summary>
    public const string LiteralPouceFrenchInch = "[pouce]";

    /// <summary>
    /// Literal for code: PartPerBillion
    /// </summary>
    public const string LiteralPartPerBillion = "[ppb]";

    /// <summary>
    /// Literal for code: PartPerMillion
    /// </summary>
    public const string LiteralPartPerMillion = "[ppm]";

    /// <summary>
    /// Literal for code: PartPerMillionInVolumePerVolume
    /// </summary>
    public const string LiteralPartPerMillionInVolumePerVolume = "[ppm]{v/v}";

    /// <summary>
    /// Literal for code: PartsPerThousand
    /// </summary>
    public const string LiteralPartsPerThousand = "[ppth]";

    /// <summary>
    /// Literal for code: PartPerTrillion
    /// </summary>
    public const string LiteralPartPerTrillion = "[pptr]";

    /// <summary>
    /// Literal for code: PeripheralVascularResistanceUnit
    /// </summary>
    public const string LiteralPeripheralVascularResistanceUnit = "[PRU]";

    /// <summary>
    /// Literal for code: PoundPerSquareInch
    /// </summary>
    public const string LiteralPoundPerSquareInch = "[psi]";

    /// <summary>
    /// Literal for code: Pint
    /// </summary>
    public const string LiteralPint = "[pt_br]";

    /// <summary>
    /// Literal for code: Pint_2
    /// </summary>
    public const string LiteralPint_2 = "[pt_us]";

    /// <summary>
    /// Literal for code: Pennyweight
    /// </summary>
    public const string LiteralPennyweight = "[pwt_tr]";

    /// <summary>
    /// Literal for code: Quart
    /// </summary>
    public const string LiteralQuart = "[qt_br]";

    /// <summary>
    /// Literal for code: Quart_2
    /// </summary>
    public const string LiteralQuart_2 = "[qt_us]";

    /// <summary>
    /// Literal for code: RamdenQuoteSChainEngineerQuoteSChain
    /// </summary>
    public const string LiteralRamdenQuoteSChainEngineerQuoteSChain = "[rch_us]";

    /// <summary>
    /// Literal for code: Rod
    /// </summary>
    public const string LiteralRod = "[rd_br]";

    /// <summary>
    /// Literal for code: Rod_2
    /// </summary>
    public const string LiteralRod_2 = "[rd_us]";

    /// <summary>
    /// Literal for code: LinkForRamdenQuoteSChain
    /// </summary>
    public const string LiteralLinkForRamdenQuoteSChain = "[rlk_us]";

    /// <summary>
    /// Literal for code: SvedbergUnit
    /// </summary>
    public const string LiteralSvedbergUnit = "[S]";

    /// <summary>
    /// Literal for code: Scruple
    /// </summary>
    public const string LiteralScruple = "[sc_ap]";

    /// <summary>
    /// Literal for code: Section
    /// </summary>
    public const string LiteralSection = "[sct]";

    /// <summary>
    /// Literal for code: ShortHundredweightUSHundredweight
    /// </summary>
    public const string LiteralShortHundredweightUSHundredweight = "[scwt_av]";

    /// <summary>
    /// Literal for code: SquareFootInternational
    /// </summary>
    public const string LiteralSquareFootInternational = "[sft_i]";

    /// <summary>
    /// Literal for code: SquareInchInternational
    /// </summary>
    public const string LiteralSquareInchInternational = "[sin_i]";

    /// <summary>
    /// Literal for code: SomogyiUnit
    /// </summary>
    public const string LiteralSomogyiUnit = "[smgy'U]";

    /// <summary>
    /// Literal for code: SquareMile
    /// </summary>
    public const string LiteralSquareMile = "[smi_us]";

    /// <summary>
    /// Literal for code: Smoot
    /// </summary>
    public const string LiteralSmoot = "[smoot]";

    /// <summary>
    /// Literal for code: SquareRod
    /// </summary>
    public const string LiteralSquareRod = "[srd_us]";

    /// <summary>
    /// Literal for code: ShortTonUSTon
    /// </summary>
    public const string LiteralShortTonUSTon = "[ston_av]";

    /// <summary>
    /// Literal for code: StoneBritishStone
    /// </summary>
    public const string LiteralStoneBritishStone = "[stone_av]";

    /// <summary>
    /// Literal for code: SquareYard
    /// </summary>
    public const string LiteralSquareYard = "[syd_i]";

    /// <summary>
    /// Literal for code: TablespoonUS
    /// </summary>
    public const string LiteralTablespoonUS = "[tbs_us]";

    /// <summary>
    /// Literal for code: TuberculinUnit
    /// </summary>
    public const string LiteralTuberculinUnit = "[tb'U]";

    /// <summary>
    /// Literal for code: TISSUECULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralTISSUECULTUREINFECTIOUSDOSE50Percent = "[TCID_50]";

    /// <summary>
    /// Literal for code: ToddUnit
    /// </summary>
    public const string LiteralToddUnit = "[todd'U]";

    /// <summary>
    /// Literal for code: Teaspoon
    /// </summary>
    public const string LiteralTeaspoon = "[tsp_us]";

    /// <summary>
    /// Literal for code: Township
    /// </summary>
    public const string LiteralTownship = "[twp]";

    /// <summary>
    /// Literal for code: UNITEDSTATESPHARMACOPEIAUNIT
    /// </summary>
    public const string LiteralUNITEDSTATESPHARMACOPEIAUNIT = "[USP'U]";

    /// <summary>
    /// Literal for code: Yard
    /// </summary>
    public const string LiteralYard = "[yd_br]";

    /// <summary>
    /// Literal for code: Yard_2
    /// </summary>
    public const string LiteralYard_2 = "[yd_i]";

    /// <summary>
    /// Literal for code: Yard_3
    /// </summary>
    public const string LiteralYard_3 = "[yd_us]";

    /// <summary>
    /// Literal for code: NumberOfCalculi
    /// </summary>
    public const string LiteralNumberOfCalculi = "{# of calculi}";

    /// <summary>
    /// Literal for code: NumberOfDonorInformativeMarkers
    /// </summary>
    public const string LiteralNumberOfDonorInformativeMarkers = "{# of donor informative markers}";

    /// <summary>
    /// Literal for code: NumberOfFetuses
    /// </summary>
    public const string LiteralNumberOfFetuses = "{# of fetuses}";

    /// <summary>
    /// Literal for code: NumberOfInformativeMarkers
    /// </summary>
    public const string LiteralNumberOfInformativeMarkers = "{# of informative markers}";

    /// <summary>
    /// Literal for code: Number
    /// </summary>
    public const string LiteralNumber = "{#}";

    /// <summary>
    /// Literal for code: NumberPerHighPowerField
    /// </summary>
    public const string LiteralNumberPerHighPowerField = "{#}/[HPF]";

    /// <summary>
    /// Literal for code: NumberPerLowPowerField
    /// </summary>
    public const string LiteralNumberPerLowPowerField = "{#}/[LPF]";

    /// <summary>
    /// Literal for code: NumberPerLiter
    /// </summary>
    public const string LiteralNumberPerLiter = "{#}/L";

    /// <summary>
    /// Literal for code: NumberPerMinute
    /// </summary>
    public const string LiteralNumberPerMinute = "{#}/min";

    /// <summary>
    /// Literal for code: NumberPerMilliliter
    /// </summary>
    public const string LiteralNumberPerMilliliter = "{#}/mL";

    /// <summary>
    /// Literal for code: NumberPerMicroliter
    /// </summary>
    public const string LiteralNumberPerMicroliter = "{#}/uL";

    /// <summary>
    /// Literal for code: VAL2Or3TimesDay
    /// </summary>
    public const string LiteralVAL2Or3TimesDay = "{2 or 3 times}/d";

    /// <summary>
    /// Literal for code: VAL3TimesDay
    /// </summary>
    public const string LiteralVAL3TimesDay = "{3 times}/d";

    /// <summary>
    /// Literal for code: VAL4TimesDay
    /// </summary>
    public const string LiteralVAL4TimesDay = "{4 times}/d";

    /// <summary>
    /// Literal for code: VAL5TimesDay
    /// </summary>
    public const string LiteralVAL5TimesDay = "{5 times}/d";

    /// <summary>
    /// Literal for code: Absorbance
    /// </summary>
    public const string LiteralAbsorbance = "{absorbance}";

    /// <summary>
    /// Literal for code: AbsorbanceQuoteU
    /// </summary>
    public const string LiteralAbsorbanceQuoteU = "{Absorbance'U}";

    /// <summary>
    /// Literal for code: AbsorbanceQuoteUMilliliter
    /// </summary>
    public const string LiteralAbsorbanceQuoteUMilliliter = "{Absorbance'U}/mL";

    /// <summary>
    /// Literal for code: Activity
    /// </summary>
    public const string LiteralActivity = "{activity}";

    /// <summary>
    /// Literal for code: ActivityCoefficient
    /// </summary>
    public const string LiteralActivityCoefficient = "{ActivityCoefficient}";

    /// <summary>
    /// Literal for code: AHFQuoteU
    /// </summary>
    public const string LiteralAHFQuoteU = "{AHF'U}";

    /// <summary>
    /// Literal for code: AntibodyResponseQuoteU
    /// </summary>
    public const string LiteralAntibodyResponseQuoteU = "{AntibodyResponse'U}";

    /// <summary>
    /// Literal for code: Applicator
    /// </summary>
    public const string LiteralApplicator = "{Applicator}";

    /// <summary>
    /// Literal for code: IgAAntiphosphatidylserineUnit
    /// </summary>
    public const string LiteralIgAAntiphosphatidylserineUnit = "{APS'U}";

    /// <summary>
    /// Literal for code: AspirinResponseUnit
    /// </summary>
    public const string LiteralAspirinResponseUnit = "{ARU}";

    /// <summary>
    /// Literal for code: AspirinReactionQuoteU
    /// </summary>
    public const string LiteralAspirinReactionQuoteU = "{AspirinReaction'U}";

    /// <summary>
    /// Literal for code: Bead
    /// </summary>
    public const string LiteralBead = "{Bead}";

    /// <summary>
    /// Literal for code: HeartBeatsPerMinute
    /// </summary>
    public const string LiteralHeartBeatsPerMinute = "{beats}/min";

    /// <summary>
    /// Literal for code: BeatsMinute
    /// </summary>
    public const string LiteralBeatsMinute = "{Beats}/min";

    /// <summary>
    /// Literal for code: BindingIndex
    /// </summary>
    public const string LiteralBindingIndex = "{binding_index}";

    /// <summary>
    /// Literal for code: Bottle
    /// </summary>
    public const string LiteralBottle = "{Bottle}";

    /// <summary>
    /// Literal for code: BowlsDay
    /// </summary>
    public const string LiteralBowlsDay = "{Bowls}/d";

    /// <summary>
    /// Literal for code: BreathsMinute
    /// </summary>
    public const string LiteralBreathsMinute = "{Breaths}/min";

    /// <summary>
    /// Literal for code: ComplementActivityEnzymeUnit
    /// </summary>
    public const string LiteralComplementActivityEnzymeUnit = "{CAE'U}";

    /// <summary>
    /// Literal for code: CAGTrinucleotideRepeats
    /// </summary>
    public const string LiteralCAGTrinucleotideRepeats = "{CAG_repeats}";

    /// <summary>
    /// Literal for code: CagRepeat
    /// </summary>
    public const string LiteralCagRepeat = "{CagRepeat}";

    /// <summary>
    /// Literal for code: Can
    /// </summary>
    public const string LiteralCan = "{Can}";

    /// <summary>
    /// Literal for code: CansWeek
    /// </summary>
    public const string LiteralCansWeek = "{Cans}/wk";

    /// <summary>
    /// Literal for code: Capsule
    /// </summary>
    public const string LiteralCapsule = "{Capsule}";

    /// <summary>
    /// Literal for code: Cell
    /// </summary>
    public const string LiteralCell = "{Cell}";

    /// <summary>
    /// Literal for code: Cells
    /// </summary>
    public const string LiteralCells = "{cells}";

    /// <summary>
    /// Literal for code: CellsPerHighPowerField
    /// </summary>
    public const string LiteralCellsPerHighPowerField = "{cells}/[HPF]";

    /// <summary>
    /// Literal for code: CellsMilliliter
    /// </summary>
    public const string LiteralCellsMilliliter = "{Cells}/mL";

    /// <summary>
    /// Literal for code: CellsPerMicroliter
    /// </summary>
    public const string LiteralCellsPerMicroliter = "{cells}/uL";

    /// <summary>
    /// Literal for code: CellsPerMicroLiter
    /// </summary>
    public const string LiteralCellsPerMicroLiter = "{Cells}/uL";

    /// <summary>
    /// Literal for code: CfTiter
    /// </summary>
    public const string LiteralCfTiter = "{CfTiter}";

    /// <summary>
    /// Literal for code: Cfu
    /// </summary>
    public const string LiteralCfu = "{cfu}";

    /// <summary>
    /// Literal for code: CfuMilliliter
    /// </summary>
    public const string LiteralCfuMilliliter = "{cfu}/mL";

    /// <summary>
    /// Literal for code: CGGRepeats
    /// </summary>
    public const string LiteralCGGRepeats = "{CGG_repeats}";

    /// <summary>
    /// Literal for code: CGG
    /// </summary>
    public const string LiteralCGG = "{CGG}";

    /// <summary>
    /// Literal for code: ComplementCH100Unit
    /// </summary>
    public const string LiteralComplementCH100Unit = "{CH100'U}";

    /// <summary>
    /// Literal for code: ClockTime
    /// </summary>
    public const string LiteralClockTime = "{clock time}";

    /// <summary>
    /// Literal for code: ClockTime_2
    /// </summary>
    public const string LiteralClockTime_2 = "{clock_time}";

    /// <summary>
    /// Literal for code: ComplementActivityEnzymeQuoteU
    /// </summary>
    public const string LiteralComplementActivityEnzymeQuoteU = "{ComplementActivityEnzyme'U}";

    /// <summary>
    /// Literal for code: ComplementCH100QuoteU
    /// </summary>
    public const string LiteralComplementCH100QuoteU = "{ComplementCH100'U}";

    /// <summary>
    /// Literal for code: ComplementCH50QuoteU
    /// </summary>
    public const string LiteralComplementCH50QuoteU = "{ComplementCH50'U}";

    /// <summary>
    /// Literal for code: Copies
    /// </summary>
    public const string LiteralCopies = "{copies}";

    /// <summary>
    /// Literal for code: CopiesPerMilliliter
    /// </summary>
    public const string LiteralCopiesPerMilliliter = "{copies}/mL";

    /// <summary>
    /// Literal for code: CopiesPerMilliLiter
    /// </summary>
    public const string LiteralCopiesPerMilliLiter = "{Copies}/mL";

    /// <summary>
    /// Literal for code: CopiesPerMicrogram
    /// </summary>
    public const string LiteralCopiesPerMicrogram = "{copies}/ug";

    /// <summary>
    /// Literal for code: CopiesMicroliter
    /// </summary>
    public const string LiteralCopiesMicroliter = "{Copies}/uL";

    /// <summary>
    /// Literal for code: Count
    /// </summary>
    public const string LiteralCount = "{count}";

    /// <summary>
    /// Literal for code: Count_2
    /// </summary>
    public const string LiteralCount_2 = "{Count}";

    /// <summary>
    /// Literal for code: CountsMinute
    /// </summary>
    public const string LiteralCountsMinute = "{Counts}/min";

    /// <summary>
    /// Literal for code: CountsPerMinute
    /// </summary>
    public const string LiteralCountsPerMinute = "{CPM}";

    /// <summary>
    /// Literal for code: CountsPerMinutePerThousandCells
    /// </summary>
    public const string LiteralCountsPerMinutePerThousandCells = "{CPM}/10*3{cell}";

    /// <summary>
    /// Literal for code: CrossingThreshold
    /// </summary>
    public const string LiteralCrossingThreshold = "{Ct}";

    /// <summary>
    /// Literal for code: Dalton
    /// </summary>
    public const string LiteralDalton = "{Dalton}";

    /// <summary>
    /// Literal for code: DdTiter
    /// </summary>
    public const string LiteralDdTiter = "{DdTiter}";

    /// <summary>
    /// Literal for code: ChangeInDeltaOpticalDensity
    /// </summary>
    public const string LiteralChangeInDeltaOpticalDensity = "{delta_OD}";

    /// <summary>
    /// Literal for code: DeltaOpticalDensity
    /// </summary>
    public const string LiteralDeltaOpticalDensity = "{DeltaOpticalDensity}";

    /// <summary>
    /// Literal for code: Dilution
    /// </summary>
    public const string LiteralDilution = "{dilution}";

    /// <summary>
    /// Literal for code: Dilution_2
    /// </summary>
    public const string LiteralDilution_2 = "{Dilution}";

    /// <summary>
    /// Literal for code: DisintegrationsMinute
    /// </summary>
    public const string LiteralDisintegrationsMinute = "{Disintegrations}/min";

    /// <summary>
    /// Literal for code: Dose
    /// </summary>
    public const string LiteralDose = "{Dose}";

    /// <summary>
    /// Literal for code: DrinksDay
    /// </summary>
    public const string LiteralDrinksDay = "{Drinks}/d";

    /// <summary>
    /// Literal for code: Each
    /// </summary>
    public const string LiteralEach = "{Each}";

    /// <summary>
    /// Literal for code: EhrlichUnitsPerDeciLiter
    /// </summary>
    public const string LiteralEhrlichUnitsPerDeciLiter = "{Ehrlich_U}/dL";

    /// <summary>
    /// Literal for code: EhrlichUnit
    /// </summary>
    public const string LiteralEhrlichUnit = "{Ehrlich'U}";

    /// <summary>
    /// Literal for code: EhrlichUnitPer2Hour
    /// </summary>
    public const string LiteralEhrlichUnitPer2Hour = "{Ehrlich'U}/(2.h)";

    /// <summary>
    /// Literal for code: EhrlichUnitPer100Gram
    /// </summary>
    public const string LiteralEhrlichUnitPer100Gram = "{Ehrlich'U}/100.g";

    /// <summary>
    /// Literal for code: EhrlichUnitPerDay
    /// </summary>
    public const string LiteralEhrlichUnitPerDay = "{Ehrlich'U}/d";

    /// <summary>
    /// Literal for code: EhrlichUnitsPerDeciLiterArbitraryConcentrationUnits
    /// </summary>
    public const string LiteralEhrlichUnitsPerDeciLiterArbitraryConcentrationUnits = "{EhrlichU}/dL";

    /// <summary>
    /// Literal for code: EhrilichUnitPerDeciliter
    /// </summary>
    public const string LiteralEhrilichUnitPerDeciliter = "{Ehrlich'U}/dL";

    /// <summary>
    /// Literal for code: EhrlichQuoteUMilliliter
    /// </summary>
    public const string LiteralEhrlichQuoteUMilliliter = "{Ehrlich'U}/mL";

    /// <summary>
    /// Literal for code: EIAIndex
    /// </summary>
    public const string LiteralEIAIndex = "{EIA_index}";

    /// <summary>
    /// Literal for code: EIATiter
    /// </summary>
    public const string LiteralEIATiter = "{EIA_titer}";

    /// <summary>
    /// Literal for code: EIAIndex_2
    /// </summary>
    public const string LiteralEIAIndex_2 = "{EIAIndex}";

    /// <summary>
    /// Literal for code: EIATiter_2
    /// </summary>
    public const string LiteralEIATiter_2 = "{EIATiter}";

    /// <summary>
    /// Literal for code: EIAUnit
    /// </summary>
    public const string LiteralEIAUnit = "{EIA'U}";

    /// <summary>
    /// Literal for code: EIAUnitPerEnzymeUnit
    /// </summary>
    public const string LiteralEIAUnitPerEnzymeUnit = "{EIA'U}/U";

    /// <summary>
    /// Literal for code: ElisaUnitsPerMilliLiter
    /// </summary>
    public const string LiteralElisaUnitsPerMilliLiter = "{Elisa_U}/mL";

    /// <summary>
    /// Literal for code: ElisaIndex
    /// </summary>
    public const string LiteralElisaIndex = "{ElisaIndex}";

    /// <summary>
    /// Literal for code: ELISAUnit
    /// </summary>
    public const string LiteralELISAUnit = "{ELISA'U}";

    /// <summary>
    /// Literal for code: ElisaUnitsPerMilliLiterArbitraryConcentrationUnits
    /// </summary>
    public const string LiteralElisaUnitsPerMilliLiterArbitraryConcentrationUnits = "{ElisaU}/mL";

    /// <summary>
    /// Literal for code: ElisaQuoteUMilliliter
    /// </summary>
    public const string LiteralElisaQuoteUMilliliter = "{Elisa'U}/mL";

    /// <summary>
    /// Literal for code: ElisaValue
    /// </summary>
    public const string LiteralElisaValue = "{ElisaValue}";

    /// <summary>
    /// Literal for code: ErythrocytePerMicroliter
    /// </summary>
    public const string LiteralErythrocytePerMicroliter = "{ERY}/uL";

    /// <summary>
    /// Literal for code: EIAValue
    /// </summary>
    public const string LiteralEIAValue = "{EV}";

    /// <summary>
    /// Literal for code: Events
    /// </summary>
    public const string LiteralEvents = "{Events}";

    /// <summary>
    /// Literal for code: FluorescentIntensityUnit
    /// </summary>
    public const string LiteralFluorescentIntensityUnit = "{FIU}";

    /// <summary>
    /// Literal for code: FluorescenceIntensityQuoteU
    /// </summary>
    public const string LiteralFluorescenceIntensityQuoteU = "{FluorescenceIntensity'U}";

    /// <summary>
    /// Literal for code: Fraction
    /// </summary>
    public const string LiteralFraction = "{fraction}";

    /// <summary>
    /// Literal for code: GAATrinucleotideRepeats
    /// </summary>
    public const string LiteralGAATrinucleotideRepeats = "{GAA_repeats}";

    /// <summary>
    /// Literal for code: GenomesPerMilliliter
    /// </summary>
    public const string LiteralGenomesPerMilliliter = "{genomes}/mL";

    /// <summary>
    /// Literal for code: GliadinIndexValue
    /// </summary>
    public const string LiteralGliadinIndexValue = "{GliadinIndexValue}";

    /// <summary>
    /// Literal for code: GlobulesDropsPerHighPowerField
    /// </summary>
    public const string LiteralGlobulesDropsPerHighPowerField = "{Globules}/[HPF]";

    /// <summary>
    /// Literal for code: GPortionPhospholipids
    /// </summary>
    public const string LiteralGPortionPhospholipids = "{G-PortionPhospholipids}";

    /// <summary>
    /// Literal for code: IgGAntiphosphatidylserineUnit
    /// </summary>
    public const string LiteralIgGAntiphosphatidylserineUnit = "{GPS'U}";

    /// <summary>
    /// Literal for code: InfluenzaHemagglutinationTiter
    /// </summary>
    public const string LiteralInfluenzaHemagglutinationTiter = "{HA_titer}";

    /// <summary>
    /// Literal for code: HaTiter
    /// </summary>
    public const string LiteralHaTiter = "{HaTiter}";

    /// <summary>
    /// Literal for code: ImmunofluorescenceAssayIndex
    /// </summary>
    public const string LiteralImmunofluorescenceAssayIndex = "{IFA_index}";

    /// <summary>
    /// Literal for code: ImmunofluorescenceAssayTiter
    /// </summary>
    public const string LiteralImmunofluorescenceAssayTiter = "{IFA_titer}";

    /// <summary>
    /// Literal for code: IfaIndex
    /// </summary>
    public const string LiteralIfaIndex = "{IfaIndex}";

    /// <summary>
    /// Literal for code: IfaTiter
    /// </summary>
    public const string LiteralIfaTiter = "{IfaTiter}";

    /// <summary>
    /// Literal for code: IgAAntiphosphatidyleserineQuoteU
    /// </summary>
    public const string LiteralIgAAntiphosphatidyleserineQuoteU = "{IgAAntiphosphatidyleserine'U}";

    /// <summary>
    /// Literal for code: IgAPhospholipidQuoteU
    /// </summary>
    public const string LiteralIgAPhospholipidQuoteU = "{IgAPhospholipid'U}";

    /// <summary>
    /// Literal for code: IgGAntiphosphatidyleserineQuoteU
    /// </summary>
    public const string LiteralIgGAntiphosphatidyleserineQuoteU = "{IgGAntiphosphatidyleserine'U}";

    /// <summary>
    /// Literal for code: IgGIndex
    /// </summary>
    public const string LiteralIgGIndex = "{IgGIndex}";

    /// <summary>
    /// Literal for code: IgMAntiphosphatidyleserineQuoteU
    /// </summary>
    public const string LiteralIgMAntiphosphatidyleserineQuoteU = "{IgMAntiphosphatidyleserine'U}";

    /// <summary>
    /// Literal for code: IgMIndex
    /// </summary>
    public const string LiteralIgMIndex = "{IgMIndex}";

    /// <summary>
    /// Literal for code: ImmuneComplexUnit
    /// </summary>
    public const string LiteralImmuneComplexUnit = "{ImmuneComplex'U}";

    /// <summary>
    /// Literal for code: ImmuneStatusRatio
    /// </summary>
    public const string LiteralImmuneStatusRatio = "{ImmuneStatusRatio}";

    /// <summary>
    /// Literal for code: Immunity
    /// </summary>
    public const string LiteralImmunity = "{Immunity}";

    /// <summary>
    /// Literal for code: IndexValue
    /// </summary>
    public const string LiteralIndexValue = "{index_val}";

    /// <summary>
    /// Literal for code: IndexVal
    /// </summary>
    public const string LiteralIndexVal = "{Index_val}";

    /// <summary>
    /// Literal for code: Index
    /// </summary>
    public const string LiteralIndex = "{index}";

    /// <summary>
    /// Literal for code: IndexValue_2
    /// </summary>
    public const string LiteralIndexValue_2 = "{IndexValue}";

    /// <summary>
    /// Literal for code: InhaledTobaccoUseAmountYears
    /// </summary>
    public const string LiteralInhaledTobaccoUseAmountYears = "{InhaledTobaccoUseAmountYears}";

    /// <summary>
    /// Literal for code: InhaledTobaccoUsePacksDay
    /// </summary>
    public const string LiteralInhaledTobaccoUsePacksDay = "{InhaledTobaccoUsePacks}/d";

    /// <summary>
    /// Literal for code: InternationalNormalizedRatio
    /// </summary>
    public const string LiteralInternationalNormalizedRatio = "{INR}";

    /// <summary>
    /// Literal for code: INRQuoteUnit
    /// </summary>
    public const string LiteralINRQuoteUnit = "{INR'unit}";

    /// <summary>
    /// Literal for code: ImmuneStatusRatio_2
    /// </summary>
    public const string LiteralImmuneStatusRatio_2 = "{ISR}";

    /// <summary>
    /// Literal for code: JuvenileDiabetesFoundationUnit
    /// </summary>
    public const string LiteralJuvenileDiabetesFoundationUnit = "{JDF'U}";

    /// <summary>
    /// Literal for code: JuvenileDiabetesFoundationUnitPerLiter
    /// </summary>
    public const string LiteralJuvenileDiabetesFoundationUnitPerLiter = "{JDF'U}/L";

    /// <summary>
    /// Literal for code: JuvenileDiabetesFoundQuoteU
    /// </summary>
    public const string LiteralJuvenileDiabetesFoundQuoteU = "{JuvenileDiabetesFound'U}";

    /// <summary>
    /// Literal for code: KaolinClottingTime
    /// </summary>
    public const string LiteralKaolinClottingTime = "{KCT'U}";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES = "{kp_C}";

    /// <summary>
    /// Literal for code: KronusUnitPerLiter
    /// </summary>
    public const string LiteralKronusUnitPerLiter = "{KRONU'U}/L";

    /// <summary>
    /// Literal for code: KronusUnitPerMilliliter
    /// </summary>
    public const string LiteralKronusUnitPerMilliliter = "{KRONU'U}/mL";

    /// <summary>
    /// Literal for code: LgCopiesMilliliter
    /// </summary>
    public const string LiteralLgCopiesMilliliter = "{lgCopies}/ml";

    /// <summary>
    /// Literal for code: LogBase10CopiesPerMilliliter
    /// </summary>
    public const string LiteralLogBase10CopiesPerMilliliter = "{log_copies}/mL";

    /// <summary>
    /// Literal for code: LogBase10CopiesPerMilliliter_2
    /// </summary>
    public const string LiteralLogBase10CopiesPerMilliliter_2 = "{Log_copies}/mL";

    /// <summary>
    /// Literal for code: LogBase10InternationalUnit
    /// </summary>
    public const string LiteralLogBase10InternationalUnit = "{Log_IU}";

    /// <summary>
    /// Literal for code: LogBase10InternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralLogBase10InternationalUnitPerMilliliter = "{log_IU}/mL";

    /// <summary>
    /// Literal for code: LogBase10InternationalUnitPerMilliliter_2
    /// </summary>
    public const string LiteralLogBase10InternationalUnitPerMilliliter_2 = "{Log_IU}/mL";

    /// <summary>
    /// Literal for code: LogBase10
    /// </summary>
    public const string LiteralLogBase10 = "{Log}";

    /// <summary>
    /// Literal for code: LymeIndexValue
    /// </summary>
    public const string LiteralLymeIndexValue = "{Lyme_index_value}";

    /// <summary>
    /// Literal for code: LymeIndexValue_2
    /// </summary>
    public const string LiteralLymeIndexValue_2 = "{LymeIndexValue}";

    /// <summary>
    /// Literal for code: MOM
    /// </summary>
    public const string LiteralMOM = "{M.o.M.}";

    /// <summary>
    /// Literal for code: MultipleOfTheMedian
    /// </summary>
    public const string LiteralMultipleOfTheMedian = "{M.o.M}";

    /// <summary>
    /// Literal for code: Markers
    /// </summary>
    public const string LiteralMarkers = "{Markers}";

    /// <summary>
    /// Literal for code: MinidropPerMinute
    /// </summary>
    public const string LiteralMinidropPerMinute = "{minidrop}/min";

    /// <summary>
    /// Literal for code: MinidropPerSecond
    /// </summary>
    public const string LiteralMinidropPerSecond = "{minidrop}/s";

    /// <summary>
    /// Literal for code: Minidrp
    /// </summary>
    public const string LiteralMinidrp = "{minidrp}";

    /// <summary>
    /// Literal for code: MonthDayYear
    /// </summary>
    public const string LiteralMonthDayYear = "{mm/dd/yyyy}";

    /// <summary>
    /// Literal for code: MoleculePerPlatelet
    /// </summary>
    public const string LiteralMoleculePerPlatelet = "{molecule}/{platelet}";

    /// <summary>
    /// Literal for code: MoleculePlatelet
    /// </summary>
    public const string LiteralMoleculePlatelet = "{Molecule}/{Platelet}";

    /// <summary>
    /// Literal for code: MPortionPhospholipids
    /// </summary>
    public const string LiteralMPortionPhospholipids = "{M-PortionPhospholipids}";

    /// <summary>
    /// Literal for code: IgMAntiphosphatidylserineUnit
    /// </summary>
    public const string LiteralIgMAntiphosphatidylserineUnit = "{MPS'U}";

    /// <summary>
    /// Literal for code: IgMAntiphosphatidylserineUnitPerMilliliter
    /// </summary>
    public const string LiteralIgMAntiphosphatidylserineUnitPerMilliliter = "{MPS'U}/mL";

    /// <summary>
    /// Literal for code: MultOfMean
    /// </summary>
    public const string LiteralMultOfMean = "{MultOfMean}";

    /// <summary>
    /// Literal for code: Mutation
    /// </summary>
    public const string LiteralMutation = "{mutation}";

    /// <summary>
    /// Literal for code: NonspecificOunce
    /// </summary>
    public const string LiteralNonspecificOunce = "{NonspecificOunce}";

    /// <summary>
    /// Literal for code: Number_2
    /// </summary>
    public const string LiteralNumber_2 = "{Number}";

    /// <summary>
    /// Literal for code: OpticalDensityUnit
    /// </summary>
    public const string LiteralOpticalDensityUnit = "{OD_unit}";

    /// <summary>
    /// Literal for code: OnceDay
    /// </summary>
    public const string LiteralOnceDay = "{Once}/d";

    /// <summary>
    /// Literal for code: OpticalDensity
    /// </summary>
    public const string LiteralOpticalDensity = "{OpticalDensity}";

    /// <summary>
    /// Literal for code: OpticalDensityIndex
    /// </summary>
    public const string LiteralOpticalDensityIndex = "{OpticalDensityIndex}";

    /// <summary>
    /// Literal for code: OpticalDensityRatio
    /// </summary>
    public const string LiteralOpticalDensityRatio = "{OpticalDensityRatio}";

    /// <summary>
    /// Literal for code: P2Y12ReactionUnits
    /// </summary>
    public const string LiteralP2Y12ReactionUnits = "{P2Y12 Reaction Units}";

    /// <summary>
    /// Literal for code: Package
    /// </summary>
    public const string LiteralPackage = "{Package}";

    /// <summary>
    /// Literal for code: PacksDay
    /// </summary>
    public const string LiteralPacksDay = "{Packs}/d";

    /// <summary>
    /// Literal for code: PackYears
    /// </summary>
    public const string LiteralPackYears = "{PackYears}";

    /// <summary>
    /// Literal for code: PanbioUnit
    /// </summary>
    public const string LiteralPanbioUnit = "{Pan_Bio'U}";

    /// <summary>
    /// Literal for code: Patch
    /// </summary>
    public const string LiteralPatch = "{Patch}";

    /// <summary>
    /// Literal for code: Percentile
    /// </summary>
    public const string LiteralPercentile = "{percentile}";

    /// <summary>
    /// Literal for code: Percentile_2
    /// </summary>
    public const string LiteralPercentile_2 = "{Percentile}";

    /// <summary>
    /// Literal for code: Phenotype
    /// </summary>
    public const string LiteralPhenotype = "{phenotype}";

    /// <summary>
    /// Literal for code: Pill
    /// </summary>
    public const string LiteralPill = "{Pill}";

    /// <summary>
    /// Literal for code: PouchesWeek
    /// </summary>
    public const string LiteralPouchesWeek = "{Pouches}/wk";

    /// <summary>
    /// Literal for code: RadioactiveT3UptakeRatio
    /// </summary>
    public const string LiteralRadioactiveT3UptakeRatio = "{RadioactiveT3UptakeRatio}";

    /// <summary>
    /// Literal for code: Ratio
    /// </summary>
    public const string LiteralRatio = "{ratio}";

    /// <summary>
    /// Literal for code: RedBloodCellCount
    /// </summary>
    public const string LiteralRedBloodCellCount = "{rbc}";

    /// <summary>
    /// Literal for code: RedBloodCellPerMicroliter
    /// </summary>
    public const string LiteralRedBloodCellPerMicroliter = "{RBC}/uL";

    /// <summary>
    /// Literal for code: RecTiter
    /// </summary>
    public const string LiteralRecTiter = "{RecTiter}";

    /// <summary>
    /// Literal for code: RelativeSaturation
    /// </summary>
    public const string LiteralRelativeSaturation = "{relative_saturation}";

    /// <summary>
    /// Literal for code: RelativeQuoteU
    /// </summary>
    public const string LiteralRelativeQuoteU = "{Relative'U}";

    /// <summary>
    /// Literal for code: RelativeViscosity
    /// </summary>
    public const string LiteralRelativeViscosity = "{RelativeViscosity}";

    /// <summary>
    /// Literal for code: RPIQuoteU
    /// </summary>
    public const string LiteralRPIQuoteU = "{RPI'U}";

    /// <summary>
    /// Literal for code: RubellaVirus
    /// </summary>
    public const string LiteralRubellaVirus = "{Rubella_virus}";

    /// <summary>
    /// Literal for code: RubellaVirus_2
    /// </summary>
    public const string LiteralRubellaVirus_2 = "{RubellaVirus}";

    /// <summary>
    /// Literal for code: SignalToCutoffRatio
    /// </summary>
    public const string LiteralSignalToCutoffRatio = "{s_co_ratio}";

    /// <summary>
    /// Literal for code: SatIndex
    /// </summary>
    public const string LiteralSatIndex = "{SatIndex}";

    /// <summary>
    /// Literal for code: Saturation
    /// </summary>
    public const string LiteralSaturation = "{saturation}";

    /// <summary>
    /// Literal for code: Scoop
    /// </summary>
    public const string LiteralScoop = "{Scoop}";

    /// <summary>
    /// Literal for code: ScoreOf
    /// </summary>
    public const string LiteralScoreOf = "{ScoreOf}";

    /// <summary>
    /// Literal for code: Shift
    /// </summary>
    public const string LiteralShift = "{shift}";

    /// <summary>
    /// Literal for code: SpermatozoaPerMilliliter
    /// </summary>
    public const string LiteralSpermatozoaPerMilliliter = "{spermatozoa}/mL";

    /// <summary>
    /// Literal for code: SpermatozoaPerMilliLiter
    /// </summary>
    public const string LiteralSpermatozoaPerMilliLiter = "{Spermatozoa}/mL";

    /// <summary>
    /// Literal for code: Spray
    /// </summary>
    public const string LiteralSpray = "{spray}";

    /// <summary>
    /// Literal for code: StandardDeviation
    /// </summary>
    public const string LiteralStandardDeviation = "{StandardDeviation}";

    /// <summary>
    /// Literal for code: StandardIgAQuoteU
    /// </summary>
    public const string LiteralStandardIgAQuoteU = "{StandardIgA'U}";

    /// <summary>
    /// Literal for code: StandardIgGQuoteU
    /// </summary>
    public const string LiteralStandardIgGQuoteU = "{StandardIgG'U}";

    /// <summary>
    /// Literal for code: StandardIgMQuoteU
    /// </summary>
    public const string LiteralStandardIgMQuoteU = "{StandardIgM'U}";

    /// <summary>
    /// Literal for code: StdDeviationQuoteU
    /// </summary>
    public const string LiteralStdDeviationQuoteU = "{StdDeviation'U}";

    /// <summary>
    /// Literal for code: StandardDeviation_2
    /// </summary>
    public const string LiteralStandardDeviation_2 = "{STDV}";

    /// <summary>
    /// Literal for code: StimulatingIndex
    /// </summary>
    public const string LiteralStimulatingIndex = "{StimulatingIndex}";

    /// <summary>
    /// Literal for code: StreptozymeQuoteU
    /// </summary>
    public const string LiteralStreptozymeQuoteU = "{Streptozyme'U}";

    /// <summary>
    /// Literal for code: Tablets
    /// </summary>
    public const string LiteralTablets = "{tbl}";

    /// <summary>
    /// Literal for code: ThyroxinUptakeQuoteU
    /// </summary>
    public const string LiteralThyroxinUptakeQuoteU = "{ThyroxinUptake'U}";

    /// <summary>
    /// Literal for code: TIBCQuoteU
    /// </summary>
    public const string LiteralTIBCQuoteU = "{TIBC'U}";

    /// <summary>
    /// Literal for code: TimesWeek
    /// </summary>
    public const string LiteralTimesWeek = "{Times}/wk";

    /// <summary>
    /// Literal for code: TineQuoteU
    /// </summary>
    public const string LiteralTineQuoteU = "{Tine'U}";

    /// <summary>
    /// Literal for code: Titer
    /// </summary>
    public const string LiteralTiter = "{titer}";

    /// <summary>
    /// Literal for code: ParticlesTotalCount
    /// </summary>
    public const string LiteralParticlesTotalCount = "{tot}";

    /// <summary>
    /// Literal for code: ToxoplasmaIndexValue
    /// </summary>
    public const string LiteralToxoplasmaIndexValue = "{ToxoplasmaIndexValue}";

    /// <summary>
    /// Literal for code: ThyroidStimulatingImmunoglobulinIndex
    /// </summary>
    public const string LiteralThyroidStimulatingImmunoglobulinIndex = "{TSI_index}";

    /// <summary>
    /// Literal for code: Vial
    /// </summary>
    public const string LiteralVial = "{Vial}";

    /// <summary>
    /// Literal for code: VolumeVvolume
    /// </summary>
    public const string LiteralVolumeVvolume = "{Volume}/{Vvolume}";

    /// <summary>
    /// Literal for code: WhiteBloodCells
    /// </summary>
    public const string LiteralWhiteBloodCells = "{WBCs}";

    /// <summary>
    /// Literal for code: WeeksDays
    /// </summary>
    public const string LiteralWeeksDays = "{WeeksDays}";

    /// <summary>
    /// Literal for code: WhiteBloodCell
    /// </summary>
    public const string LiteralWhiteBloodCell = "{WhiteBloodCell}";

    /// <summary>
    /// Literal for code: VAL1Asterisk
    /// </summary>
    public const string LiteralVAL1Asterisk = "1";

    /// <summary>
    /// Literal for code: OnePerDay
    /// </summary>
    public const string LiteralOnePerDay = "1/d";

    /// <summary>
    /// Literal for code: OnePerMinute
    /// </summary>
    public const string LiteralOnePerMinute = "1/min";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowers
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowers = "10*";

    /// <summary>
    /// Literal for code: TrillionPerLiter
    /// </summary>
    public const string LiteralTrillionPerLiter = "10*12/L";

    /// <summary>
    /// Literal for code: Thousand
    /// </summary>
    public const string LiteralThousand = "10*3";

    /// <summary>
    /// Literal for code: ThousandRedBloodCells
    /// </summary>
    public const string LiteralThousandRedBloodCells = "10*3.{RBC}";

    /// <summary>
    /// Literal for code: ThousandPerAsteriskUnit
    /// </summary>
    public const string LiteralThousandPerAsteriskUnit = "10*3.U";

    /// <summary>
    /// Literal for code: ThousandPerLiter
    /// </summary>
    public const string LiteralThousandPerLiter = "10*3/L";

    /// <summary>
    /// Literal for code: ThousandPerMilliLiter
    /// </summary>
    public const string LiteralThousandPerMilliLiter = "10*3/mL";

    /// <summary>
    /// Literal for code: ThousandsPerMicroLiter
    /// </summary>
    public const string LiteralThousandsPerMicroLiter = "10*3/uL";

    /// <summary>
    /// Literal for code: ThousandCopiesPerMilliliter
    /// </summary>
    public const string LiteralThousandCopiesPerMilliliter = "10*3{copies}/mL";

    /// <summary>
    /// Literal for code: ThousandCopiesPerMilliLiter
    /// </summary>
    public const string LiteralThousandCopiesPerMilliLiter = "10*3{Copies}/mL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower3PolarizationQuoteU
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower3PolarizationQuoteU = "10*-3{Polarization'U}";

    /// <summary>
    /// Literal for code: ThousandRedBloodCells_2
    /// </summary>
    public const string LiteralThousandRedBloodCells_2 = "10*3{RBCs}";

    /// <summary>
    /// Literal for code: VAL10ThousandPerMicroliter
    /// </summary>
    public const string LiteralVAL10ThousandPerMicroliter = "10*4/uL";

    /// <summary>
    /// Literal for code: OneHundredThousand
    /// </summary>
    public const string LiteralOneHundredThousand = "10*5";

    /// <summary>
    /// Literal for code: Million
    /// </summary>
    public const string LiteralMillion = "10*6";

    /// <summary>
    /// Literal for code: MillionColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralMillionColonyFormingUnitPerLiter = "10*6.[CFU]/L";

    /// <summary>
    /// Literal for code: MillionInternationalUnit
    /// </summary>
    public const string LiteralMillionInternationalUnit = "10*6.[iU]";

    /// <summary>
    /// Literal for code: MillionInternationalUnit_2
    /// </summary>
    public const string LiteralMillionInternationalUnit_2 = "10*6.[IU]";

    /// <summary>
    /// Literal for code: MillionEquivalentsPerMilliLiter
    /// </summary>
    public const string LiteralMillionEquivalentsPerMilliLiter = "10*6.eq/mL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6AsteriskUnit
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6AsteriskUnit = "10*6.U";

    /// <summary>
    /// Literal for code: MillionPer24Hour
    /// </summary>
    public const string LiteralMillionPer24Hour = "10*6/(24.h)";

    /// <summary>
    /// Literal for code: MillionPerSpecimen
    /// </summary>
    public const string LiteralMillionPerSpecimen = "10*6/{Specimen}";

    /// <summary>
    /// Literal for code: MillionPerKilogram
    /// </summary>
    public const string LiteralMillionPerKilogram = "10*6/kg";

    /// <summary>
    /// Literal for code: MillionPerLiter
    /// </summary>
    public const string LiteralMillionPerLiter = "10*6/L";

    /// <summary>
    /// Literal for code: MillionPerMilliliter
    /// </summary>
    public const string LiteralMillionPerMilliliter = "10*6/mL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6MillimeterPower3
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6MillimeterPower3 = "10*6/mm3";

    /// <summary>
    /// Literal for code: MillionPerMicroliter
    /// </summary>
    public const string LiteralMillionPerMicroliter = "10*6/uL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6ImmunofluorescenceQuoteU
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6ImmunofluorescenceQuoteU = "10*-6{Immunofluorescence'U}";

    /// <summary>
    /// Literal for code: TenToEighth
    /// </summary>
    public const string LiteralTenToEighth = "10*8";

    /// <summary>
    /// Literal for code: BillionPerLiter
    /// </summary>
    public const string LiteralBillionPerLiter = "10*9/L";

    /// <summary>
    /// Literal for code: BillionPerMilliliter
    /// </summary>
    public const string LiteralBillionPerMilliliter = "10*9/mL";

    /// <summary>
    /// Literal for code: BillionPerMicroliter
    /// </summary>
    public const string LiteralBillionPerMicroliter = "10*9/uL";

    /// <summary>
    /// Literal for code: VAL10LiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralVAL10LiterPerMinutePerSquareMeter = "10.L/(min.m2)";

    /// <summary>
    /// Literal for code: VAL10LiterPerMinute
    /// </summary>
    public const string LiteralVAL10LiterPerMinute = "10.L/min";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = "10.uN.s/(cm.m2)";

    /// <summary>
    /// Literal for code: VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter
    /// </summary>
    public const string LiteralVAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = "10.uN.s/(cm5.m2)";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeter
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeter = "10.uN.s/cm";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = "10.uN.s/cm2";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowers_2
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowers_2 = "10^";

    /// <summary>
    /// Literal for code: VAL24Hour
    /// </summary>
    public const string LiteralVAL24Hour = "24.h";

    /// <summary>
    /// Literal for code: Year
    /// </summary>
    public const string LiteralYear = "a";

    /// <summary>
    /// Literal for code: Ampre
    /// </summary>
    public const string LiteralAmpre = "A";

    /// <summary>
    /// Literal for code: AmpreMeter
    /// </summary>
    public const string LiteralAmpreMeter = "A/m";

    /// <summary>
    /// Literal for code: MeanGregorianYear
    /// </summary>
    public const string LiteralMeanGregorianYear = "a_g";

    /// <summary>
    /// Literal for code: MeanJulianYear
    /// </summary>
    public const string LiteralMeanJulianYear = "a_j";

    /// <summary>
    /// Literal for code: TropicalYear
    /// </summary>
    public const string LiteralTropicalYear = "a_t";

    /// <summary>
    /// Literal for code: AttogramPerCell
    /// </summary>
    public const string LiteralAttogramPerCell = "ag/{cell}";

    /// <summary>
    /// Literal for code: Ngstrm
    /// </summary>
    public const string LiteralNgstrm = "Ao";

    /// <summary>
    /// Literal for code: Are
    /// </summary>
    public const string LiteralAre = "ar";

    /// <summary>
    /// Literal for code: StandardAtmosphere
    /// </summary>
    public const string LiteralStandardAtmosphere = "atm";

    /// <summary>
    /// Literal for code: TechnicalAtmosphere
    /// </summary>
    public const string LiteralTechnicalAtmosphere = "att";

    /// <summary>
    /// Literal for code: AstronomicUnit
    /// </summary>
    public const string LiteralAstronomicUnit = "AU";

    /// <summary>
    /// Literal for code: Barn
    /// </summary>
    public const string LiteralBarn = "b";

    /// <summary>
    /// Literal for code: Bel
    /// </summary>
    public const string LiteralBel = "B";

    /// <summary>
    /// Literal for code: BelKilowatt
    /// </summary>
    public const string LiteralBelKilowatt = "B[kW]";

    /// <summary>
    /// Literal for code: BelMillivolt
    /// </summary>
    public const string LiteralBelMillivolt = "B[mV]";

    /// <summary>
    /// Literal for code: BelSoundPressure
    /// </summary>
    public const string LiteralBelSoundPressure = "B[SPL]";

    /// <summary>
    /// Literal for code: BelMicrovolt
    /// </summary>
    public const string LiteralBelMicrovolt = "B[uV]";

    /// <summary>
    /// Literal for code: BelVolt
    /// </summary>
    public const string LiteralBelVolt = "B[V]";

    /// <summary>
    /// Literal for code: BelWatt
    /// </summary>
    public const string LiteralBelWatt = "B[W]";

    /// <summary>
    /// Literal for code: Bar
    /// </summary>
    public const string LiteralBar = "bar";

    /// <summary>
    /// Literal for code: Baud
    /// </summary>
    public const string LiteralBaud = "Bd";

    /// <summary>
    /// Literal for code: Biot
    /// </summary>
    public const string LiteralBiot = "Bi";

    /// <summary>
    /// Literal for code: Bit
    /// </summary>
    public const string LiteralBit = "bit";

    /// <summary>
    /// Literal for code: Bit_2
    /// </summary>
    public const string LiteralBit_2 = "bit_s";

    /// <summary>
    /// Literal for code: Becquerel
    /// </summary>
    public const string LiteralBecquerel = "Bq";

    /// <summary>
    /// Literal for code: VALByte
    /// </summary>
    public const string LiteralVALByte = "By";

    /// <summary>
    /// Literal for code: Coulomb
    /// </summary>
    public const string LiteralCoulomb = "C";

    /// <summary>
    /// Literal for code: Calorie
    /// </summary>
    public const string LiteralCalorie = "cal";

    /// <summary>
    /// Literal for code: CalorieAt15DegreesC
    /// </summary>
    public const string LiteralCalorieAt15DegreesC = "cal_[15]";

    /// <summary>
    /// Literal for code: CalorieAt20DegreesC
    /// </summary>
    public const string LiteralCalorieAt20DegreesC = "cal_[20]";

    /// <summary>
    /// Literal for code: InternationalTableCalorie
    /// </summary>
    public const string LiteralInternationalTableCalorie = "cal_IT";

    /// <summary>
    /// Literal for code: MeanCalorie
    /// </summary>
    public const string LiteralMeanCalorie = "cal_m";

    /// <summary>
    /// Literal for code: ThermochemicalCalorie
    /// </summary>
    public const string LiteralThermochemicalCalorie = "cal_th";

    /// <summary>
    /// Literal for code: Candela
    /// </summary>
    public const string LiteralCandela = "cd";

    /// <summary>
    /// Literal for code: DegreeCelsius
    /// </summary>
    public const string LiteralDegreeCelsius = "Cel";

    /// <summary>
    /// Literal for code: Centigram
    /// </summary>
    public const string LiteralCentigram = "cg";

    /// <summary>
    /// Literal for code: CURIE
    /// </summary>
    public const string LiteralCURIE = "Ci";

    /// <summary>
    /// Literal for code: Circle
    /// </summary>
    public const string LiteralCircle = "circ";

    /// <summary>
    /// Literal for code: Centiliter
    /// </summary>
    public const string LiteralCentiliter = "cL";

    /// <summary>
    /// Literal for code: Centimeter
    /// </summary>
    public const string LiteralCentimeter = "cm";

    /// <summary>
    /// Literal for code: CentimeterOfWater
    /// </summary>
    public const string LiteralCentimeterOfWater = "cm[H2O]";

    /// <summary>
    /// Literal for code: CentimeterOfWaterColumnSecondAsteriskMeter
    /// </summary>
    public const string LiteralCentimeterOfWaterColumnSecondAsteriskMeter = "cm[H2O]/(s.m)";

    /// <summary>
    /// Literal for code: CentimeterOfWaterPerLiterPerSecond
    /// </summary>
    public const string LiteralCentimeterOfWaterPerLiterPerSecond = "cm[H2O]/L/s";

    /// <summary>
    /// Literal for code: CentimeterOfWaterPerSecondPerMeter
    /// </summary>
    public const string LiteralCentimeterOfWaterPerSecondPerMeter = "cm[H2O]/s/m";

    /// <summary>
    /// Literal for code: CentimeterOfMercury
    /// </summary>
    public const string LiteralCentimeterOfMercury = "cm[Hg]";

    /// <summary>
    /// Literal for code: SquareCentimeter
    /// </summary>
    public const string LiteralSquareCentimeter = "cm2";

    /// <summary>
    /// Literal for code: SquareCentimeterPerSecond
    /// </summary>
    public const string LiteralSquareCentimeterPerSecond = "cm2/s";

    /// <summary>
    /// Literal for code: CubicCentimeter
    /// </summary>
    public const string LiteralCubicCentimeter = "cm3";

    /// <summary>
    /// Literal for code: CentiPoise
    /// </summary>
    public const string LiteralCentiPoise = "cP";

    /// <summary>
    /// Literal for code: CentiStokes
    /// </summary>
    public const string LiteralCentiStokes = "cSt";

    /// <summary>
    /// Literal for code: Day
    /// </summary>
    public const string LiteralDay = "d";

    /// <summary>
    /// Literal for code: DekaliterPerMinute
    /// </summary>
    public const string LiteralDekaliterPerMinute = "daL/min";

    /// <summary>
    /// Literal for code: DekaliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralDekaliterPerMinutePerSquareMeter = "daL/min/m2";

    /// <summary>
    /// Literal for code: Decibel
    /// </summary>
    public const string LiteralDecibel = "dB";

    /// <summary>
    /// Literal for code: Degree
    /// </summary>
    public const string LiteralDegree = "deg";

    /// <summary>
    /// Literal for code: DegreePerSecond
    /// </summary>
    public const string LiteralDegreePerSecond = "deg/s";

    /// <summary>
    /// Literal for code: Decigram
    /// </summary>
    public const string LiteralDecigram = "dg";

    /// <summary>
    /// Literal for code: Deciliter
    /// </summary>
    public const string LiteralDeciliter = "dL";

    /// <summary>
    /// Literal for code: Decimeter
    /// </summary>
    public const string LiteralDecimeter = "dm";

    /// <summary>
    /// Literal for code: SquareDecimeterPerSquareSecond
    /// </summary>
    public const string LiteralSquareDecimeterPerSquareSecond = "dm2/s2";

    /// <summary>
    /// Literal for code: Dyne
    /// </summary>
    public const string LiteralDyne = "dyn";

    /// <summary>
    /// Literal for code: DyneSecondPerCentimeterPerSquareMeter
    /// </summary>
    public const string LiteralDyneSecondPerCentimeterPerSquareMeter = "dyn.s/(cm.m2)";

    /// <summary>
    /// Literal for code: DyneSecondPerCentimeter
    /// </summary>
    public const string LiteralDyneSecondPerCentimeter = "dyn.s/cm";

    /// <summary>
    /// Literal for code: Equivalents
    /// </summary>
    public const string LiteralEquivalents = "eq";

    /// <summary>
    /// Literal for code: EquivalentsLiter
    /// </summary>
    public const string LiteralEquivalentsLiter = "eq/L";

    /// <summary>
    /// Literal for code: EquivalentsMilliliter
    /// </summary>
    public const string LiteralEquivalentsMilliliter = "eq/mL";

    /// <summary>
    /// Literal for code: EquivalentsMillimole
    /// </summary>
    public const string LiteralEquivalentsMillimole = "eq/mmol";

    /// <summary>
    /// Literal for code: EquivalentsMicromole
    /// </summary>
    public const string LiteralEquivalentsMicromole = "eq/umol";

    /// <summary>
    /// Literal for code: Erg
    /// </summary>
    public const string LiteralErg = "erg";

    /// <summary>
    /// Literal for code: Electronvolt
    /// </summary>
    public const string LiteralElectronvolt = "eV";

    /// <summary>
    /// Literal for code: Farad
    /// </summary>
    public const string LiteralFarad = "F";

    /// <summary>
    /// Literal for code: Femtogram
    /// </summary>
    public const string LiteralFemtogram = "fg";

    /// <summary>
    /// Literal for code: Femtoliter
    /// </summary>
    public const string LiteralFemtoliter = "fL";

    /// <summary>
    /// Literal for code: FemtoliterNanoliter
    /// </summary>
    public const string LiteralFemtoliterNanoliter = "fL/nL";

    /// <summary>
    /// Literal for code: Femtometer
    /// </summary>
    public const string LiteralFemtometer = "fm";

    /// <summary>
    /// Literal for code: Femtomole
    /// </summary>
    public const string LiteralFemtomole = "fmol";

    /// <summary>
    /// Literal for code: FemtomolePerGram
    /// </summary>
    public const string LiteralFemtomolePerGram = "fmol/g";

    /// <summary>
    /// Literal for code: FemtomolePerLiter
    /// </summary>
    public const string LiteralFemtomolePerLiter = "fmol/L";

    /// <summary>
    /// Literal for code: FemtomoleMilligram
    /// </summary>
    public const string LiteralFemtomoleMilligram = "fmol/mg";

    /// <summary>
    /// Literal for code: FemtomolePerMilligramOfCytosolProtein
    /// </summary>
    public const string LiteralFemtomolePerMilligramOfCytosolProtein = "fmol/mg{cytosol_protein}";

    /// <summary>
    /// Literal for code: FemtomolePerMilligramOfProtein
    /// </summary>
    public const string LiteralFemtomolePerMilligramOfProtein = "fmol/mg{protein}";

    /// <summary>
    /// Literal for code: FemtomoleMilliliter
    /// </summary>
    public const string LiteralFemtomoleMilliliter = "fmol/mL";

    /// <summary>
    /// Literal for code: Gram
    /// </summary>
    public const string LiteralGram = "g";

    /// <summary>
    /// Literal for code: Gauss
    /// </summary>
    public const string LiteralGauss = "G";

    /// <summary>
    /// Literal for code: GramPercent
    /// </summary>
    public const string LiteralGramPercent = "g%";

    /// <summary>
    /// Literal for code: GramAsteriskMeter
    /// </summary>
    public const string LiteralGramAsteriskMeter = "g.m";

    /// <summary>
    /// Literal for code: GramAsteriskMeterHbAsteriskMeterPower2
    /// </summary>
    public const string LiteralGramAsteriskMeterHbAsteriskMeterPower2 = "g.m/({hb}.m2)";

    /// <summary>
    /// Literal for code: GramMeterPerHeartBeat
    /// </summary>
    public const string LiteralGramMeterPerHeartBeat = "g.m/{beat}";

    /// <summary>
    /// Literal for code: GramMeterPerHeartbeat
    /// </summary>
    public const string LiteralGramMeterPerHeartbeat = "g.m/{H.B.}";

    /// <summary>
    /// Literal for code: GramAsteriskMeterHb
    /// </summary>
    public const string LiteralGramAsteriskMeterHb = "g.m/{hb}";

    /// <summary>
    /// Literal for code: GramPer100Gram
    /// </summary>
    public const string LiteralGramPer100Gram = "g/(100.g)";

    /// <summary>
    /// Literal for code: GramPer12Hour
    /// </summary>
    public const string LiteralGramPer12Hour = "g/(12.h)";

    /// <summary>
    /// Literal for code: GramPer24Hour
    /// </summary>
    public const string LiteralGramPer24Hour = "g/(24.h)";

    /// <summary>
    /// Literal for code: GramPer3Days
    /// </summary>
    public const string LiteralGramPer3Days = "g/(3.d)";

    /// <summary>
    /// Literal for code: GramPer4Hour
    /// </summary>
    public const string LiteralGramPer4Hour = "g/(4.h)";

    /// <summary>
    /// Literal for code: GramPer48Hour
    /// </summary>
    public const string LiteralGramPer48Hour = "g/(48.h)";

    /// <summary>
    /// Literal for code: GramPer5Hour
    /// </summary>
    public const string LiteralGramPer5Hour = "g/(5.h)";

    /// <summary>
    /// Literal for code: GramPer6Hour
    /// </summary>
    public const string LiteralGramPer6Hour = "g/(6.h)";

    /// <summary>
    /// Literal for code: GramPer72Hour
    /// </summary>
    public const string LiteralGramPer72Hour = "g/(72.h)";

    /// <summary>
    /// Literal for code: Gram8AsteriskHour
    /// </summary>
    public const string LiteralGram8AsteriskHour = "g/(8.h)";

    /// <summary>
    /// Literal for code: GramPer8HourShift
    /// </summary>
    public const string LiteralGramPer8HourShift = "g/(8.h){shift}";

    /// <summary>
    /// Literal for code: Gram8AsteriskKilogramAsteriskHour
    /// </summary>
    public const string LiteralGram8AsteriskKilogramAsteriskHour = "g/(8.kg.h)";

    /// <summary>
    /// Literal for code: GramKilogramAsteriskHour
    /// </summary>
    public const string LiteralGramKilogramAsteriskHour = "g/(kg.h)";

    /// <summary>
    /// Literal for code: GramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralGramKilogramAsteriskMinute = "g/(kg.min)";

    /// <summary>
    /// Literal for code: GramPerSpecimen
    /// </summary>
    public const string LiteralGramPerSpecimen = "g/{specimen}";

    /// <summary>
    /// Literal for code: GramPerTotalOutput
    /// </summary>
    public const string LiteralGramPerTotalOutput = "g/{total_output}";

    /// <summary>
    /// Literal for code: GramPerTotalWeight
    /// </summary>
    public const string LiteralGramPerTotalWeight = "g/{total_weight}";

    /// <summary>
    /// Literal for code: GramTotalWeight
    /// </summary>
    public const string LiteralGramTotalWeight = "g/{TotalWeight}";

    /// <summary>
    /// Literal for code: GramPerCubicCentimeter
    /// </summary>
    public const string LiteralGramPerCubicCentimeter = "g/cm3";

    /// <summary>
    /// Literal for code: GramPerDay
    /// </summary>
    public const string LiteralGramPerDay = "g/d";

    /// <summary>
    /// Literal for code: GramPerDeciliter
    /// </summary>
    public const string LiteralGramPerDeciliter = "g/dL";

    /// <summary>
    /// Literal for code: GramPerGram
    /// </summary>
    public const string LiteralGramPerGram = "g/g";

    /// <summary>
    /// Literal for code: GramGramCre
    /// </summary>
    public const string LiteralGramGramCre = "g/g{Cre}";

    /// <summary>
    /// Literal for code: GramGramCreat
    /// </summary>
    public const string LiteralGramGramCreat = "g/g{creat}";

    /// <summary>
    /// Literal for code: GramPerGramOfGlobulin
    /// </summary>
    public const string LiteralGramPerGramOfGlobulin = "g/g{globulin}";

    /// <summary>
    /// Literal for code: GramPerGramOfTissue
    /// </summary>
    public const string LiteralGramPerGramOfTissue = "g/g{tissue}";

    /// <summary>
    /// Literal for code: GramPerHour
    /// </summary>
    public const string LiteralGramPerHour = "g/h";

    /// <summary>
    /// Literal for code: GramPerHourPerSquareMeter
    /// </summary>
    public const string LiteralGramPerHourPerSquareMeter = "g/h/m2";

    /// <summary>
    /// Literal for code: GramPerKilogram
    /// </summary>
    public const string LiteralGramPerKilogram = "g/kg";

    /// <summary>
    /// Literal for code: GramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralGramPerKilogramPer8Hour = "g/kg/(8.h)";

    /// <summary>
    /// Literal for code: GramPerKilogramPer8HourShift
    /// </summary>
    public const string LiteralGramPerKilogramPer8HourShift = "g/kg/(8.h){shift}";

    /// <summary>
    /// Literal for code: GramPerKilogramPerDay
    /// </summary>
    public const string LiteralGramPerKilogramPerDay = "g/kg/d";

    /// <summary>
    /// Literal for code: GramPerKilogramPerHour
    /// </summary>
    public const string LiteralGramPerKilogramPerHour = "g/kg/h";

    /// <summary>
    /// Literal for code: GramPerKilogramPerMinute
    /// </summary>
    public const string LiteralGramPerKilogramPerMinute = "g/kg/min";

    /// <summary>
    /// Literal for code: GramPerLiter
    /// </summary>
    public const string LiteralGramPerLiter = "g/L";

    /// <summary>
    /// Literal for code: GramsPerSquareMeter
    /// </summary>
    public const string LiteralGramsPerSquareMeter = "g/m2";

    /// <summary>
    /// Literal for code: GramPerMilligram
    /// </summary>
    public const string LiteralGramPerMilligram = "g/mg";

    /// <summary>
    /// Literal for code: GramPerMinute
    /// </summary>
    public const string LiteralGramPerMinute = "g/min";

    /// <summary>
    /// Literal for code: GramPerMilliliter
    /// </summary>
    public const string LiteralGramPerMilliliter = "g/mL";

    /// <summary>
    /// Literal for code: GramPerMillimole
    /// </summary>
    public const string LiteralGramPerMillimole = "g/mmol";

    /// <summary>
    /// Literal for code: GramMillimoleCreat
    /// </summary>
    public const string LiteralGramMillimoleCreat = "g/mmol{creat}";

    /// <summary>
    /// Literal for code: GramPerMole
    /// </summary>
    public const string LiteralGramPerMole = "g/mol";

    /// <summary>
    /// Literal for code: GramPerMoleOfCreatinine
    /// </summary>
    public const string LiteralGramPerMoleOfCreatinine = "g/mol{creat}";

    /// <summary>
    /// Literal for code: GramOfCreatinine
    /// </summary>
    public const string LiteralGramOfCreatinine = "g{creat}";

    /// <summary>
    /// Literal for code: GramOfHemoglobin
    /// </summary>
    public const string LiteralGramOfHemoglobin = "g{Hb}";

    /// <summary>
    /// Literal for code: GramOfTotalNitrogen
    /// </summary>
    public const string LiteralGramOfTotalNitrogen = "g{total_nit}";

    /// <summary>
    /// Literal for code: GramOfTotalProtein
    /// </summary>
    public const string LiteralGramOfTotalProtein = "g{total_prot}";

    /// <summary>
    /// Literal for code: GramOfWetTissue
    /// </summary>
    public const string LiteralGramOfWetTissue = "g{wet_tissue}";

    /// <summary>
    /// Literal for code: Gal
    /// </summary>
    public const string LiteralGal = "Gal";

    /// <summary>
    /// Literal for code: Gilbert
    /// </summary>
    public const string LiteralGilbert = "Gb";

    /// <summary>
    /// Literal for code: GigaBecquerel
    /// </summary>
    public const string LiteralGigaBecquerel = "GBq";

    /// <summary>
    /// Literal for code: GramForce
    /// </summary>
    public const string LiteralGramForce = "gf";

    /// <summary>
    /// Literal for code: GonGrade
    /// </summary>
    public const string LiteralGonGrade = "gon";

    /// <summary>
    /// Literal for code: Gray
    /// </summary>
    public const string LiteralGray = "Gy";

    /// <summary>
    /// Literal for code: Hour
    /// </summary>
    public const string LiteralHour = "h";

    /// <summary>
    /// Literal for code: Henry
    /// </summary>
    public const string LiteralHenry = "H";

    /// <summary>
    /// Literal for code: Hectoliter
    /// </summary>
    public const string LiteralHectoliter = "hL";

    /// <summary>
    /// Literal for code: Hertz
    /// </summary>
    public const string LiteralHertz = "Hz";

    /// <summary>
    /// Literal for code: Joule
    /// </summary>
    public const string LiteralJoule = "J";

    /// <summary>
    /// Literal for code: JoulePerLiter
    /// </summary>
    public const string LiteralJoulePerLiter = "J/L";

    /// <summary>
    /// Literal for code: Kelvin
    /// </summary>
    public const string LiteralKelvin = "K";

    /// <summary>
    /// Literal for code: KelvinWatt
    /// </summary>
    public const string LiteralKelvinWatt = "K/W";

    /// <summary>
    /// Literal for code: KiloInternationalUnitPerLiter
    /// </summary>
    public const string LiteralKiloInternationalUnitPerLiter = "k[IU]/L";

    /// <summary>
    /// Literal for code: KiloInternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralKiloInternationalUnitsPerMilliLiter = "k[iU]/mL";

    /// <summary>
    /// Literal for code: KiloInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralKiloInternationalUnitPerMilliliter = "k[IU]/mL";

    /// <summary>
    /// Literal for code: Katal
    /// </summary>
    public const string LiteralKatal = "kat";

    /// <summary>
    /// Literal for code: KatalKilogram
    /// </summary>
    public const string LiteralKatalKilogram = "kat/kg";

    /// <summary>
    /// Literal for code: KatalLiter
    /// </summary>
    public const string LiteralKatalLiter = "kat/L";

    /// <summary>
    /// Literal for code: KiloBecquerel
    /// </summary>
    public const string LiteralKiloBecquerel = "kBq";

    /// <summary>
    /// Literal for code: Kilocalorie
    /// </summary>
    public const string LiteralKilocalorie = "kcal";

    /// <summary>
    /// Literal for code: Kilocalorie8AsteriskHour
    /// </summary>
    public const string LiteralKilocalorie8AsteriskHour = "kcal/(8.h)";

    /// <summary>
    /// Literal for code: KilocaloriePerOunceUSAndBritish
    /// </summary>
    public const string LiteralKilocaloriePerOunceUSAndBritish = "kcal/[oz_av]";

    /// <summary>
    /// Literal for code: KilocaloriePerDay
    /// </summary>
    public const string LiteralKilocaloriePerDay = "kcal/d";

    /// <summary>
    /// Literal for code: KilocaloriePerHour
    /// </summary>
    public const string LiteralKilocaloriePerHour = "kcal/h";

    /// <summary>
    /// Literal for code: KilocaloriePerKilogramPer24Hour
    /// </summary>
    public const string LiteralKilocaloriePerKilogramPer24Hour = "kcal/kg/(24.h)";

    /// <summary>
    /// Literal for code: Kilogram
    /// </summary>
    public const string LiteralKilogram = "kg";

    /// <summary>
    /// Literal for code: KilogramMeterPerSecond
    /// </summary>
    public const string LiteralKilogramMeterPerSecond = "kg.m/s";

    /// <summary>
    /// Literal for code: KilogramPerSecondPerSquareMeter
    /// </summary>
    public const string LiteralKilogramPerSecondPerSquareMeter = "kg/(s.m2)";

    /// <summary>
    /// Literal for code: KilogramPerHour
    /// </summary>
    public const string LiteralKilogramPerHour = "kg/h";

    /// <summary>
    /// Literal for code: KilogramPerLiter
    /// </summary>
    public const string LiteralKilogramPerLiter = "kg/L";

    /// <summary>
    /// Literal for code: KilogramMeterPower2
    /// </summary>
    public const string LiteralKilogramMeterPower2 = "kg/m2";

    /// <summary>
    /// Literal for code: KilogramMeterPower3
    /// </summary>
    public const string LiteralKilogramMeterPower3 = "kg/m3";

    /// <summary>
    /// Literal for code: KilogramMinute
    /// </summary>
    public const string LiteralKilogramMinute = "kg/min";

    /// <summary>
    /// Literal for code: KilogramPerMole
    /// </summary>
    public const string LiteralKilogramPerMole = "kg/mol";

    /// <summary>
    /// Literal for code: KilogramSecond
    /// </summary>
    public const string LiteralKilogramSecond = "kg/s";

    /// <summary>
    /// Literal for code: KilogramOfWetTissue
    /// </summary>
    public const string LiteralKilogramOfWetTissue = "kg{wet'tis}";

    /// <summary>
    /// Literal for code: Kiloliter
    /// </summary>
    public const string LiteralKiloliter = "kL";

    /// <summary>
    /// Literal for code: Kilometer
    /// </summary>
    public const string LiteralKilometer = "km";

    /// <summary>
    /// Literal for code: KiloPascal
    /// </summary>
    public const string LiteralKiloPascal = "kPa";

    /// <summary>
    /// Literal for code: Kilosecond
    /// </summary>
    public const string LiteralKilosecond = "ks";

    /// <summary>
    /// Literal for code: KiloEnzymeUnit
    /// </summary>
    public const string LiteralKiloEnzymeUnit = "kU";

    /// <summary>
    /// Literal for code: KiloenzymeUnitPerGram
    /// </summary>
    public const string LiteralKiloenzymeUnitPerGram = "kU/g";

    /// <summary>
    /// Literal for code: KiloUnitHour
    /// </summary>
    public const string LiteralKiloUnitHour = "kU/h";

    /// <summary>
    /// Literal for code: KiloenzymeUnitPerLiter
    /// </summary>
    public const string LiteralKiloenzymeUnitPerLiter = "kU/L";

    /// <summary>
    /// Literal for code: KiloEnzymeUnitPerLiterClass
    /// </summary>
    public const string LiteralKiloEnzymeUnitPerLiterClass = "kU/L{class}";

    /// <summary>
    /// Literal for code: KiloEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralKiloEnzymeUnitPerMilliliter = "kU/mL";

    /// <summary>
    /// Literal for code: Kayser
    /// </summary>
    public const string LiteralKayser = "Ky";

    /// <summary>
    /// Literal for code: Liter
    /// </summary>
    public const string LiteralLiter = "L";

    /// <summary>
    /// Literal for code: LiterAsteriskSecondPower2Second
    /// </summary>
    public const string LiteralLiterAsteriskSecondPower2Second = "L.s2/s";

    /// <summary>
    /// Literal for code: LiterPer24Hour
    /// </summary>
    public const string LiteralLiterPer24Hour = "L/(24.h)";

    /// <summary>
    /// Literal for code: LiterPer8Hour
    /// </summary>
    public const string LiteralLiterPer8Hour = "L/(8.h)";

    /// <summary>
    /// Literal for code: LiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralLiterPerMinutePerSquareMeter = "L/(min.m2)";

    /// <summary>
    /// Literal for code: LiterPerDay
    /// </summary>
    public const string LiteralLiterPerDay = "L/d";

    /// <summary>
    /// Literal for code: LiterPerHour
    /// </summary>
    public const string LiteralLiterPerHour = "L/h";

    /// <summary>
    /// Literal for code: LiterPerKilogram
    /// </summary>
    public const string LiteralLiterPerKilogram = "L/kg";

    /// <summary>
    /// Literal for code: LiterPerLiter
    /// </summary>
    public const string LiteralLiterPerLiter = "L/L";

    /// <summary>
    /// Literal for code: LiterPerMinute
    /// </summary>
    public const string LiteralLiterPerMinute = "L/min";

    /// <summary>
    /// Literal for code: LiterSecond
    /// </summary>
    public const string LiteralLiterSecond = "L/s";

    /// <summary>
    /// Literal for code: LiterPerSecondPerSquareSecond
    /// </summary>
    public const string LiteralLiterPerSecondPerSquareSecond = "L/s/s2";

    /// <summary>
    /// Literal for code: Lumen
    /// </summary>
    public const string LiteralLumen = "lm";

    /// <summary>
    /// Literal for code: LumenSquareMeter
    /// </summary>
    public const string LiteralLumenSquareMeter = "lm.m2";

    /// <summary>
    /// Literal for code: LumenMeterPower2
    /// </summary>
    public const string LiteralLumenMeterPower2 = "lm/m2";

    /// <summary>
    /// Literal for code: Lambert
    /// </summary>
    public const string LiteralLambert = "Lmb";

    /// <summary>
    /// Literal for code: Lux
    /// </summary>
    public const string LiteralLux = "lx";

    /// <summary>
    /// Literal for code: Meter
    /// </summary>
    public const string LiteralMeter = "m";

    /// <summary>
    /// Literal for code: MeterPerSecond
    /// </summary>
    public const string LiteralMeterPerSecond = "m/s";

    /// <summary>
    /// Literal for code: MeterPerSquareSecond
    /// </summary>
    public const string LiteralMeterPerSquareSecond = "m/s2";

    /// <summary>
    /// Literal for code: MeterOfWaterColumn
    /// </summary>
    public const string LiteralMeterOfWaterColumn = "m[H2O]";

    /// <summary>
    /// Literal for code: MeterOfMercuryColumn
    /// </summary>
    public const string LiteralMeterOfMercuryColumn = "m[Hg]";

    /// <summary>
    /// Literal for code: MilliinternationalUnit
    /// </summary>
    public const string LiteralMilliinternationalUnit = "m[iU]";

    /// <summary>
    /// Literal for code: MilliInternationalUnitPerLiter
    /// </summary>
    public const string LiteralMilliInternationalUnitPerLiter = "m[IU]/L";

    /// <summary>
    /// Literal for code: MilliInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralMilliInternationalUnitPerMilliliter = "m[IU]/mL";

    /// <summary>
    /// Literal for code: SquareMeter
    /// </summary>
    public const string LiteralSquareMeter = "m2";

    /// <summary>
    /// Literal for code: SquareMeterPerSecond
    /// </summary>
    public const string LiteralSquareMeterPerSecond = "m2/s";

    /// <summary>
    /// Literal for code: CubicMeterPerSecond
    /// </summary>
    public const string LiteralCubicMeterPerSecond = "m3/s";

    /// <summary>
    /// Literal for code: MilliAmpre
    /// </summary>
    public const string LiteralMilliAmpre = "mA";

    /// <summary>
    /// Literal for code: Millibar
    /// </summary>
    public const string LiteralMillibar = "mbar";

    /// <summary>
    /// Literal for code: MillibarSecondPerLiter
    /// </summary>
    public const string LiteralMillibarSecondPerLiter = "mbar.s/L";

    /// <summary>
    /// Literal for code: MillibarPerLiterPerSecond
    /// </summary>
    public const string LiteralMillibarPerLiterPerSecond = "mbar/L/s";

    /// <summary>
    /// Literal for code: MegaBecquerel
    /// </summary>
    public const string LiteralMegaBecquerel = "MBq";

    /// <summary>
    /// Literal for code: MilliCurie
    /// </summary>
    public const string LiteralMilliCurie = "mCi";

    /// <summary>
    /// Literal for code: Milliequivalent
    /// </summary>
    public const string LiteralMilliequivalent = "meq";

    /// <summary>
    /// Literal for code: MilliequivalentPer12Hour
    /// </summary>
    public const string LiteralMilliequivalentPer12Hour = "meq/(12.h)";

    /// <summary>
    /// Literal for code: MilliequivalentPer2Hour
    /// </summary>
    public const string LiteralMilliequivalentPer2Hour = "meq/(2.h)";

    /// <summary>
    /// Literal for code: MilliequivalentPer24Hour
    /// </summary>
    public const string LiteralMilliequivalentPer24Hour = "meq/(24.h)";

    /// <summary>
    /// Literal for code: MilliequivalentPer8Hour
    /// </summary>
    public const string LiteralMilliequivalentPer8Hour = "meq/(8.h)";

    /// <summary>
    /// Literal for code: Milliequivalents8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMilliequivalents8AsteriskHourAsteriskKilogram = "meq/(8.h.kg)";

    /// <summary>
    /// Literal for code: MilliequivalentsKilogramAsteriskDay
    /// </summary>
    public const string LiteralMilliequivalentsKilogramAsteriskDay = "meq/(kg.d)";

    /// <summary>
    /// Literal for code: MilliequivalentPerSpecimen
    /// </summary>
    public const string LiteralMilliequivalentPerSpecimen = "meq/{specimen}";

    /// <summary>
    /// Literal for code: MilliequivalentsSpecimen
    /// </summary>
    public const string LiteralMilliequivalentsSpecimen = "meq/{Specimen}";

    /// <summary>
    /// Literal for code: MilliequivalentPerTotalVolume
    /// </summary>
    public const string LiteralMilliequivalentPerTotalVolume = "meq/{total_volume}";

    /// <summary>
    /// Literal for code: MilliequivalentPerDay
    /// </summary>
    public const string LiteralMilliequivalentPerDay = "meq/d";

    /// <summary>
    /// Literal for code: MilliequivalentPerDeciliter
    /// </summary>
    public const string LiteralMilliequivalentPerDeciliter = "meq/dL";

    /// <summary>
    /// Literal for code: MilliequivalentPerGram
    /// </summary>
    public const string LiteralMilliequivalentPerGram = "meq/g";

    /// <summary>
    /// Literal for code: MilliequivalentsGramCre
    /// </summary>
    public const string LiteralMilliequivalentsGramCre = "meq/g{Cre}";

    /// <summary>
    /// Literal for code: MilliequivalentPerGramOfCreatinine
    /// </summary>
    public const string LiteralMilliequivalentPerGramOfCreatinine = "meq/g{creat}";

    /// <summary>
    /// Literal for code: MilliequivalentPerHour
    /// </summary>
    public const string LiteralMilliequivalentPerHour = "meq/h";

    /// <summary>
    /// Literal for code: MilliequivalentPerKilogram
    /// </summary>
    public const string LiteralMilliequivalentPerKilogram = "meq/kg";

    /// <summary>
    /// Literal for code: MilliequivalentPerKilogramPerHour
    /// </summary>
    public const string LiteralMilliequivalentPerKilogramPerHour = "meq/kg/h";

    /// <summary>
    /// Literal for code: MilliequivalentsKilogramMinute
    /// </summary>
    public const string LiteralMilliequivalentsKilogramMinute = "meq/kg/min";

    /// <summary>
    /// Literal for code: MilliequivalentPerLiter
    /// </summary>
    public const string LiteralMilliequivalentPerLiter = "meq/L";

    /// <summary>
    /// Literal for code: MilliequivalentPerSquareMeter
    /// </summary>
    public const string LiteralMilliequivalentPerSquareMeter = "meq/m2";

    /// <summary>
    /// Literal for code: MilliequivalentPerMinute
    /// </summary>
    public const string LiteralMilliequivalentPerMinute = "meq/min";

    /// <summary>
    /// Literal for code: MilliequivalentPerMilliliter
    /// </summary>
    public const string LiteralMilliequivalentPerMilliliter = "meq/mL";

    /// <summary>
    /// Literal for code: Milligram
    /// </summary>
    public const string LiteralMilligram = "mg";

    /// <summary>
    /// Literal for code: MilligramPer10Hour
    /// </summary>
    public const string LiteralMilligramPer10Hour = "mg/(10.h)";

    /// <summary>
    /// Literal for code: MilligramPer12Hour
    /// </summary>
    public const string LiteralMilligramPer12Hour = "mg/(12.h)";

    /// <summary>
    /// Literal for code: MilligramPer18Hour
    /// </summary>
    public const string LiteralMilligramPer18Hour = "mg/(18.h)";

    /// <summary>
    /// Literal for code: MilligramPer2Hour
    /// </summary>
    public const string LiteralMilligramPer2Hour = "mg/(2.h)";

    /// <summary>
    /// Literal for code: MilligramPer24Hour
    /// </summary>
    public const string LiteralMilligramPer24Hour = "mg/(24.h)";

    /// <summary>
    /// Literal for code: MilligramPer6Hour
    /// </summary>
    public const string LiteralMilligramPer6Hour = "mg/(6.h)";

    /// <summary>
    /// Literal for code: MilligramPer72Hour
    /// </summary>
    public const string LiteralMilligramPer72Hour = "mg/(72.h)";

    /// <summary>
    /// Literal for code: MilligramPer8Hour
    /// </summary>
    public const string LiteralMilligramPer8Hour = "mg/(8.h)";

    /// <summary>
    /// Literal for code: Milligram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMilligram8AsteriskHourAsteriskKilogram = "mg/(8.h.kg)";

    /// <summary>
    /// Literal for code: MilligramKilogramAsteriskHour
    /// </summary>
    public const string LiteralMilligramKilogramAsteriskHour = "mg/(kg.h)";

    /// <summary>
    /// Literal for code: MilligramPerCollection
    /// </summary>
    public const string LiteralMilligramPerCollection = "mg/{collection}";

    /// <summary>
    /// Literal for code: MilligramHgbGram
    /// </summary>
    public const string LiteralMilligramHgbGram = "mg/{Hgb}/g";

    /// <summary>
    /// Literal for code: MilligramPerSpecimen
    /// </summary>
    public const string LiteralMilligramPerSpecimen = "mg/{specimen}";

    /// <summary>
    /// Literal for code: MilligramSpecimen
    /// </summary>
    public const string LiteralMilligramSpecimen = "mg/{Specimen}";

    /// <summary>
    /// Literal for code: MilligramPerTotalOutput
    /// </summary>
    public const string LiteralMilligramPerTotalOutput = "mg/{total_output}";

    /// <summary>
    /// Literal for code: MilligramPerTotalVolume
    /// </summary>
    public const string LiteralMilligramPerTotalVolume = "mg/{total_volume}";

    /// <summary>
    /// Literal for code: MilliGramPerTotalVolume
    /// </summary>
    public const string LiteralMilliGramPerTotalVolume = "mg/{TotalVolume}";

    /// <summary>
    /// Literal for code: MilligramTotQuoteVolume
    /// </summary>
    public const string LiteralMilligramTotQuoteVolume = "mg/{Tot'Volume}";

    /// <summary>
    /// Literal for code: MilligramVolume
    /// </summary>
    public const string LiteralMilligramVolume = "mg/{Volume}";

    /// <summary>
    /// Literal for code: MilligramPerDay
    /// </summary>
    public const string LiteralMilligramPerDay = "mg/d";

    /// <summary>
    /// Literal for code: MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralMilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mg/d/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: MilligramPerDayPer173SquareMeter
    /// </summary>
    public const string LiteralMilligramPerDayPer173SquareMeter = "mg/d/{1.73_m2}";

    /// <summary>
    /// Literal for code: MilligramPerDeciliter
    /// </summary>
    public const string LiteralMilligramPerDeciliter = "mg/dL";

    /// <summary>
    /// Literal for code: MilligramPerDeciliterOfRedBloodCells
    /// </summary>
    public const string LiteralMilligramPerDeciliterOfRedBloodCells = "mg/dL{RBCs}";

    /// <summary>
    /// Literal for code: MilligramPerGram
    /// </summary>
    public const string LiteralMilligramPerGram = "mg/g";

    /// <summary>
    /// Literal for code: MilligramGramCre
    /// </summary>
    public const string LiteralMilligramGramCre = "mg/g{Cre}";

    /// <summary>
    /// Literal for code: MilligramPerGramOfCreatinine
    /// </summary>
    public const string LiteralMilligramPerGramOfCreatinine = "mg/g{creat}";

    /// <summary>
    /// Literal for code: MilligramPerGramOfDryTissue
    /// </summary>
    public const string LiteralMilligramPerGramOfDryTissue = "mg/g{dry_tissue}";

    /// <summary>
    /// Literal for code: MilligramPerGramOfFeces
    /// </summary>
    public const string LiteralMilligramPerGramOfFeces = "mg/g{feces}";

    /// <summary>
    /// Literal for code: MilligramPerGramOfTissue
    /// </summary>
    public const string LiteralMilligramPerGramOfTissue = "mg/g{tissue}";

    /// <summary>
    /// Literal for code: MilligramPerGramOfWetTissue
    /// </summary>
    public const string LiteralMilligramPerGramOfWetTissue = "mg/g{wet_tissue}";

    /// <summary>
    /// Literal for code: MilligramPerHour
    /// </summary>
    public const string LiteralMilligramPerHour = "mg/h";

    /// <summary>
    /// Literal for code: MilligramPerKilogram
    /// </summary>
    public const string LiteralMilligramPerKilogram = "mg/kg";

    /// <summary>
    /// Literal for code: MilligramKilogram24AsteriskHour
    /// </summary>
    public const string LiteralMilligramKilogram24AsteriskHour = "mg/kg/(24.h)";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMilligramPerKilogramPer8Hour = "mg/kg/(8.h)";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerDay
    /// </summary>
    public const string LiteralMilligramPerKilogramPerDay = "mg/kg/d";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerHour
    /// </summary>
    public const string LiteralMilligramPerKilogramPerHour = "mg/kg/h";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerMinute
    /// </summary>
    public const string LiteralMilligramPerKilogramPerMinute = "mg/kg/min";

    /// <summary>
    /// Literal for code: MilligramPerLiter
    /// </summary>
    public const string LiteralMilligramPerLiter = "mg/L";

    /// <summary>
    /// Literal for code: MilligramPerLiterOfRedBloodCells
    /// </summary>
    public const string LiteralMilligramPerLiterOfRedBloodCells = "mg/L{RBCs}";

    /// <summary>
    /// Literal for code: MilligramPerSquareMeter
    /// </summary>
    public const string LiteralMilligramPerSquareMeter = "mg/m2";

    /// <summary>
    /// Literal for code: MilligramPerCubicMeter
    /// </summary>
    public const string LiteralMilligramPerCubicMeter = "mg/m3";

    /// <summary>
    /// Literal for code: MilligramPerMilligram
    /// </summary>
    public const string LiteralMilligramPerMilligram = "mg/mg";

    /// <summary>
    /// Literal for code: MilligramMilligramCre
    /// </summary>
    public const string LiteralMilligramMilligramCre = "mg/mg{cre}";

    /// <summary>
    /// Literal for code: MilligramsPerMilligramCreatinine
    /// </summary>
    public const string LiteralMilligramsPerMilligramCreatinine = "mg/mg{Cre}";

    /// <summary>
    /// Literal for code: MilligramPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralMilligramPerMilligramOfCreatinine = "mg/mg{creat}";

    /// <summary>
    /// Literal for code: MilligramPerMinute
    /// </summary>
    public const string LiteralMilligramPerMinute = "mg/min";

    /// <summary>
    /// Literal for code: MilligramPerMilliliter
    /// </summary>
    public const string LiteralMilligramPerMilliliter = "mg/mL";

    /// <summary>
    /// Literal for code: MilligramPerMillimole
    /// </summary>
    public const string LiteralMilligramPerMillimole = "mg/mmol";

    /// <summary>
    /// Literal for code: MilligramMillimoleCre
    /// </summary>
    public const string LiteralMilligramMillimoleCre = "mg/mmol{Cre}";

    /// <summary>
    /// Literal for code: MilligramPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralMilligramPerMillimoleOfCreatinine = "mg/mmol{creat}";

    /// <summary>
    /// Literal for code: MilligramPerWeek
    /// </summary>
    public const string LiteralMilligramPerWeek = "mg/wk";

    /// <summary>
    /// Literal for code: MilligramOfCreatinine
    /// </summary>
    public const string LiteralMilligramOfCreatinine = "mg{creat}";

    /// <summary>
    /// Literal for code: MilligramFibrinogenEquivalentUnitPerLiter
    /// </summary>
    public const string LiteralMilligramFibrinogenEquivalentUnitPerLiter = "mg{FEU}/L";

    /// <summary>
    /// Literal for code: MilligramPhenylketonesDeciliter
    /// </summary>
    public const string LiteralMilligramPhenylketonesDeciliter = "mg{Phenylketones}/dL";

    /// <summary>
    /// Literal for code: Mho
    /// </summary>
    public const string LiteralMho = "mho";

    /// <summary>
    /// Literal for code: Minute_2
    /// </summary>
    public const string LiteralMinute_2 = "min";

    /// <summary>
    /// Literal for code: Milliliter
    /// </summary>
    public const string LiteralMilliliter = "mL";

    /// <summary>
    /// Literal for code: MilliliterHQuoteBAsteriskMeterPower2
    /// </summary>
    public const string LiteralMilliliterHQuoteBAsteriskMeterPower2 = "mL/({h'b}.m2)";

    /// <summary>
    /// Literal for code: MilliliterPer10Hour
    /// </summary>
    public const string LiteralMilliliterPer10Hour = "mL/(10.h)";

    /// <summary>
    /// Literal for code: MilliliterPer12Hour
    /// </summary>
    public const string LiteralMilliliterPer12Hour = "mL/(12.h)";

    /// <summary>
    /// Literal for code: MilliliterPer2Hour
    /// </summary>
    public const string LiteralMilliliterPer2Hour = "mL/(2.h)";

    /// <summary>
    /// Literal for code: MilliliterPer24Hour
    /// </summary>
    public const string LiteralMilliliterPer24Hour = "mL/(24.h)";

    /// <summary>
    /// Literal for code: MilliliterPer4Hour
    /// </summary>
    public const string LiteralMilliliterPer4Hour = "mL/(4.h)";

    /// <summary>
    /// Literal for code: MilliliterPer5Hour
    /// </summary>
    public const string LiteralMilliliterPer5Hour = "mL/(5.h)";

    /// <summary>
    /// Literal for code: MilliliterPer6Hour
    /// </summary>
    public const string LiteralMilliliterPer6Hour = "mL/(6.h)";

    /// <summary>
    /// Literal for code: MilliliterPer72Hour
    /// </summary>
    public const string LiteralMilliliterPer72Hour = "mL/(72.h)";

    /// <summary>
    /// Literal for code: MilliliterPer8Hour
    /// </summary>
    public const string LiteralMilliliterPer8Hour = "mL/(8.h)";

    /// <summary>
    /// Literal for code: MilliliterKilogramAsteriskMinute
    /// </summary>
    public const string LiteralMilliliterKilogramAsteriskMinute = "mL/(kg.min)";

    /// <summary>
    /// Literal for code: MilliliterPerSquareInchInternational
    /// </summary>
    public const string LiteralMilliliterPerSquareInchInternational = "mL/[sin_i]";

    /// <summary>
    /// Literal for code: MilliliterPerHeartBeat
    /// </summary>
    public const string LiteralMilliliterPerHeartBeat = "mL/{beat}";

    /// <summary>
    /// Literal for code: MilliliterPerHeartBeatPerSquareMeter
    /// </summary>
    public const string LiteralMilliliterPerHeartBeatPerSquareMeter = "mL/{beat}/m2";

    /// <summary>
    /// Literal for code: MilliLitersPerHeartbeatSIVolumeUnits
    /// </summary>
    public const string LiteralMilliLitersPerHeartbeatSIVolumeUnits = "mL/{h'b}";

    /// <summary>
    /// Literal for code: MilliliterCentimeterOfWaterColumn
    /// </summary>
    public const string LiteralMilliliterCentimeterOfWaterColumn = "mL/cm[H2O]";

    /// <summary>
    /// Literal for code: MilliliterPerDay
    /// </summary>
    public const string LiteralMilliliterPerDay = "mL/d";

    /// <summary>
    /// Literal for code: MilliliterPerDeciliter
    /// </summary>
    public const string LiteralMilliliterPerDeciliter = "mL/dL";

    /// <summary>
    /// Literal for code: MilliliterPerHour
    /// </summary>
    public const string LiteralMilliliterPerHour = "mL/h";

    /// <summary>
    /// Literal for code: MilliliterPerKilogram
    /// </summary>
    public const string LiteralMilliliterPerKilogram = "mL/kg";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMilliliterPerKilogramPer8Hour = "mL/kg/(8.h)";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerDay
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerDay = "mL/kg/d";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerHour
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerHour = "mL/kg/h";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerMinute
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerMinute = "mL/kg/min";

    /// <summary>
    /// Literal for code: MilliliterPerLiter
    /// </summary>
    public const string LiteralMilliliterPerLiter = "mL/L";

    /// <summary>
    /// Literal for code: MilliliterPerSquareMeter
    /// </summary>
    public const string LiteralMilliliterPerSquareMeter = "mL/m2";

    /// <summary>
    /// Literal for code: MilliliterPerMillibar
    /// </summary>
    public const string LiteralMilliliterPerMillibar = "mL/mbar";

    /// <summary>
    /// Literal for code: MilliliterPerMinute
    /// </summary>
    public const string LiteralMilliliterPerMinute = "mL/min";

    /// <summary>
    /// Literal for code: MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralMilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mL/min/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: MilliliterPerMinutePer173SquareMeter
    /// </summary>
    public const string LiteralMilliliterPerMinutePer173SquareMeter = "mL/min/{1.73_m2}";

    /// <summary>
    /// Literal for code: MilliliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralMilliliterPerMinutePerSquareMeter = "mL/min/m2";

    /// <summary>
    /// Literal for code: MilliliterPerMillimeter
    /// </summary>
    public const string LiteralMilliliterPerMillimeter = "mL/mm";

    /// <summary>
    /// Literal for code: MilliliterPerSecond
    /// </summary>
    public const string LiteralMilliliterPerSecond = "mL/s";

    /// <summary>
    /// Literal for code: MilliliterOfFetalRedBloodCells
    /// </summary>
    public const string LiteralMilliliterOfFetalRedBloodCells = "mL{fetal_RBCs}";

    /// <summary>
    /// Literal for code: Millimeter
    /// </summary>
    public const string LiteralMillimeter = "mm";

    /// <summary>
    /// Literal for code: MillimeterPerHour
    /// </summary>
    public const string LiteralMillimeterPerHour = "mm/h";

    /// <summary>
    /// Literal for code: MillimeterPerMinute
    /// </summary>
    public const string LiteralMillimeterPerMinute = "mm/min";

    /// <summary>
    /// Literal for code: MillimeterOfWater
    /// </summary>
    public const string LiteralMillimeterOfWater = "mm[H2O]";

    /// <summary>
    /// Literal for code: MillimeterOfMercury
    /// </summary>
    public const string LiteralMillimeterOfMercury = "mm[Hg]";

    /// <summary>
    /// Literal for code: SquareMillimeter
    /// </summary>
    public const string LiteralSquareMillimeter = "mm2";

    /// <summary>
    /// Literal for code: CubicMillimeter
    /// </summary>
    public const string LiteralCubicMillimeter = "mm3";

    /// <summary>
    /// Literal for code: Millimole
    /// </summary>
    public const string LiteralMillimole = "mmol";

    /// <summary>
    /// Literal for code: MillimolePer12Hour
    /// </summary>
    public const string LiteralMillimolePer12Hour = "mmol/(12.h)";

    /// <summary>
    /// Literal for code: MillimolePer18Hour
    /// </summary>
    public const string LiteralMillimolePer18Hour = "mmol/(18.h)";

    /// <summary>
    /// Literal for code: MillimolePer2Hour
    /// </summary>
    public const string LiteralMillimolePer2Hour = "mmol/(2.h)";

    /// <summary>
    /// Literal for code: MillimolePer24Hour
    /// </summary>
    public const string LiteralMillimolePer24Hour = "mmol/(24.h)";

    /// <summary>
    /// Literal for code: MillimolePer5Hour
    /// </summary>
    public const string LiteralMillimolePer5Hour = "mmol/(5.h)";

    /// <summary>
    /// Literal for code: MillimolePer6Hour
    /// </summary>
    public const string LiteralMillimolePer6Hour = "mmol/(6.h)";

    /// <summary>
    /// Literal for code: MillimolePer8Hour
    /// </summary>
    public const string LiteralMillimolePer8Hour = "mmol/(8.h)";

    /// <summary>
    /// Literal for code: Millimole8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMillimole8AsteriskHourAsteriskKilogram = "mmol/(8.h.kg)";

    /// <summary>
    /// Literal for code: MillimolePerEjaculate
    /// </summary>
    public const string LiteralMillimolePerEjaculate = "mmol/{ejaculate}";

    /// <summary>
    /// Literal for code: MillimolePerSpecimen
    /// </summary>
    public const string LiteralMillimolePerSpecimen = "mmol/{specimen}";

    /// <summary>
    /// Literal for code: MillimolePerTotalVolume
    /// </summary>
    public const string LiteralMillimolePerTotalVolume = "mmol/{total_vol}";

    /// <summary>
    /// Literal for code: MilliMolesPerTotalVolumeSubstanceUnits
    /// </summary>
    public const string LiteralMilliMolesPerTotalVolumeSubstanceUnits = "mmol/{TotalVolume}";

    /// <summary>
    /// Literal for code: MillimoleTotQuoteVolume
    /// </summary>
    public const string LiteralMillimoleTotQuoteVolume = "mmol/{Tot'Volume}";

    /// <summary>
    /// Literal for code: MillimolePerDay
    /// </summary>
    public const string LiteralMillimolePerDay = "mmol/d";

    /// <summary>
    /// Literal for code: MillimolePerDeciliter
    /// </summary>
    public const string LiteralMillimolePerDeciliter = "mmol/dL";

    /// <summary>
    /// Literal for code: MillimolePerGram
    /// </summary>
    public const string LiteralMillimolePerGram = "mmol/g";

    /// <summary>
    /// Literal for code: MillimolePerGramOfCreatinine
    /// </summary>
    public const string LiteralMillimolePerGramOfCreatinine = "mmol/g{creat}";

    /// <summary>
    /// Literal for code: MillimolePerGramOfHemoglobin
    /// </summary>
    public const string LiteralMillimolePerGramOfHemoglobin = "mmol/g{hemoglobin}";

    /// <summary>
    /// Literal for code: MillimolePerHour
    /// </summary>
    public const string LiteralMillimolePerHour = "mmol/h";

    /// <summary>
    /// Literal for code: MillimolePerHourPerMilligramOfHemoglobin
    /// </summary>
    public const string LiteralMillimolePerHourPerMilligramOfHemoglobin = "mmol/h/mg{Hb}";

    /// <summary>
    /// Literal for code: MillimolePerHourPerMilligramOfProtein
    /// </summary>
    public const string LiteralMillimolePerHourPerMilligramOfProtein = "mmol/h/mg{protein}";

    /// <summary>
    /// Literal for code: MillimolePerKilogram
    /// </summary>
    public const string LiteralMillimolePerKilogram = "mmol/kg";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPer8Hour
    /// </summary>
    public const string LiteralMillimolePerKilogramPer8Hour = "mmol/kg/(8.h)";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerDay
    /// </summary>
    public const string LiteralMillimolePerKilogramPerDay = "mmol/kg/d";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerHour
    /// </summary>
    public const string LiteralMillimolePerKilogramPerHour = "mmol/kg/h";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerMinute
    /// </summary>
    public const string LiteralMillimolePerKilogramPerMinute = "mmol/kg/min";

    /// <summary>
    /// Literal for code: MillimolePerKilogramOfWater
    /// </summary>
    public const string LiteralMillimolePerKilogramOfWater = "mmol/kg{H2O}";

    /// <summary>
    /// Literal for code: MillimolePerLiter
    /// </summary>
    public const string LiteralMillimolePerLiter = "mmol/L";

    /// <summary>
    /// Literal for code: MillimolePerLiterPerSecond
    /// </summary>
    public const string LiteralMillimolePerLiterPerSecond = "mmol/L/s";

    /// <summary>
    /// Literal for code: MillimolePerLiterOfRedBloodCells
    /// </summary>
    public const string LiteralMillimolePerLiterOfRedBloodCells = "mmol/L{RBCs}";

    /// <summary>
    /// Literal for code: MillimoleMeter
    /// </summary>
    public const string LiteralMillimoleMeter = "mmol/m";

    /// <summary>
    /// Literal for code: MillimolePerSquareMeter
    /// </summary>
    public const string LiteralMillimolePerSquareMeter = "mmol/m2";

    /// <summary>
    /// Literal for code: MillimolePerMinute
    /// </summary>
    public const string LiteralMillimolePerMinute = "mmol/min";

    /// <summary>
    /// Literal for code: MillimolePerMillimole
    /// </summary>
    public const string LiteralMillimolePerMillimole = "mmol/mmol";

    /// <summary>
    /// Literal for code: MillimolePerMillmoleOfCreatinine
    /// </summary>
    public const string LiteralMillimolePerMillmoleOfCreatinine = "mmol/mmol{creat}";

    /// <summary>
    /// Literal for code: MillimolePerMillimoleOfUrea
    /// </summary>
    public const string LiteralMillimolePerMillimoleOfUrea = "mmol/mmol{urea}";

    /// <summary>
    /// Literal for code: MillimolePerMole
    /// </summary>
    public const string LiteralMillimolePerMole = "mmol/mol";

    /// <summary>
    /// Literal for code: MilliMolesPerMoleCreatinine
    /// </summary>
    public const string LiteralMilliMolesPerMoleCreatinine = "mmol/mol{Cre}";

    /// <summary>
    /// Literal for code: MillimolePerMoleOfCreatinine
    /// </summary>
    public const string LiteralMillimolePerMoleOfCreatinine = "mmol/mol{creat}";

    /// <summary>
    /// Literal for code: MillimolePerSecondPerLiter
    /// </summary>
    public const string LiteralMillimolePerSecondPerLiter = "mmol/s/L";

    /// <summary>
    /// Literal for code: Month
    /// </summary>
    public const string LiteralMonth = "mo";

    /// <summary>
    /// Literal for code: MeanGregorianMonth
    /// </summary>
    public const string LiteralMeanGregorianMonth = "mo_g";

    /// <summary>
    /// Literal for code: MeanJulianMonth
    /// </summary>
    public const string LiteralMeanJulianMonth = "mo_j";

    /// <summary>
    /// Literal for code: SynodalMonth
    /// </summary>
    public const string LiteralSynodalMonth = "mo_s";

    /// <summary>
    /// Literal for code: Mole
    /// </summary>
    public const string LiteralMole = "mol";

    /// <summary>
    /// Literal for code: MolePerDay
    /// </summary>
    public const string LiteralMolePerDay = "mol/d";

    /// <summary>
    /// Literal for code: MolePerKilogram
    /// </summary>
    public const string LiteralMolePerKilogram = "mol/kg";

    /// <summary>
    /// Literal for code: MolePerKilogramPerSecond
    /// </summary>
    public const string LiteralMolePerKilogramPerSecond = "mol/kg/s";

    /// <summary>
    /// Literal for code: MolePerLiter
    /// </summary>
    public const string LiteralMolePerLiter = "mol/L";

    /// <summary>
    /// Literal for code: MolePerCubicMeter
    /// </summary>
    public const string LiteralMolePerCubicMeter = "mol/m3";

    /// <summary>
    /// Literal for code: MolePerMilliliter
    /// </summary>
    public const string LiteralMolePerMilliliter = "mol/mL";

    /// <summary>
    /// Literal for code: MolePerMole
    /// </summary>
    public const string LiteralMolePerMole = "mol/mol";

    /// <summary>
    /// Literal for code: MoleMoleCreat
    /// </summary>
    public const string LiteralMoleMoleCreat = "mol/mol{creat}";

    /// <summary>
    /// Literal for code: MolePerSecond
    /// </summary>
    public const string LiteralMolePerSecond = "mol/s";

    /// <summary>
    /// Literal for code: Milliosmole
    /// </summary>
    public const string LiteralMilliosmole = "mosm";

    /// <summary>
    /// Literal for code: MilliosmolePerKilogram
    /// </summary>
    public const string LiteralMilliosmolePerKilogram = "mosm/kg";

    /// <summary>
    /// Literal for code: MilliosmolePerLiter
    /// </summary>
    public const string LiteralMilliosmolePerLiter = "mosm/L";

    /// <summary>
    /// Literal for code: Millipascal
    /// </summary>
    public const string LiteralMillipascal = "mPa";

    /// <summary>
    /// Literal for code: MillipascalSecond
    /// </summary>
    public const string LiteralMillipascalSecond = "mPa.s";

    /// <summary>
    /// Literal for code: Millisecond
    /// </summary>
    public const string LiteralMillisecond = "ms";

    /// <summary>
    /// Literal for code: Megasecond
    /// </summary>
    public const string LiteralMegasecond = "Ms";

    /// <summary>
    /// Literal for code: MillienzymeUnit
    /// </summary>
    public const string LiteralMillienzymeUnit = "mU";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerGram
    /// </summary>
    public const string LiteralMillienzymeUnitPerGram = "mU/g";

    /// <summary>
    /// Literal for code: MilliEnzymeUnitPerGramOfHemoglobin
    /// </summary>
    public const string LiteralMilliEnzymeUnitPerGramOfHemoglobin = "mU/g{Hb}";

    /// <summary>
    /// Literal for code: MilliUnitGramHgb
    /// </summary>
    public const string LiteralMilliUnitGramHgb = "mU/g{Hgb}";

    /// <summary>
    /// Literal for code: MilliEnzymeUnitPerGramOfProtein
    /// </summary>
    public const string LiteralMilliEnzymeUnitPerGramOfProtein = "mU/g{protein}";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerLiter
    /// </summary>
    public const string LiteralMillienzymeUnitPerLiter = "mU/L";

    /// <summary>
    /// Literal for code: MilliUnitMilligram
    /// </summary>
    public const string LiteralMilliUnitMilligram = "mU/mg";

    /// <summary>
    /// Literal for code: MilliUnitMilligramCre
    /// </summary>
    public const string LiteralMilliUnitMilligramCre = "mU/mg{Cre}";

    /// <summary>
    /// Literal for code: MilliEnzymeUnitPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralMilliEnzymeUnitPerMilligramOfCreatinine = "mU/mg{creat}";

    /// <summary>
    /// Literal for code: MilliUnitMinute
    /// </summary>
    public const string LiteralMilliUnitMinute = "mU/min";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralMillienzymeUnitPerMilliliter = "mU/mL";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMilliliterPerMinute
    /// </summary>
    public const string LiteralMillienzymeUnitPerMilliliterPerMinute = "mU/mL/min";

    /// <summary>
    /// Literal for code: MilliEnzymeUnitPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralMilliEnzymeUnitPerMillimoleOfCreatinine = "mU/mmol{creat}";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralMillienzymeUnitPerMillimoleOfCreatinine = "mU/mmol{creatinine}";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMillimoleOfRedBloodCells
    /// </summary>
    public const string LiteralMillienzymeUnitPerMillimoleOfRedBloodCells = "mU/mmol{RBCs}";

    /// <summary>
    /// Literal for code: MilliVolt
    /// </summary>
    public const string LiteralMilliVolt = "mV";

    /// <summary>
    /// Literal for code: Maxwell
    /// </summary>
    public const string LiteralMaxwell = "Mx";

    /// <summary>
    /// Literal for code: Newton
    /// </summary>
    public const string LiteralNewton = "N";

    /// <summary>
    /// Literal for code: NewtonCentimeter
    /// </summary>
    public const string LiteralNewtonCentimeter = "N.cm";

    /// <summary>
    /// Literal for code: NewtonSecond
    /// </summary>
    public const string LiteralNewtonSecond = "N.s";

    /// <summary>
    /// Literal for code: NanoCurie
    /// </summary>
    public const string LiteralNanoCurie = "nCi";

    /// <summary>
    /// Literal for code: Nanogram
    /// </summary>
    public const string LiteralNanogram = "ng";

    /// <summary>
    /// Literal for code: NanogramPer24Hour
    /// </summary>
    public const string LiteralNanogramPer24Hour = "ng/(24.h)";

    /// <summary>
    /// Literal for code: NanogramPer8Hour
    /// </summary>
    public const string LiteralNanogramPer8Hour = "ng/(8.h)";

    /// <summary>
    /// Literal for code: Nanogram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNanogram8AsteriskHourAsteriskKilogram = "ng/(8.h.kg)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskDay = "ng/(kg.d)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskHour = "ng/(kg.h)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskMinute = "ng/(kg.min)";

    /// <summary>
    /// Literal for code: NanogramPerMillion
    /// </summary>
    public const string LiteralNanogramPerMillion = "ng/10*6";

    /// <summary>
    /// Literal for code: NanogramPerMillionRedBloodCells
    /// </summary>
    public const string LiteralNanogramPerMillionRedBloodCells = "ng/10*6{RBCs}";

    /// <summary>
    /// Literal for code: NanogramPerDay
    /// </summary>
    public const string LiteralNanogramPerDay = "ng/d";

    /// <summary>
    /// Literal for code: NanogramPerDeciliter
    /// </summary>
    public const string LiteralNanogramPerDeciliter = "ng/dL";

    /// <summary>
    /// Literal for code: NanogramDeciliterHour
    /// </summary>
    public const string LiteralNanogramDeciliterHour = "ng/dL/h";

    /// <summary>
    /// Literal for code: NanogramPerGram
    /// </summary>
    public const string LiteralNanogramPerGram = "ng/g";

    /// <summary>
    /// Literal for code: NanogramGramCre
    /// </summary>
    public const string LiteralNanogramGramCre = "ng/g{Cre}";

    /// <summary>
    /// Literal for code: NanogramPerGramOfCreatinine
    /// </summary>
    public const string LiteralNanogramPerGramOfCreatinine = "ng/g{creat}";

    /// <summary>
    /// Literal for code: NanogramPerHour
    /// </summary>
    public const string LiteralNanogramPerHour = "ng/h";

    /// <summary>
    /// Literal for code: NanogramPerKilogram
    /// </summary>
    public const string LiteralNanogramPerKilogram = "ng/kg";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNanogramPerKilogramPer8Hour = "ng/kg/(8.h)";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPerHour
    /// </summary>
    public const string LiteralNanogramPerKilogramPerHour = "ng/kg/h";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNanogramPerKilogramPerMinute = "ng/kg/min";

    /// <summary>
    /// Literal for code: NanogramPerLiter
    /// </summary>
    public const string LiteralNanogramPerLiter = "ng/L";

    /// <summary>
    /// Literal for code: NanogramPerSquareMeter
    /// </summary>
    public const string LiteralNanogramPerSquareMeter = "ng/m2";

    /// <summary>
    /// Literal for code: NanogramPerMilligram
    /// </summary>
    public const string LiteralNanogramPerMilligram = "ng/mg";

    /// <summary>
    /// Literal for code: NanogramPerMilligramPerHour
    /// </summary>
    public const string LiteralNanogramPerMilligramPerHour = "ng/mg/h";

    /// <summary>
    /// Literal for code: NanogramPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralNanogramPerMilligramOfCreatinine = "ng/mg{creat}";

    /// <summary>
    /// Literal for code: NanogramPerMilligramOfProtein
    /// </summary>
    public const string LiteralNanogramPerMilligramOfProtein = "ng/mg{protein}";

    /// <summary>
    /// Literal for code: NanogramMilligramProtein
    /// </summary>
    public const string LiteralNanogramMilligramProtein = "ng/mg{Protein}";

    /// <summary>
    /// Literal for code: NanogramPerMinute
    /// </summary>
    public const string LiteralNanogramPerMinute = "ng/min";

    /// <summary>
    /// Literal for code: NanogramPerMillliiter
    /// </summary>
    public const string LiteralNanogramPerMillliiter = "ng/mL";

    /// <summary>
    /// Literal for code: NanogramPerMilliliterPerHour
    /// </summary>
    public const string LiteralNanogramPerMilliliterPerHour = "ng/mL/h";

    /// <summary>
    /// Literal for code: NanogramMilliliterRbc
    /// </summary>
    public const string LiteralNanogramMilliliterRbc = "ng/mL{rbc}";

    /// <summary>
    /// Literal for code: NanogramPerMilliliterOfRedBloodCells
    /// </summary>
    public const string LiteralNanogramPerMilliliterOfRedBloodCells = "ng/mL{RBCs}";

    /// <summary>
    /// Literal for code: NanogramPerSecond
    /// </summary>
    public const string LiteralNanogramPerSecond = "ng/s";

    /// <summary>
    /// Literal for code: NanogramPerEnzymeUnit
    /// </summary>
    public const string LiteralNanogramPerEnzymeUnit = "ng/U";

    /// <summary>
    /// Literal for code: NanogramFibrinogenEquivalentUnitPerMilliliter
    /// </summary>
    public const string LiteralNanogramFibrinogenEquivalentUnitPerMilliliter = "ng{FEU}/mL";

    /// <summary>
    /// Literal for code: Nanokatal
    /// </summary>
    public const string LiteralNanokatal = "nkat";

    /// <summary>
    /// Literal for code: Nanoliter
    /// </summary>
    public const string LiteralNanoliter = "nL";

    /// <summary>
    /// Literal for code: Nanometer
    /// </summary>
    public const string LiteralNanometer = "nm";

    /// <summary>
    /// Literal for code: NanometerPerSecondPerLiter
    /// </summary>
    public const string LiteralNanometerPerSecondPerLiter = "nm/s/L";

    /// <summary>
    /// Literal for code: Nanomole
    /// </summary>
    public const string LiteralNanomole = "nmol";

    /// <summary>
    /// Literal for code: NanomolePer24Hour
    /// </summary>
    public const string LiteralNanomolePer24Hour = "nmol/(24.h)";

    /// <summary>
    /// Literal for code: NanomolePerDay
    /// </summary>
    public const string LiteralNanomolePerDay = "nmol/d";

    /// <summary>
    /// Literal for code: NanomolePerDeciliter
    /// </summary>
    public const string LiteralNanomolePerDeciliter = "nmol/dL";

    /// <summary>
    /// Literal for code: NanomolePerDeciliterOfGlomerularFiltrate
    /// </summary>
    public const string LiteralNanomolePerDeciliterOfGlomerularFiltrate = "nmol/dL{GF}";

    /// <summary>
    /// Literal for code: NanomolePerGram
    /// </summary>
    public const string LiteralNanomolePerGram = "nmol/g";

    /// <summary>
    /// Literal for code: NanomoleGramCre
    /// </summary>
    public const string LiteralNanomoleGramCre = "nmol/g{Cre}";

    /// <summary>
    /// Literal for code: NanomolePerGramOfCreatinine
    /// </summary>
    public const string LiteralNanomolePerGramOfCreatinine = "nmol/g{creat}";

    /// <summary>
    /// Literal for code: NanomolePerGramOfDryWeight
    /// </summary>
    public const string LiteralNanomolePerGramOfDryWeight = "nmol/g{dry_wt}";

    /// <summary>
    /// Literal for code: NanomolePerHourPerLiter
    /// </summary>
    public const string LiteralNanomolePerHourPerLiter = "nmol/h/L";

    /// <summary>
    /// Literal for code: NanomolePerHourPerMilligramOfProtein
    /// </summary>
    public const string LiteralNanomolePerHourPerMilligramOfProtein = "nmol/h/mg{protein}";

    /// <summary>
    /// Literal for code: NanomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralNanomolePerHourPerMilliliter = "nmol/h/mL";

    /// <summary>
    /// Literal for code: NanomolePerLiter
    /// </summary>
    public const string LiteralNanomolePerLiter = "nmol/L";

    /// <summary>
    /// Literal for code: NanomolePerLiterPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralNanomolePerLiterPerMillimoleOfCreatinine = "nmol/L/mmol{creat}";

    /// <summary>
    /// Literal for code: NanomolePerLiterPerSecond
    /// </summary>
    public const string LiteralNanomolePerLiterPerSecond = "nmol/L/s";

    /// <summary>
    /// Literal for code: NanomolePerLiterOfRedBloodCells
    /// </summary>
    public const string LiteralNanomolePerLiterOfRedBloodCells = "nmol/L{RBCs}";

    /// <summary>
    /// Literal for code: NanomolePerMeterPerMilligramOfProtein
    /// </summary>
    public const string LiteralNanomolePerMeterPerMilligramOfProtein = "nmol/m/mg{protein}";

    /// <summary>
    /// Literal for code: NanomolePerMilligram
    /// </summary>
    public const string LiteralNanomolePerMilligram = "nmol/mg";

    /// <summary>
    /// Literal for code: NanomolePerMilligramPerHour
    /// </summary>
    public const string LiteralNanomolePerMilligramPerHour = "nmol/mg/h";

    /// <summary>
    /// Literal for code: NanomolePerMilligramOfCreatinine
    /// </summary>
    public const string LiteralNanomolePerMilligramOfCreatinine = "nmol/mg{creat}";

    /// <summary>
    /// Literal for code: NanomolePerMilligramOfProtein
    /// </summary>
    public const string LiteralNanomolePerMilligramOfProtein = "nmol/mg{protein}";

    /// <summary>
    /// Literal for code: NanomolePerMilligramOfProteinPerHour
    /// </summary>
    public const string LiteralNanomolePerMilligramOfProteinPerHour = "nmol/mg{protein}/h";

    /// <summary>
    /// Literal for code: NanomolePerMinute
    /// </summary>
    public const string LiteralNanomolePerMinute = "nmol/min";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMillionCells
    /// </summary>
    public const string LiteralNanomolePerMinutePerMillionCells = "nmol/min/10*6{cells}";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilligramOfHemoglobin
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilligramOfHemoglobin = "nmol/min/mg{Hb}";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilligramOfHemoglobin_2
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilligramOfHemoglobin_2 = "nmol/min/mg{hemoglobin}";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilligramOfProtein
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilligramOfProtein = "nmol/min/mg{protein}";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilliliter
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilliliter = "nmol/min/mL";

    /// <summary>
    /// Literal for code: NanomolePerMilliliter
    /// </summary>
    public const string LiteralNanomolePerMilliliter = "nmol/mL";

    /// <summary>
    /// Literal for code: NanomolePerMilliliterPerHour
    /// </summary>
    public const string LiteralNanomolePerMilliliterPerHour = "nmol/mL/h";

    /// <summary>
    /// Literal for code: NanomolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralNanomolePerMilliliterPerMinute = "nmol/mL/min";

    /// <summary>
    /// Literal for code: NanomolePerMillimole
    /// </summary>
    public const string LiteralNanomolePerMillimole = "nmol/mmol";

    /// <summary>
    /// Literal for code: NanomoleMillimoleCre
    /// </summary>
    public const string LiteralNanomoleMillimoleCre = "nmol/mmol{Cre}";

    /// <summary>
    /// Literal for code: NanomolePerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralNanomolePerMillimoleOfCreatinine = "nmol/mmol{creat}";

    /// <summary>
    /// Literal for code: NanomolePerMole
    /// </summary>
    public const string LiteralNanomolePerMole = "nmol/mol";

    /// <summary>
    /// Literal for code: NanomolePerNanomole
    /// </summary>
    public const string LiteralNanomolePerNanomole = "nmol/nmol";

    /// <summary>
    /// Literal for code: NanomolePerSecond
    /// </summary>
    public const string LiteralNanomolePerSecond = "nmol/s";

    /// <summary>
    /// Literal for code: NanomolePerSecondPerLiter
    /// </summary>
    public const string LiteralNanomolePerSecondPerLiter = "nmol/s/L";

    /// <summary>
    /// Literal for code: NanomolePerMicromoleOfCreatinine
    /// </summary>
    public const string LiteralNanomolePerMicromoleOfCreatinine = "nmol/umol{creat}";

    /// <summary>
    /// Literal for code: NanomoleOf12CystinePerMilligramOfProtein
    /// </summary>
    public const string LiteralNanomoleOf12CystinePerMilligramOfProtein = "nmol{1/2cys}/mg{protein}";

    /// <summary>
    /// Literal for code: NanomoleOfATP
    /// </summary>
    public const string LiteralNanomoleOfATP = "nmol{ATP}";

    /// <summary>
    /// Literal for code: NanomoleBoneCollagenEquivalent
    /// </summary>
    public const string LiteralNanomoleBoneCollagenEquivalent = "nmol{BCE}";

    /// <summary>
    /// Literal for code: NanomoleBoneCollagenEquivalentPerLiter
    /// </summary>
    public const string LiteralNanomoleBoneCollagenEquivalentPerLiter = "nmol{BCE}/L";

    /// <summary>
    /// Literal for code: NanomoleBoneCollagenEquivalentPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralNanomoleBoneCollagenEquivalentPerMillimoleOfCreatinine = "nmol{BCE}/mmol{creat}";

    /// <summary>
    /// Literal for code: Neper
    /// </summary>
    public const string LiteralNeper = "Np";

    /// <summary>
    /// Literal for code: Nanosecond
    /// </summary>
    public const string LiteralNanosecond = "ns";

    /// <summary>
    /// Literal for code: NanoenzymeUnitPerRedBloodCell
    /// </summary>
    public const string LiteralNanoenzymeUnitPerRedBloodCell = "nU/{RBC}";

    /// <summary>
    /// Literal for code: NanoenzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNanoenzymeUnitPerMilliliter = "nU/mL";

    /// <summary>
    /// Literal for code: Oersted
    /// </summary>
    public const string LiteralOersted = "Oe";

    /// <summary>
    /// Literal for code: Ohm
    /// </summary>
    public const string LiteralOhm = "Ohm";

    /// <summary>
    /// Literal for code: OhmMeter
    /// </summary>
    public const string LiteralOhmMeter = "Ohm.m";

    /// <summary>
    /// Literal for code: Osmole
    /// </summary>
    public const string LiteralOsmole = "osm";

    /// <summary>
    /// Literal for code: OsmolePerKilogram
    /// </summary>
    public const string LiteralOsmolePerKilogram = "osm/kg";

    /// <summary>
    /// Literal for code: OsmolePerLiter
    /// </summary>
    public const string LiteralOsmolePerLiter = "osm/L";

    /// <summary>
    /// Literal for code: Poise
    /// </summary>
    public const string LiteralPoise = "P";

    /// <summary>
    /// Literal for code: Picoampere
    /// </summary>
    public const string LiteralPicoampere = "pA";

    /// <summary>
    /// Literal for code: Pascal
    /// </summary>
    public const string LiteralPascal = "Pa";

    /// <summary>
    /// Literal for code: Parsec
    /// </summary>
    public const string LiteralParsec = "pc";

    /// <summary>
    /// Literal for code: Picogram
    /// </summary>
    public const string LiteralPicogram = "pg";

    /// <summary>
    /// Literal for code: PicogramPerCell
    /// </summary>
    public const string LiteralPicogramPerCell = "pg/{cell}";

    /// <summary>
    /// Literal for code: PicogramPerRedBloodCell
    /// </summary>
    public const string LiteralPicogramPerRedBloodCell = "pg/{RBC}";

    /// <summary>
    /// Literal for code: PicogramPerDeciliter
    /// </summary>
    public const string LiteralPicogramPerDeciliter = "pg/dL";

    /// <summary>
    /// Literal for code: PicogramPerLiter
    /// </summary>
    public const string LiteralPicogramPerLiter = "pg/L";

    /// <summary>
    /// Literal for code: PicogramPerMilligram
    /// </summary>
    public const string LiteralPicogramPerMilligram = "pg/mg";

    /// <summary>
    /// Literal for code: PicogramPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralPicogramPerMilligramOfCreatinine = "pg/mg{creat}";

    /// <summary>
    /// Literal for code: PicogramPerMilliliter
    /// </summary>
    public const string LiteralPicogramPerMilliliter = "pg/mL";

    /// <summary>
    /// Literal for code: PicogramPerMillimeter
    /// </summary>
    public const string LiteralPicogramPerMillimeter = "pg/mm";

    /// <summary>
    /// Literal for code: Phot
    /// </summary>
    public const string LiteralPhot = "ph";

    /// <summary>
    /// Literal for code: Picokatal
    /// </summary>
    public const string LiteralPicokatal = "pkat";

    /// <summary>
    /// Literal for code: Picoliter
    /// </summary>
    public const string LiteralPicoliter = "pL";

    /// <summary>
    /// Literal for code: Picometer
    /// </summary>
    public const string LiteralPicometer = "pm";

    /// <summary>
    /// Literal for code: Picomole
    /// </summary>
    public const string LiteralPicomole = "pmol";

    /// <summary>
    /// Literal for code: PicomolePer24Hour
    /// </summary>
    public const string LiteralPicomolePer24Hour = "pmol/(24.h)";

    /// <summary>
    /// Literal for code: PicomolePerRedBloodCell
    /// </summary>
    public const string LiteralPicomolePerRedBloodCell = "pmol/{RBC}";

    /// <summary>
    /// Literal for code: PicomolePerDay
    /// </summary>
    public const string LiteralPicomolePerDay = "pmol/d";

    /// <summary>
    /// Literal for code: PicomolePerDeciliter
    /// </summary>
    public const string LiteralPicomolePerDeciliter = "pmol/dL";

    /// <summary>
    /// Literal for code: PicomolePerGram
    /// </summary>
    public const string LiteralPicomolePerGram = "pmol/g";

    /// <summary>
    /// Literal for code: PicomolePerHourPerMilligramOfProtein
    /// </summary>
    public const string LiteralPicomolePerHourPerMilligramOfProtein = "pmol/h/mg{protein}";

    /// <summary>
    /// Literal for code: PicomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralPicomolePerHourPerMilliliter = "pmol/h/mL";

    /// <summary>
    /// Literal for code: PicomolePerLiter
    /// </summary>
    public const string LiteralPicomolePerLiter = "pmol/L";

    /// <summary>
    /// Literal for code: PicomolePerMilligramOfProtein
    /// </summary>
    public const string LiteralPicomolePerMilligramOfProtein = "pmol/mg{protein}";

    /// <summary>
    /// Literal for code: PicomolePerMinute
    /// </summary>
    public const string LiteralPicomolePerMinute = "pmol/min";

    /// <summary>
    /// Literal for code: PicomolePerMinutePerMilligramOfProtein
    /// </summary>
    public const string LiteralPicomolePerMinutePerMilligramOfProtein = "pmol/min/mg{protein}";

    /// <summary>
    /// Literal for code: PicomolePerMilliliter
    /// </summary>
    public const string LiteralPicomolePerMilliliter = "pmol/mL";

    /// <summary>
    /// Literal for code: PicomolePerMillimole
    /// </summary>
    public const string LiteralPicomolePerMillimole = "pmol/mmol";

    /// <summary>
    /// Literal for code: PicomolePerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralPicomolePerMillimoleOfCreatinine = "pmol/mmol{creat}";

    /// <summary>
    /// Literal for code: PicomolePerMole
    /// </summary>
    public const string LiteralPicomolePerMole = "pmol/mol";

    /// <summary>
    /// Literal for code: PicomolePerMicromole
    /// </summary>
    public const string LiteralPicomolePerMicromole = "pmol/umol";

    /// <summary>
    /// Literal for code: PicomolePerMicromoleOfCreatinine
    /// </summary>
    public const string LiteralPicomolePerMicromoleOfCreatinine = "pmol/umol{creat}";

    /// <summary>
    /// Literal for code: Picosecond
    /// </summary>
    public const string LiteralPicosecond = "ps";

    /// <summary>
    /// Literal for code: Picotesla
    /// </summary>
    public const string LiteralPicotesla = "pT";

    /// <summary>
    /// Literal for code: Roentgen
    /// </summary>
    public const string LiteralRoentgen = "R";

    /// <summary>
    /// Literal for code: Radian
    /// </summary>
    public const string LiteralRadian = "rad";

    /// <summary>
    /// Literal for code: RadiationAbsorbedDose
    /// </summary>
    public const string LiteralRadiationAbsorbedDose = "RAD";

    /// <summary>
    /// Literal for code: RadiationEquivalentMan
    /// </summary>
    public const string LiteralRadiationEquivalentMan = "REM";

    /// <summary>
    /// Literal for code: Second_2
    /// </summary>
    public const string LiteralSecond_2 = "s";

    /// <summary>
    /// Literal for code: Siemens
    /// </summary>
    public const string LiteralSiemens = "S";

    /// <summary>
    /// Literal for code: SecondPerControl
    /// </summary>
    public const string LiteralSecondPerControl = "s/{control}";

    /// <summary>
    /// Literal for code: Stilb
    /// </summary>
    public const string LiteralStilb = "sb";

    /// <summary>
    /// Literal for code: Spere
    /// </summary>
    public const string LiteralSpere = "sph";

    /// <summary>
    /// Literal for code: Steradian
    /// </summary>
    public const string LiteralSteradian = "sr";

    /// <summary>
    /// Literal for code: Stere
    /// </summary>
    public const string LiteralStere = "st";

    /// <summary>
    /// Literal for code: Stokes
    /// </summary>
    public const string LiteralStokes = "St";

    /// <summary>
    /// Literal for code: Sievert
    /// </summary>
    public const string LiteralSievert = "Sv";

    /// <summary>
    /// Literal for code: Tonne
    /// </summary>
    public const string LiteralTonne = "t";

    /// <summary>
    /// Literal for code: Tesla
    /// </summary>
    public const string LiteralTesla = "T";

    /// <summary>
    /// Literal for code: UnifiedAtomicMassUnit
    /// </summary>
    public const string LiteralUnifiedAtomicMassUnit = "u";

    /// <summary>
    /// Literal for code: EnzymeUnit
    /// </summary>
    public const string LiteralEnzymeUnit = "U";

    /// <summary>
    /// Literal for code: EnzymeUnitPer1Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer1Hour = "U/(1.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10GramOfFeces
    /// </summary>
    public const string LiteralEnzymeUnitPer10GramOfFeces = "U/(10.g){feces}";

    /// <summary>
    /// Literal for code: EnzymeUnitPer12Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer12Hour = "U/(12.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer18Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer18Hour = "U/(18.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer2Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer2Hour = "U/(2.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer24Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer24Hour = "U/(24.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10
    /// </summary>
    public const string LiteralEnzymeUnitPer10 = "U/10";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10Billion
    /// </summary>
    public const string LiteralEnzymeUnitPer10Billion = "U/10*10";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10BillionCells
    /// </summary>
    public const string LiteralEnzymeUnitPer10BillionCells = "U/10*10{cells}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerTrillion
    /// </summary>
    public const string LiteralEnzymeUnitPerTrillion = "U/10*12";

    /// <summary>
    /// Literal for code: EnzymeUnitPerTrillionRedBloodCells
    /// </summary>
    public const string LiteralEnzymeUnitPerTrillionRedBloodCells = "U/10*12{RBCs}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMillion
    /// </summary>
    public const string LiteralEnzymeUnitPerMillion = "U/10*6";

    /// <summary>
    /// Literal for code: EnzymeUnitPerBillion
    /// </summary>
    public const string LiteralEnzymeUnitPerBillion = "U/10*9";

    /// <summary>
    /// Literal for code: EnzymeUnitPerDay
    /// </summary>
    public const string LiteralEnzymeUnitPerDay = "U/d";

    /// <summary>
    /// Literal for code: EnzymeUnitPerDeciliter
    /// </summary>
    public const string LiteralEnzymeUnitPerDeciliter = "U/dL";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGram
    /// </summary>
    public const string LiteralEnzymeUnitPerGram = "U/g";

    /// <summary>
    /// Literal for code: UnitGramCre
    /// </summary>
    public const string LiteralUnitGramCre = "U/g{Cre}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGramOfCreatinine
    /// </summary>
    public const string LiteralEnzymeUnitPerGramOfCreatinine = "U/g{creat}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGramOfHemoglobin
    /// </summary>
    public const string LiteralEnzymeUnitPerGramOfHemoglobin = "U/g{Hb}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGramOfHemoglobin_2
    /// </summary>
    public const string LiteralEnzymeUnitPerGramOfHemoglobin_2 = "U/g{hemoglobin}";

    /// <summary>
    /// Literal for code: UnitsPerGramHemoglobin
    /// </summary>
    public const string LiteralUnitsPerGramHemoglobin = "U/g{Hgb}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGramOfProtein
    /// </summary>
    public const string LiteralEnzymeUnitPerGramOfProtein = "U/g{protein}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerHour
    /// </summary>
    public const string LiteralEnzymeUnitPerHour = "U/h";

    /// <summary>
    /// Literal for code: UnitKilogramHour
    /// </summary>
    public const string LiteralUnitKilogramHour = "U/kg/h";

    /// <summary>
    /// Literal for code: EnzymeUnitPerKilogramOfHemoglobin
    /// </summary>
    public const string LiteralEnzymeUnitPerKilogramOfHemoglobin = "U/kg{Hb}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerKilogramOfHemoglobin_2
    /// </summary>
    public const string LiteralEnzymeUnitPerKilogramOfHemoglobin_2 = "U/kg{hemoglobin}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerLiter
    /// </summary>
    public const string LiteralEnzymeUnitPerLiter = "U/L";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMinute
    /// </summary>
    public const string LiteralEnzymeUnitPerMinute = "U/min";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralEnzymeUnitPerMilliliter = "U/mL";

    /// <summary>
    /// Literal for code: UnitMilliliterRBC
    /// </summary>
    public const string LiteralUnitMilliliterRBC = "U/mL{RBC}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMilliliterOfRedBloodCells
    /// </summary>
    public const string LiteralEnzymeUnitPerMilliliterOfRedBloodCells = "U/mL{RBCs}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralEnzymeUnitPerMillimoleOfCreatinine = "U/mmol{creat}";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMole
    /// </summary>
    public const string LiteralEnzymeUnitPerMole = "U/mol";

    /// <summary>
    /// Literal for code: EnzymeUnitPerSecond
    /// </summary>
    public const string LiteralEnzymeUnitPerSecond = "U/s";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMicromole
    /// </summary>
    public const string LiteralEnzymeUnitPerMicromole = "U/umol";

    /// <summary>
    /// Literal for code: MicroInternationalUnit
    /// </summary>
    public const string LiteralMicroInternationalUnit = "u[IU]";

    /// <summary>
    /// Literal for code: MicrointernationalUnitPerLiter
    /// </summary>
    public const string LiteralMicrointernationalUnitPerLiter = "u[IU]/L";

    /// <summary>
    /// Literal for code: MicroInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralMicroInternationalUnitPerMilliliter = "u[IU]/mL";

    /// <summary>
    /// Literal for code: EnzymeUnitPerLiterAt25DegCelsius
    /// </summary>
    public const string LiteralEnzymeUnitPerLiterAt25DegCelsius = "U{25Cel}/L";

    /// <summary>
    /// Literal for code: EnzymeUnitPerLiterAt37DegCelsius
    /// </summary>
    public const string LiteralEnzymeUnitPerLiterAt37DegCelsius = "U{37Cel}/L";

    /// <summary>
    /// Literal for code: GUnit
    /// </summary>
    public const string LiteralGUnit = "U{G}";

    /// <summary>
    /// Literal for code: MICROCURIE
    /// </summary>
    public const string LiteralMICROCURIE = "uCi";

    /// <summary>
    /// Literal for code: Microequivalents
    /// </summary>
    public const string LiteralMicroequivalents = "ueq";

    /// <summary>
    /// Literal for code: MicroequivalentPerLiter
    /// </summary>
    public const string LiteralMicroequivalentPerLiter = "ueq/L";

    /// <summary>
    /// Literal for code: MicroequivalentPerMilliliter
    /// </summary>
    public const string LiteralMicroequivalentPerMilliliter = "ueq/mL";

    /// <summary>
    /// Literal for code: Microgram
    /// </summary>
    public const string LiteralMicrogram = "ug";

    /// <summary>
    /// Literal for code: MicrogramPer100Gram
    /// </summary>
    public const string LiteralMicrogramPer100Gram = "ug/(100.g)";

    /// <summary>
    /// Literal for code: MicrogramPer24Hour
    /// </summary>
    public const string LiteralMicrogramPer24Hour = "ug/(24.h)";

    /// <summary>
    /// Literal for code: MicrogramPer8Hour
    /// </summary>
    public const string LiteralMicrogramPer8Hour = "ug/(8.h)";

    /// <summary>
    /// Literal for code: MicrogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralMicrogramKilogramAsteriskDay = "ug/(kg.d)";

    /// <summary>
    /// Literal for code: MicrogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralMicrogramKilogramAsteriskHour = "ug/(kg.h)";

    /// <summary>
    /// Literal for code: MicrogramPerSquareFootInternational
    /// </summary>
    public const string LiteralMicrogramPerSquareFootInternational = "ug/[sft_i]";

    /// <summary>
    /// Literal for code: MicrogramPerSpecimen
    /// </summary>
    public const string LiteralMicrogramPerSpecimen = "ug/{specimen}";

    /// <summary>
    /// Literal for code: MicrogramSpecimen
    /// </summary>
    public const string LiteralMicrogramSpecimen = "ug/{Specimen}";

    /// <summary>
    /// Literal for code: MicroGramsPerTotalVolume
    /// </summary>
    public const string LiteralMicroGramsPerTotalVolume = "ug/{TotalVolume}";

    /// <summary>
    /// Literal for code: MicrogramPerDay
    /// </summary>
    public const string LiteralMicrogramPerDay = "ug/d";

    /// <summary>
    /// Literal for code: MicrogramPerDeciliter
    /// </summary>
    public const string LiteralMicrogramPerDeciliter = "ug/dL";

    /// <summary>
    /// Literal for code: MicrogramDeciliterRbc
    /// </summary>
    public const string LiteralMicrogramDeciliterRbc = "ug/dL{rbc}";

    /// <summary>
    /// Literal for code: MicrogramPerDeciliterOfRedBloodCells
    /// </summary>
    public const string LiteralMicrogramPerDeciliterOfRedBloodCells = "ug/dL{RBCs}";

    /// <summary>
    /// Literal for code: MicrogramPerGram
    /// </summary>
    public const string LiteralMicrogramPerGram = "ug/g";

    /// <summary>
    /// Literal for code: MicrogramGramCre
    /// </summary>
    public const string LiteralMicrogramGramCre = "ug/g{Cre}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfCreatinine
    /// </summary>
    public const string LiteralMicrogramPerGramOfCreatinine = "ug/g{creat}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfDryTissue
    /// </summary>
    public const string LiteralMicrogramPerGramOfDryTissue = "ug/g{dry_tissue}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfDryWeight
    /// </summary>
    public const string LiteralMicrogramPerGramOfDryWeight = "ug/g{dry_wt}";

    /// <summary>
    /// Literal for code: MicrogramGramDryWeight
    /// </summary>
    public const string LiteralMicrogramGramDryWeight = "ug/g{DryWeight}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfFeces
    /// </summary>
    public const string LiteralMicrogramPerGramOfFeces = "ug/g{feces}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfHair
    /// </summary>
    public const string LiteralMicrogramPerGramOfHair = "ug/g{hair}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfHemoglobin
    /// </summary>
    public const string LiteralMicrogramPerGramOfHemoglobin = "ug/g{Hb}";

    /// <summary>
    /// Literal for code: MicrogramGramHgb
    /// </summary>
    public const string LiteralMicrogramGramHgb = "ug/g{Hgb}";

    /// <summary>
    /// Literal for code: MicrogramPerGramOfTissue
    /// </summary>
    public const string LiteralMicrogramPerGramOfTissue = "ug/g{tissue}";

    /// <summary>
    /// Literal for code: MicrogramGramTissue
    /// </summary>
    public const string LiteralMicrogramGramTissue = "ug/g{Tissue}";

    /// <summary>
    /// Literal for code: MicrogramPerHour
    /// </summary>
    public const string LiteralMicrogramPerHour = "ug/h";

    /// <summary>
    /// Literal for code: MicrogramPerKilogram
    /// </summary>
    public const string LiteralMicrogramPerKilogram = "ug/kg";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMicrogramPerKilogramPer8Hour = "ug/kg/(8.h)";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerDay
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerDay = "ug/kg/d";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerHour
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerHour = "ug/kg/h";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerMinute = "ug/kg/min";

    /// <summary>
    /// Literal for code: MicrogramPerLiter
    /// </summary>
    public const string LiteralMicrogramPerLiter = "ug/L";

    /// <summary>
    /// Literal for code: MicrogramPerLiterPer24Hour
    /// </summary>
    public const string LiteralMicrogramPerLiterPer24Hour = "ug/L/(24.h)";

    /// <summary>
    /// Literal for code: MicrogramLiterDDU
    /// </summary>
    public const string LiteralMicrogramLiterDDU = "ug/L{DDU}";

    /// <summary>
    /// Literal for code: MicrogramPerLiterOfRedBloodCells
    /// </summary>
    public const string LiteralMicrogramPerLiterOfRedBloodCells = "ug/L{RBCs}";

    /// <summary>
    /// Literal for code: MicrogramPerSquareMeter
    /// </summary>
    public const string LiteralMicrogramPerSquareMeter = "ug/m2";

    /// <summary>
    /// Literal for code: MicrogramPerCubicMeter
    /// </summary>
    public const string LiteralMicrogramPerCubicMeter = "ug/m3";

    /// <summary>
    /// Literal for code: MicrogramPerMilligram
    /// </summary>
    public const string LiteralMicrogramPerMilligram = "ug/mg";

    /// <summary>
    /// Literal for code: MicrogramMilligramCre
    /// </summary>
    public const string LiteralMicrogramMilligramCre = "ug/mg{Cre}";

    /// <summary>
    /// Literal for code: MicrogramPerMilligramOfCreatinine
    /// </summary>
    public const string LiteralMicrogramPerMilligramOfCreatinine = "ug/mg{creat}";

    /// <summary>
    /// Literal for code: MicrogramPerMinute
    /// </summary>
    public const string LiteralMicrogramPerMinute = "ug/min";

    /// <summary>
    /// Literal for code: MicrogramPerMilliliter
    /// </summary>
    public const string LiteralMicrogramPerMilliliter = "ug/mL";

    /// <summary>
    /// Literal for code: MicrogramPerMilliliterClass
    /// </summary>
    public const string LiteralMicrogramPerMilliliterClass = "ug/mL{class}";

    /// <summary>
    /// Literal for code: MicrogramPerMilliliterEquivalent
    /// </summary>
    public const string LiteralMicrogramPerMilliliterEquivalent = "ug/mL{eqv}";

    /// <summary>
    /// Literal for code: MicrogramMilliliterFEU
    /// </summary>
    public const string LiteralMicrogramMilliliterFEU = "ug/mL{FEU}";

    /// <summary>
    /// Literal for code: MicrogramPerMillimole
    /// </summary>
    public const string LiteralMicrogramPerMillimole = "ug/mmol";

    /// <summary>
    /// Literal for code: MicrogramPerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralMicrogramPerMillimoleOfCreatinine = "ug/mmol{creat}";

    /// <summary>
    /// Literal for code: MicrogramPerNanogram
    /// </summary>
    public const string LiteralMicrogramPerNanogram = "ug/ng";

    /// <summary>
    /// Literal for code: MicrogramFibrinogenEquivalentUnitPerMilliliter
    /// </summary>
    public const string LiteralMicrogramFibrinogenEquivalentUnitPerMilliliter = "ug{FEU}/mL";

    /// <summary>
    /// Literal for code: MicrogramT4Deciliter
    /// </summary>
    public const string LiteralMicrogramT4Deciliter = "ug{T4}/dL";

    /// <summary>
    /// Literal for code: Microkatal
    /// </summary>
    public const string LiteralMicrokatal = "ukat";

    /// <summary>
    /// Literal for code: Microliter
    /// </summary>
    public const string LiteralMicroliter = "uL";

    /// <summary>
    /// Literal for code: MicroliterPer2Hour
    /// </summary>
    public const string LiteralMicroliterPer2Hour = "uL/(2.h)";

    /// <summary>
    /// Literal for code: MicroliterPerHour
    /// </summary>
    public const string LiteralMicroliterPerHour = "uL/h";

    /// <summary>
    /// Literal for code: Micrometer
    /// </summary>
    public const string LiteralMicrometer = "um";

    /// <summary>
    /// Literal for code: MicrometerPerSecond
    /// </summary>
    public const string LiteralMicrometerPerSecond = "um/s";

    /// <summary>
    /// Literal for code: Micromole
    /// </summary>
    public const string LiteralMicromole = "umol";

    /// <summary>
    /// Literal for code: MicromolePer2Hour
    /// </summary>
    public const string LiteralMicromolePer2Hour = "umol/(2.h)";

    /// <summary>
    /// Literal for code: MicromolePer24Hour
    /// </summary>
    public const string LiteralMicromolePer24Hour = "umol/(24.h)";

    /// <summary>
    /// Literal for code: MicromolePer8Hour
    /// </summary>
    public const string LiteralMicromolePer8Hour = "umol/(8.h)";

    /// <summary>
    /// Literal for code: MicromolePerDay
    /// </summary>
    public const string LiteralMicromolePerDay = "umol/d";

    /// <summary>
    /// Literal for code: MicromolePerDeciliter
    /// </summary>
    public const string LiteralMicromolePerDeciliter = "umol/dL";

    /// <summary>
    /// Literal for code: MicromolePerDeciliterOfGlomerularFiltrate
    /// </summary>
    public const string LiteralMicromolePerDeciliterOfGlomerularFiltrate = "umol/dL{GF}";

    /// <summary>
    /// Literal for code: MicromolePerGram
    /// </summary>
    public const string LiteralMicromolePerGram = "umol/g";

    /// <summary>
    /// Literal for code: MicromoleGramCre
    /// </summary>
    public const string LiteralMicromoleGramCre = "umol/g{Cre}";

    /// <summary>
    /// Literal for code: MicromolePerGramOfCreatinine
    /// </summary>
    public const string LiteralMicromolePerGramOfCreatinine = "umol/g{creat}";

    /// <summary>
    /// Literal for code: MicromolePerGramOfHemoglobin
    /// </summary>
    public const string LiteralMicromolePerGramOfHemoglobin = "umol/g{Hb}";

    /// <summary>
    /// Literal for code: MicromolePerGramOfHemoglobin_2
    /// </summary>
    public const string LiteralMicromolePerGramOfHemoglobin_2 = "umol/g{hemoglobin}";

    /// <summary>
    /// Literal for code: MicromoleGramHgb
    /// </summary>
    public const string LiteralMicromoleGramHgb = "umol/g{Hgb}";

    /// <summary>
    /// Literal for code: MicromolePerHour
    /// </summary>
    public const string LiteralMicromolePerHour = "umol/h";

    /// <summary>
    /// Literal for code: MicromoleHourGram
    /// </summary>
    public const string LiteralMicromoleHourGram = "umol/h/g";

    /// <summary>
    /// Literal for code: MicromolePerHourPerLiter
    /// </summary>
    public const string LiteralMicromolePerHourPerLiter = "umol/h/L";

    /// <summary>
    /// Literal for code: MicromolePerHourPerMilligramOfProtein
    /// </summary>
    public const string LiteralMicromolePerHourPerMilligramOfProtein = "umol/h/mg{protein}";

    /// <summary>
    /// Literal for code: MicromolePerKilogram
    /// </summary>
    public const string LiteralMicromolePerKilogram = "umol/kg";

    /// <summary>
    /// Literal for code: MicromolePerKilogramOfFeces
    /// </summary>
    public const string LiteralMicromolePerKilogramOfFeces = "umol/kg{feces}";

    /// <summary>
    /// Literal for code: MicromolePerLiter
    /// </summary>
    public const string LiteralMicromolePerLiter = "umol/L";

    /// <summary>
    /// Literal for code: MicromolePerLiterPerHour
    /// </summary>
    public const string LiteralMicromolePerLiterPerHour = "umol/L/h";

    /// <summary>
    /// Literal for code: MicromolePerLiterOfRedBloodCells
    /// </summary>
    public const string LiteralMicromolePerLiterOfRedBloodCells = "umol/L{rbc}";

    /// <summary>
    /// Literal for code: MicromolePerLiterOfRedBloodCells_2
    /// </summary>
    public const string LiteralMicromolePerLiterOfRedBloodCells_2 = "umol/L{RBCs}";

    /// <summary>
    /// Literal for code: MicromoleMeter
    /// </summary>
    public const string LiteralMicromoleMeter = "umol/m";

    /// <summary>
    /// Literal for code: MicromolePerMilligram
    /// </summary>
    public const string LiteralMicromolePerMilligram = "umol/mg";

    /// <summary>
    /// Literal for code: MicromoleMilligramCre
    /// </summary>
    public const string LiteralMicromoleMilligramCre = "umol/mg{Cre}";

    /// <summary>
    /// Literal for code: MicromolePerMilligramOfCreatinine
    /// </summary>
    public const string LiteralMicromolePerMilligramOfCreatinine = "umol/mg{creat}";

    /// <summary>
    /// Literal for code: MicromolePerMinute
    /// </summary>
    public const string LiteralMicromolePerMinute = "umol/min";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerGram
    /// </summary>
    public const string LiteralMicromolePerMinutePerGram = "umol/min/g";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerGramOfMucosa
    /// </summary>
    public const string LiteralMicromolePerMinutePerGramOfMucosa = "umol/min/g{mucosa}";

    /// <summary>
    /// Literal for code: MicromoleMinuteGramProt
    /// </summary>
    public const string LiteralMicromoleMinuteGramProt = "umol/min/g{prot}";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerGramOfProtein
    /// </summary>
    public const string LiteralMicromolePerMinutePerGramOfProtein = "umol/min/g{protein}";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerLiter
    /// </summary>
    public const string LiteralMicromolePerMinutePerLiter = "umol/min/L";

    /// <summary>
    /// Literal for code: MicromolePerMilliliter
    /// </summary>
    public const string LiteralMicromolePerMilliliter = "umol/mL";

    /// <summary>
    /// Literal for code: MicromolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralMicromolePerMilliliterPerMinute = "umol/mL/min";

    /// <summary>
    /// Literal for code: MicromolePerMillimole
    /// </summary>
    public const string LiteralMicromolePerMillimole = "umol/mmol";

    /// <summary>
    /// Literal for code: MicromolePerMillimoleOfCreatinine
    /// </summary>
    public const string LiteralMicromolePerMillimoleOfCreatinine = "umol/mmol{creat}";

    /// <summary>
    /// Literal for code: MicromolePerMole
    /// </summary>
    public const string LiteralMicromolePerMole = "umol/mol";

    /// <summary>
    /// Literal for code: MicromoleMoleCre
    /// </summary>
    public const string LiteralMicromoleMoleCre = "umol/mol{Cre}";

    /// <summary>
    /// Literal for code: MicromolePerMoleOfCreatinine
    /// </summary>
    public const string LiteralMicromolePerMoleOfCreatinine = "umol/mol{creat}";

    /// <summary>
    /// Literal for code: MicromolePerMoleOfHemoglobin
    /// </summary>
    public const string LiteralMicromolePerMoleOfHemoglobin = "umol/mol{Hb}";

    /// <summary>
    /// Literal for code: MicromolePerMicromole
    /// </summary>
    public const string LiteralMicromolePerMicromole = "umol/umol";

    /// <summary>
    /// Literal for code: MicromolePerMicromoleOfCreatinine
    /// </summary>
    public const string LiteralMicromolePerMicromoleOfCreatinine = "umol/umol{creat}";

    /// <summary>
    /// Literal for code: MicromoleBoneCollagenEquivalentPerMole
    /// </summary>
    public const string LiteralMicromoleBoneCollagenEquivalentPerMole = "umol{BCE}/mol";

    /// <summary>
    /// Literal for code: MicroOhm
    /// </summary>
    public const string LiteralMicroOhm = "uOhm";

    /// <summary>
    /// Literal for code: Microsecond
    /// </summary>
    public const string LiteralMicrosecond = "us";

    /// <summary>
    /// Literal for code: MicroUnit
    /// </summary>
    public const string LiteralMicroUnit = "uU";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerGram
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerGram = "uU/g";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerLiter
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerLiter = "uU/L";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerMilliliter = "uU/mL";

    /// <summary>
    /// Literal for code: Microvolt
    /// </summary>
    public const string LiteralMicrovolt = "uV";

    /// <summary>
    /// Literal for code: Volt
    /// </summary>
    public const string LiteralVolt = "V";

    /// <summary>
    /// Literal for code: Watt
    /// </summary>
    public const string LiteralWatt = "W";

    /// <summary>
    /// Literal for code: Weber
    /// </summary>
    public const string LiteralWeber = "Wb";

    /// <summary>
    /// Literal for code: Week
    /// </summary>
    public const string LiteralWeek = "wk";
  };
}
