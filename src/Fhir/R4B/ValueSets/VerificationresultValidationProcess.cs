// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// The primary process by which the target is validated
  /// </summary>
  public static class VerificationresultValidationProcessCodes
  {
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding EditCheck = new Coding
    {
      Code = "edit-check",
      Display = "edit check",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding InContext = new Coding
    {
      Code = "in-context",
      Display = "in context",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding MultipleSources = new Coding
    {
      Code = "multi",
      Display = "multiple sources",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding PrimarySource = new Coding
    {
      Code = "primary",
      Display = "primary source",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Standalone = new Coding
    {
      Code = "standalone",
      Display = "standalone",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ValueSet = new Coding
    {
      Code = "valueset",
      Display = "value set",
      System = "http://terminology.hl7.org/CodeSystem/validation-process"
    };

    /// <summary>
    /// Literal for code: EditCheck
    /// </summary>
    public const string LiteralEditCheck = "edit-check";

    /// <summary>
    /// Literal for code: InContext
    /// </summary>
    public const string LiteralInContext = "in-context";

    /// <summary>
    /// Literal for code: MultipleSources
    /// </summary>
    public const string LiteralMultipleSources = "multi";

    /// <summary>
    /// Literal for code: PrimarySource
    /// </summary>
    public const string LiteralPrimarySource = "primary";

    /// <summary>
    /// Literal for code: Standalone
    /// </summary>
    public const string LiteralStandalone = "standalone";

    /// <summary>
    /// Literal for code: ValueSet
    /// </summary>
    public const string LiteralValueSet = "valueset";
  };
}
