// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// The master set of status codes used throughout FHIR. All status codes are mapped to one of these codes.
  /// </summary>
  public static class ResourceStatusCodes
  {
    /// <summary>
    /// The process described/requested in the resource did not complete - usually due to some workflow error, and no further action is planned
    /// </summary>
    public static readonly Coding Abandoned = new Coding
    {
      Code = "abandoned",
      Display = "abandoned",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The fulfiller has decided to perform the action, and plans are in train to do this in the future
    /// </summary>
    public static readonly Coding Accepted = new Coding
    {
      Code = "accepted",
      Display = "accepted",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The resource describes information that is currently valid or a process that is presently occuring
    /// </summary>
    public static readonly Coding Active = new Coding
    {
      Code = "active",
      Display = "active",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Ahead of the planned timelines
    /// </summary>
    public static readonly Coding AheadOfTarget = new Coding
    {
      Code = "ahead-of-target",
      Display = "ahead-of-target",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The pre-conditions for the action are all fulfilled, and it is imminent
    /// </summary>
    public static readonly Coding Arrived = new Coding
    {
      Code = "arrived",
      Display = "arrived",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding BehindTarget = new Coding
    {
      Code = "behind-target",
      Display = "behind-target",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// not available at this time/location
    /// </summary>
    public static readonly Coding BusyUnavailable = new Coding
    {
      Code = "busy-unavailable",
      Display = "busy-unavailable",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The process described/requested in the resource has been completed, and no further action is planned
    /// </summary>
    public static readonly Coding Complete = new Coding
    {
      Code = "complete",
      Display = "complete",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The information in this resource is approved
    /// </summary>
    public static readonly Coding Confirmed = new Coding
    {
      Code = "confirmed",
      Display = "confirmed",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The fulfiller chose not to perform the action
    /// </summary>
    public static readonly Coding Declined = new Coding
    {
      Code = "declined",
      Display = "declined",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Potentially true?
    /// </summary>
    public static readonly Coding Differential = new Coding
    {
      Code = "differential",
      Display = "differential",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The information in the resource is still being prepared and edited
    /// </summary>
    public static readonly Coding Draft = new Coding
    {
      Code = "draft",
      Display = "draft",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The resource was created in error, and should not be treated as valid (note: in many cases, for various data integrity related reasons, the information cannot be removed from the record)
    /// </summary>
    public static readonly Coding Error = new Coding
    {
      Code = "error",
      Display = "error",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The process described/requested in the resource could not be completed, and no further action is planned
    /// </summary>
    public static readonly Coding Failed = new Coding
    {
      Code = "failed",
      Display = "failed",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Free for scheduling
    /// </summary>
    public static readonly Coding Free = new Coding
    {
      Code = "free",
      Display = "free",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The hardware is disconnected
    /// </summary>
    public static readonly Coding HwDiscon = new Coding
    {
      Code = "hw-discon",
      Display = "hw-discon",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The resource describes information that is no longer valid or a process that is stopped occurring
    /// </summary>
    public static readonly Coding Inactive = new Coding
    {
      Code = "inactive",
      Display = "inactive",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Behind the planned timelines
    /// </summary>
    public static readonly Coding NotReady = new Coding
    {
      Code = "not-ready",
      Display = "not-ready",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Ready to act
    /// </summary>
    public static readonly Coding OnTarget = new Coding
    {
      Code = "on-target",
      Display = "on-target",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// This information is still being assembled
    /// </summary>
    public static readonly Coding Partial = new Coding
    {
      Code = "partial",
      Display = "partial",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The resource describes a course of action that is planned and agreed/approved, but at the time of recording was still future
    /// </summary>
    public static readonly Coding Planned = new Coding
    {
      Code = "planned",
      Display = "planned",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The resource describes an action or plan that is proposed, and not yet approved by the participants
    /// </summary>
    public static readonly Coding Proposed = new Coding
    {
      Code = "proposed",
      Display = "proposed",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The fulfiller has received the request, but not yet agreed to carry out the action
    /// </summary>
    public static readonly Coding Received = new Coding
    {
      Code = "received",
      Display = "received",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// This information has been ruled out by testing and evaluation
    /// </summary>
    public static readonly Coding Refuted = new Coding
    {
      Code = "refuted",
      Display = "refuted",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The information in this resource has been replaced by information in another resource
    /// </summary>
    public static readonly Coding Replaced = new Coding
    {
      Code = "replaced",
      Display = "replaced",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// A fulfiller has been asked to perform this action, but it has not yet occurred
    /// </summary>
    public static readonly Coding Requested = new Coding
    {
      Code = "requested",
      Display = "requested",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The issue identified by this resource is no longer of concern
    /// </summary>
    public static readonly Coding Resolved = new Coding
    {
      Code = "resolved",
      Display = "resolved",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The process described/requested in this resource has been halted for some reason
    /// </summary>
    public static readonly Coding Suspended = new Coding
    {
      Code = "suspended",
      Display = "suspended",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The device transducer is disconnected
    /// </summary>
    public static readonly Coding TransducDiscon = new Coding
    {
      Code = "transduc-discon",
      Display = "transduc-discon",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// The information in this resource is not yet approved
    /// </summary>
    public static readonly Coding Unconfirmed = new Coding
    {
      Code = "unconfirmed",
      Display = "unconfirmed",
      System = "http://hl7.org/fhir/resource-status"
    };
    /// <summary>
    /// Authoring system does not know the status
    /// </summary>
    public static readonly Coding Unknown = new Coding
    {
      Code = "unknown",
      Display = "unknown",
      System = "http://hl7.org/fhir/resource-status"
    };

    /// <summary>
    /// Literal for code: Abandoned
    /// </summary>
    public const string LiteralAbandoned = "abandoned";

    /// <summary>
    /// Literal for code: Accepted
    /// </summary>
    public const string LiteralAccepted = "accepted";

    /// <summary>
    /// Literal for code: Active
    /// </summary>
    public const string LiteralActive = "active";

    /// <summary>
    /// Literal for code: AheadOfTarget
    /// </summary>
    public const string LiteralAheadOfTarget = "ahead-of-target";

    /// <summary>
    /// Literal for code: Arrived
    /// </summary>
    public const string LiteralArrived = "arrived";

    /// <summary>
    /// Literal for code: BehindTarget
    /// </summary>
    public const string LiteralBehindTarget = "behind-target";

    /// <summary>
    /// Literal for code: BusyUnavailable
    /// </summary>
    public const string LiteralBusyUnavailable = "busy-unavailable";

    /// <summary>
    /// Literal for code: Complete
    /// </summary>
    public const string LiteralComplete = "complete";

    /// <summary>
    /// Literal for code: Confirmed
    /// </summary>
    public const string LiteralConfirmed = "confirmed";

    /// <summary>
    /// Literal for code: Declined
    /// </summary>
    public const string LiteralDeclined = "declined";

    /// <summary>
    /// Literal for code: Differential
    /// </summary>
    public const string LiteralDifferential = "differential";

    /// <summary>
    /// Literal for code: Draft
    /// </summary>
    public const string LiteralDraft = "draft";

    /// <summary>
    /// Literal for code: Error
    /// </summary>
    public const string LiteralError = "error";

    /// <summary>
    /// Literal for code: Failed
    /// </summary>
    public const string LiteralFailed = "failed";

    /// <summary>
    /// Literal for code: Free
    /// </summary>
    public const string LiteralFree = "free";

    /// <summary>
    /// Literal for code: HwDiscon
    /// </summary>
    public const string LiteralHwDiscon = "hw-discon";

    /// <summary>
    /// Literal for code: Inactive
    /// </summary>
    public const string LiteralInactive = "inactive";

    /// <summary>
    /// Literal for code: NotReady
    /// </summary>
    public const string LiteralNotReady = "not-ready";

    /// <summary>
    /// Literal for code: OnTarget
    /// </summary>
    public const string LiteralOnTarget = "on-target";

    /// <summary>
    /// Literal for code: Partial
    /// </summary>
    public const string LiteralPartial = "partial";

    /// <summary>
    /// Literal for code: Planned
    /// </summary>
    public const string LiteralPlanned = "planned";

    /// <summary>
    /// Literal for code: Proposed
    /// </summary>
    public const string LiteralProposed = "proposed";

    /// <summary>
    /// Literal for code: Received
    /// </summary>
    public const string LiteralReceived = "received";

    /// <summary>
    /// Literal for code: Refuted
    /// </summary>
    public const string LiteralRefuted = "refuted";

    /// <summary>
    /// Literal for code: Replaced
    /// </summary>
    public const string LiteralReplaced = "replaced";

    /// <summary>
    /// Literal for code: Requested
    /// </summary>
    public const string LiteralRequested = "requested";

    /// <summary>
    /// Literal for code: Resolved
    /// </summary>
    public const string LiteralResolved = "resolved";

    /// <summary>
    /// Literal for code: Suspended
    /// </summary>
    public const string LiteralSuspended = "suspended";

    /// <summary>
    /// Literal for code: TransducDiscon
    /// </summary>
    public const string LiteralTransducDiscon = "transduc-discon";

    /// <summary>
    /// Literal for code: Unconfirmed
    /// </summary>
    public const string LiteralUnconfirmed = "unconfirmed";

    /// <summary>
    /// Literal for code: Unknown
    /// </summary>
    public const string LiteralUnknown = "unknown";
  };
}
