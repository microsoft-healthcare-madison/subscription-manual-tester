// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// Statistic Model Code.
  /// </summary>
  public static class StatisticModelCodeCodes
  {
    /// <summary>
    /// Used for adjusted analysis, paired with variable element(s).
    /// </summary>
    public static readonly Coding AdjustedAnalysis = new Coding
    {
      Code = "adjusted",
      Display = "Adjusted analysis",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for ANOVA method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding ANOVAANalysisOfVAriance = new Coding
    {
      Code = "anova",
      Display = "ANOVA (ANalysis Of VAriance)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for one-way ANOVA method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding OneWayANOVA = new Coding
    {
      Code = "anovaOneWay",
      Display = "one-way ANOVA",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for 3-way ANOVA method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding VAL3WayANOVA = new Coding
    {
      Code = "anovaThreeWay",
      Display = "3-way ANOVA",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for 2-way ANOVA without replication method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding VAL2WayANOVAWithoutReplication = new Coding
    {
      Code = "anovaTwoWay",
      Display = "2-way ANOVA without replication",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for 2-way ANOVA with replication method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding VAL2WayANOVAWithReplication = new Coding
    {
      Code = "anovaTwoWayReplication",
      Display = "2-way ANOVA with replication",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Binomial Distribution for Regression, no additional elements needed.
    /// </summary>
    public static readonly Coding BinomialDistributionForRegression = new Coding
    {
      Code = "binomialDistributionRegression",
      Display = "Binomial Distribution for Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Chi-square test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding ChiSquareTest = new Coding
    {
      Code = "chiSquareTest",
      Display = "Chi-square test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Chi-square test for homogeneity, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding ChiSquareTestForHomogeneity = new Coding
    {
      Code = "chiSquareTestHomogeneity",
      Display = "Chi-square test for homogeneity",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Chi-square test for trend, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding ChiSquareTestForTrend = new Coding
    {
      Code = "chiSquareTestTrend",
      Display = "Chi-square test for trend",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Cox proportional hazards method of analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding CoxProportionalHazards = new Coding
    {
      Code = "coxProportionalHazards",
      Display = "Cox Proportional Hazards",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Dersimonian-Laird method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding DersimonianLairdMethod = new Coding
    {
      Code = "dersimonianLairdMethod",
      Display = "Dersimonian-Laird method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// From a fixed-effects analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding FixedEffects = new Coding
    {
      Code = "effectsFixed",
      Display = "Fixed-effects",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// From a random-effects analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding RandomEffects = new Coding
    {
      Code = "effectsRandom",
      Display = "Random-effects",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Empirical Bayes method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding EmpiricalBayesMethod = new Coding
    {
      Code = "empiricalBayes",
      Display = "Empirical Bayes method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Fisher's exact test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding FisherQuoteSExactTest = new Coding
    {
      Code = "fishersExactTest",
      Display = "Fisherâ€™s exact test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Friedman test, no additional elements needed.
    /// </summary>
    public static readonly Coding FriedmanTest = new Coding
    {
      Code = "friedmanTest",
      Display = "Friedman test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM (Generalized Linear Model), no additional elements needed.
    /// </summary>
    public static readonly Coding GLMGeneralizedLinearModel = new Coding
    {
      Code = "glm",
      Display = "GLM (Generalized Linear Model)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM with generalized logit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMWithGeneralizedLogitLink = new Coding
    {
      Code = "glmGeneralizedLogit",
      Display = "GLM with generalized logit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM with identity link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMWithIdentityLink = new Coding
    {
      Code = "glmIdentity",
      Display = "GLM with identity link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM with log link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMWithLogLink = new Coding
    {
      Code = "glmLog",
      Display = "GLM with log link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM with logit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMWithLogitLink = new Coding
    {
      Code = "glmLogit",
      Display = "GLM with logit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Generalized linear mixed model (GLMM), no additional elements needed.
    /// </summary>
    public static readonly Coding GeneralizedLinearMixedModelGLMM = new Coding
    {
      Code = "glmm",
      Display = "Generalized linear mixed model (GLMM)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLMM with generalized logit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMMWithGeneralizedLogitLink = new Coding
    {
      Code = "glmmGeneralizedLogit",
      Display = "GLMM with generalized logit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLMM with identity link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMMWithIdentityLink = new Coding
    {
      Code = "glmmIdentity",
      Display = "GLMM with identity link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLMM with log link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMMWithLogLink = new Coding
    {
      Code = "glmmLog",
      Display = "GLMM with log link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLMM with logit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMMWithLogitLink = new Coding
    {
      Code = "glmmLogit",
      Display = "GLMM with logit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLMM with probit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMMWithProbitLink = new Coding
    {
      Code = "glmmProbit",
      Display = "GLMM with probit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for GLM with probit link, no additional elements needed.
    /// </summary>
    public static readonly Coding GLMWithProbitLink = new Coding
    {
      Code = "glmProbit",
      Display = "GLM with probit link",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Goodman Kruskaâ€™s Gamma, no additional elements needed.
    /// </summary>
    public static readonly Coding GoodmanKruskaQuoteSGamma = new Coding
    {
      Code = "goodmanKruskasGamma",
      Display = "Goodman Kruskaâ€™s Gamma",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Hartung-Knapp/Hartung-Knapp-Sidik-Jonkman adjustment used in meta-analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding HartungKnappAdjustment = new Coding
    {
      Code = "hartungKnapp",
      Display = "Hartung-Knapp adjustment",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Hedges method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding HedgesMethod = new Coding
    {
      Code = "hedgesMethod",
      Display = "Hedges method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Hunter-Schmidt method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding HunterSchmidtMethod = new Coding
    {
      Code = "hunterSchmidt",
      Display = "Hunter-Schmidt method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for interaction term, paired with "value" and two or more variable elements.
    /// </summary>
    public static readonly Coding InteractionTerm = new Coding
    {
      Code = "interactionTerm",
      Display = "Interaction term",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for inverse variance method of meta-analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding InverseVarianceMethod = new Coding
    {
      Code = "inverseVariance",
      Display = "Inverse variance method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Kendall correlation, no additional elements needed.
    /// </summary>
    public static readonly Coding KendallCorrelation = new Coding
    {
      Code = "kendallCorrelation",
      Display = "Kendall correlation",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Kruskal Wallis test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding KruskalWallisTest = new Coding
    {
      Code = "kruskalWallisTest",
      Display = "Kruskal Wallis test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for linear regression method of analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding LinearRegression = new Coding
    {
      Code = "linearRegression",
      Display = "Linear Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for logistic regression method of analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding LogisticRegression = new Coding
    {
      Code = "logisticRegression",
      Display = "Logistic Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Mann-Whitney U test, no additional elements needed.
    /// </summary>
    public static readonly Coding MannWhitneyUTest = new Coding
    {
      Code = "mannWhitneyUTest",
      Display = "Mann-Whitney U test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for multivariate ANOVA (MANOVA) method of analysis, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding MultivariateANOVAMANOVA = new Coding
    {
      Code = "manova",
      Display = "multivariate ANOVA (MANOVA)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Mantel-Haenszel method, no additional elements needed.
    /// </summary>
    public static readonly Coding MantelHaenszelMethod = new Coding
    {
      Code = "manteHaenszelMethod",
      Display = "Mantel-Haenszel method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Maximum Likelihood method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding MaximumLikelihoodMethod = new Coding
    {
      Code = "maximumLikelihood",
      Display = "Maximum Likelihood method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for McNemar's test, no additional elements needed.
    /// </summary>
    public static readonly Coding McNemarQuoteSTest = new Coding
    {
      Code = "mcnemarsTest",
      Display = "McNemarâ€™s test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for meta-analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding MetaAnalysis = new Coding
    {
      Code = "metaAnalysis",
      Display = "Meta-analysis",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Modified Hartung-Knapp/Hartung-Knapp-Sidik-Jonkman adjustment used in meta-analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding ModifiedHartungKnappAdjustment = new Coding
    {
      Code = "modifiedHartungKnapp",
      Display = "Modified Hartung-Knapp adjustment",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Multinomial Distribution for Regression, no additional elements needed.
    /// </summary>
    public static readonly Coding MultinomialDistributionForRegression = new Coding
    {
      Code = "multinomialDistributionRegression",
      Display = "Multinomial Distribution for Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Negative Binomial Regression, no additional elements needed.
    /// </summary>
    public static readonly Coding NegativeBinomialRegression = new Coding
    {
      Code = "negativeBinomialRegression",
      Display = "Negative Binomial Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for 1-sample t-test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding VAL1SampleTTest = new Coding
    {
      Code = "oneSampleTTest",
      Display = "1-sample t-test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for one-tailed test (1 threshold), no additional elements needed.
    /// </summary>
    public static readonly Coding OneTailedTest1Threshold = new Coding
    {
      Code = "oneTailedTest",
      Display = "one-tailed test (1 threshold)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for paired t-test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding PairedTTest = new Coding
    {
      Code = "pairedTTest",
      Display = "paired t-test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Paule-Mandel method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding PauleMandelMethod = new Coding
    {
      Code = "pauleMandelMethod",
      Display = "Paule-Mandel method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Pearson correlation, no additional elements needed.
    /// </summary>
    public static readonly Coding PearsonCorrelation = new Coding
    {
      Code = "pearsonCorrelation",
      Display = "Pearson correlation",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Peto method of meta-analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding PetoMethod = new Coding
    {
      Code = "petoMethod",
      Display = "Peto method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Poisson Regression, no additional elements needed.
    /// </summary>
    public static readonly Coding PoissonRegression = new Coding
    {
      Code = "poissonRegression",
      Display = "Poisson Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Polynomial regression method of analysis, no additional elements needed.
    /// </summary>
    public static readonly Coding PolynomialRegression = new Coding
    {
      Code = "polynomialRegression",
      Display = "Polynomial Regression",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Restricted Maximum Likelihood method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding RestrictedMaximumLikelihoodMethod = new Coding
    {
      Code = "restrictedLikelihood",
      Display = "Restricted Maximum Likelihood method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Sidik-Jonkman method of tau estimation, no additional elements needed.
    /// </summary>
    public static readonly Coding SidikJonkmanMethod = new Coding
    {
      Code = "sidikJonkman",
      Display = "Sidik-Jonkman method",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for sign test, no additional elements needed.
    /// </summary>
    public static readonly Coding SignTest = new Coding
    {
      Code = "signTest",
      Display = "sign test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Spearman correlation, no additional elements needed.
    /// </summary>
    public static readonly Coding SpearmanCorrelation = new Coding
    {
      Code = "spearmanCorrelation",
      Display = "Spearman correlation",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for 2-sample t-test, may be paired with "value" to express degrees of freedom.
    /// </summary>
    public static readonly Coding VAL2SampleTTest = new Coding
    {
      Code = "twoSampleTTest",
      Display = "2-sample t-test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for two-tailed test (2 threshold), no additional elements needed.
    /// </summary>
    public static readonly Coding TwoTailedTest2Thresholds = new Coding
    {
      Code = "twoTailedTest",
      Display = "two-tailed test (2 thresholds)",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Wilcoxon rank-sum test, no additional elements needed.
    /// </summary>
    public static readonly Coding WilcoxonRankSumTest = new Coding
    {
      Code = "wilcoxonRankSumTest",
      Display = "Wilcoxon rank-sum test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for Wilcoxon signed-rank test, no additional elements needed.
    /// </summary>
    public static readonly Coding WilcoxonSignedRankTest = new Coding
    {
      Code = "wilcoxonSignedRankTest",
      Display = "Wilcoxon signed-rank test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Zero-cell adjustment done by adding a constant to all cells of affected studies, paired with "value" to define the constant.
    /// </summary>
    public static readonly Coding ZeroCellAdjustmentWithConstant = new Coding
    {
      Code = "zeroCellConstant",
      Display = "Zero-cell adjustment with constant",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Zero-cell adjustment done by treatment arm continuity correction, no additional elements needed.
    /// </summary>
    public static readonly Coding ZeroCellAdjustmentWithContinuityCorrection = new Coding
    {
      Code = "zeroCellContinuityCorrection",
      Display = "Zero-cell adjustment with continuity correction",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };
    /// <summary>
    /// Used for z-test, no additional elements needed.
    /// </summary>
    public static readonly Coding ZTest = new Coding
    {
      Code = "zTest",
      Display = "z-test",
      System = "http://terminology.hl7.org/CodeSystem/statistic-model-code"
    };

    /// <summary>
    /// Literal for code: AdjustedAnalysis
    /// </summary>
    public const string LiteralAdjustedAnalysis = "adjusted";

    /// <summary>
    /// Literal for code: ANOVAANalysisOfVAriance
    /// </summary>
    public const string LiteralANOVAANalysisOfVAriance = "anova";

    /// <summary>
    /// Literal for code: OneWayANOVA
    /// </summary>
    public const string LiteralOneWayANOVA = "anovaOneWay";

    /// <summary>
    /// Literal for code: VAL3WayANOVA
    /// </summary>
    public const string LiteralVAL3WayANOVA = "anovaThreeWay";

    /// <summary>
    /// Literal for code: VAL2WayANOVAWithoutReplication
    /// </summary>
    public const string LiteralVAL2WayANOVAWithoutReplication = "anovaTwoWay";

    /// <summary>
    /// Literal for code: VAL2WayANOVAWithReplication
    /// </summary>
    public const string LiteralVAL2WayANOVAWithReplication = "anovaTwoWayReplication";

    /// <summary>
    /// Literal for code: BinomialDistributionForRegression
    /// </summary>
    public const string LiteralBinomialDistributionForRegression = "binomialDistributionRegression";

    /// <summary>
    /// Literal for code: ChiSquareTest
    /// </summary>
    public const string LiteralChiSquareTest = "chiSquareTest";

    /// <summary>
    /// Literal for code: ChiSquareTestForHomogeneity
    /// </summary>
    public const string LiteralChiSquareTestForHomogeneity = "chiSquareTestHomogeneity";

    /// <summary>
    /// Literal for code: ChiSquareTestForTrend
    /// </summary>
    public const string LiteralChiSquareTestForTrend = "chiSquareTestTrend";

    /// <summary>
    /// Literal for code: CoxProportionalHazards
    /// </summary>
    public const string LiteralCoxProportionalHazards = "coxProportionalHazards";

    /// <summary>
    /// Literal for code: DersimonianLairdMethod
    /// </summary>
    public const string LiteralDersimonianLairdMethod = "dersimonianLairdMethod";

    /// <summary>
    /// Literal for code: FixedEffects
    /// </summary>
    public const string LiteralFixedEffects = "effectsFixed";

    /// <summary>
    /// Literal for code: RandomEffects
    /// </summary>
    public const string LiteralRandomEffects = "effectsRandom";

    /// <summary>
    /// Literal for code: EmpiricalBayesMethod
    /// </summary>
    public const string LiteralEmpiricalBayesMethod = "empiricalBayes";

    /// <summary>
    /// Literal for code: FisherQuoteSExactTest
    /// </summary>
    public const string LiteralFisherQuoteSExactTest = "fishersExactTest";

    /// <summary>
    /// Literal for code: FriedmanTest
    /// </summary>
    public const string LiteralFriedmanTest = "friedmanTest";

    /// <summary>
    /// Literal for code: GLMGeneralizedLinearModel
    /// </summary>
    public const string LiteralGLMGeneralizedLinearModel = "glm";

    /// <summary>
    /// Literal for code: GLMWithGeneralizedLogitLink
    /// </summary>
    public const string LiteralGLMWithGeneralizedLogitLink = "glmGeneralizedLogit";

    /// <summary>
    /// Literal for code: GLMWithIdentityLink
    /// </summary>
    public const string LiteralGLMWithIdentityLink = "glmIdentity";

    /// <summary>
    /// Literal for code: GLMWithLogLink
    /// </summary>
    public const string LiteralGLMWithLogLink = "glmLog";

    /// <summary>
    /// Literal for code: GLMWithLogitLink
    /// </summary>
    public const string LiteralGLMWithLogitLink = "glmLogit";

    /// <summary>
    /// Literal for code: GeneralizedLinearMixedModelGLMM
    /// </summary>
    public const string LiteralGeneralizedLinearMixedModelGLMM = "glmm";

    /// <summary>
    /// Literal for code: GLMMWithGeneralizedLogitLink
    /// </summary>
    public const string LiteralGLMMWithGeneralizedLogitLink = "glmmGeneralizedLogit";

    /// <summary>
    /// Literal for code: GLMMWithIdentityLink
    /// </summary>
    public const string LiteralGLMMWithIdentityLink = "glmmIdentity";

    /// <summary>
    /// Literal for code: GLMMWithLogLink
    /// </summary>
    public const string LiteralGLMMWithLogLink = "glmmLog";

    /// <summary>
    /// Literal for code: GLMMWithLogitLink
    /// </summary>
    public const string LiteralGLMMWithLogitLink = "glmmLogit";

    /// <summary>
    /// Literal for code: GLMMWithProbitLink
    /// </summary>
    public const string LiteralGLMMWithProbitLink = "glmmProbit";

    /// <summary>
    /// Literal for code: GLMWithProbitLink
    /// </summary>
    public const string LiteralGLMWithProbitLink = "glmProbit";

    /// <summary>
    /// Literal for code: GoodmanKruskaQuoteSGamma
    /// </summary>
    public const string LiteralGoodmanKruskaQuoteSGamma = "goodmanKruskasGamma";

    /// <summary>
    /// Literal for code: HartungKnappAdjustment
    /// </summary>
    public const string LiteralHartungKnappAdjustment = "hartungKnapp";

    /// <summary>
    /// Literal for code: HedgesMethod
    /// </summary>
    public const string LiteralHedgesMethod = "hedgesMethod";

    /// <summary>
    /// Literal for code: HunterSchmidtMethod
    /// </summary>
    public const string LiteralHunterSchmidtMethod = "hunterSchmidt";

    /// <summary>
    /// Literal for code: InteractionTerm
    /// </summary>
    public const string LiteralInteractionTerm = "interactionTerm";

    /// <summary>
    /// Literal for code: InverseVarianceMethod
    /// </summary>
    public const string LiteralInverseVarianceMethod = "inverseVariance";

    /// <summary>
    /// Literal for code: KendallCorrelation
    /// </summary>
    public const string LiteralKendallCorrelation = "kendallCorrelation";

    /// <summary>
    /// Literal for code: KruskalWallisTest
    /// </summary>
    public const string LiteralKruskalWallisTest = "kruskalWallisTest";

    /// <summary>
    /// Literal for code: LinearRegression
    /// </summary>
    public const string LiteralLinearRegression = "linearRegression";

    /// <summary>
    /// Literal for code: LogisticRegression
    /// </summary>
    public const string LiteralLogisticRegression = "logisticRegression";

    /// <summary>
    /// Literal for code: MannWhitneyUTest
    /// </summary>
    public const string LiteralMannWhitneyUTest = "mannWhitneyUTest";

    /// <summary>
    /// Literal for code: MultivariateANOVAMANOVA
    /// </summary>
    public const string LiteralMultivariateANOVAMANOVA = "manova";

    /// <summary>
    /// Literal for code: MantelHaenszelMethod
    /// </summary>
    public const string LiteralMantelHaenszelMethod = "manteHaenszelMethod";

    /// <summary>
    /// Literal for code: MaximumLikelihoodMethod
    /// </summary>
    public const string LiteralMaximumLikelihoodMethod = "maximumLikelihood";

    /// <summary>
    /// Literal for code: McNemarQuoteSTest
    /// </summary>
    public const string LiteralMcNemarQuoteSTest = "mcnemarsTest";

    /// <summary>
    /// Literal for code: MetaAnalysis
    /// </summary>
    public const string LiteralMetaAnalysis = "metaAnalysis";

    /// <summary>
    /// Literal for code: ModifiedHartungKnappAdjustment
    /// </summary>
    public const string LiteralModifiedHartungKnappAdjustment = "modifiedHartungKnapp";

    /// <summary>
    /// Literal for code: MultinomialDistributionForRegression
    /// </summary>
    public const string LiteralMultinomialDistributionForRegression = "multinomialDistributionRegression";

    /// <summary>
    /// Literal for code: NegativeBinomialRegression
    /// </summary>
    public const string LiteralNegativeBinomialRegression = "negativeBinomialRegression";

    /// <summary>
    /// Literal for code: VAL1SampleTTest
    /// </summary>
    public const string LiteralVAL1SampleTTest = "oneSampleTTest";

    /// <summary>
    /// Literal for code: OneTailedTest1Threshold
    /// </summary>
    public const string LiteralOneTailedTest1Threshold = "oneTailedTest";

    /// <summary>
    /// Literal for code: PairedTTest
    /// </summary>
    public const string LiteralPairedTTest = "pairedTTest";

    /// <summary>
    /// Literal for code: PauleMandelMethod
    /// </summary>
    public const string LiteralPauleMandelMethod = "pauleMandelMethod";

    /// <summary>
    /// Literal for code: PearsonCorrelation
    /// </summary>
    public const string LiteralPearsonCorrelation = "pearsonCorrelation";

    /// <summary>
    /// Literal for code: PetoMethod
    /// </summary>
    public const string LiteralPetoMethod = "petoMethod";

    /// <summary>
    /// Literal for code: PoissonRegression
    /// </summary>
    public const string LiteralPoissonRegression = "poissonRegression";

    /// <summary>
    /// Literal for code: PolynomialRegression
    /// </summary>
    public const string LiteralPolynomialRegression = "polynomialRegression";

    /// <summary>
    /// Literal for code: RestrictedMaximumLikelihoodMethod
    /// </summary>
    public const string LiteralRestrictedMaximumLikelihoodMethod = "restrictedLikelihood";

    /// <summary>
    /// Literal for code: SidikJonkmanMethod
    /// </summary>
    public const string LiteralSidikJonkmanMethod = "sidikJonkman";

    /// <summary>
    /// Literal for code: SignTest
    /// </summary>
    public const string LiteralSignTest = "signTest";

    /// <summary>
    /// Literal for code: SpearmanCorrelation
    /// </summary>
    public const string LiteralSpearmanCorrelation = "spearmanCorrelation";

    /// <summary>
    /// Literal for code: VAL2SampleTTest
    /// </summary>
    public const string LiteralVAL2SampleTTest = "twoSampleTTest";

    /// <summary>
    /// Literal for code: TwoTailedTest2Thresholds
    /// </summary>
    public const string LiteralTwoTailedTest2Thresholds = "twoTailedTest";

    /// <summary>
    /// Literal for code: WilcoxonRankSumTest
    /// </summary>
    public const string LiteralWilcoxonRankSumTest = "wilcoxonRankSumTest";

    /// <summary>
    /// Literal for code: WilcoxonSignedRankTest
    /// </summary>
    public const string LiteralWilcoxonSignedRankTest = "wilcoxonSignedRankTest";

    /// <summary>
    /// Literal for code: ZeroCellAdjustmentWithConstant
    /// </summary>
    public const string LiteralZeroCellAdjustmentWithConstant = "zeroCellConstant";

    /// <summary>
    /// Literal for code: ZeroCellAdjustmentWithContinuityCorrection
    /// </summary>
    public const string LiteralZeroCellAdjustmentWithContinuityCorrection = "zeroCellContinuityCorrection";

    /// <summary>
    /// Literal for code: ZTest
    /// </summary>
    public const string LiteralZTest = "zTest";
  };
}
