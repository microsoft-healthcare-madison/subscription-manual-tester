// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// One of the resource types defined as part of this version of FHIR.
  /// </summary>
  public static class ResourceTypesCodes
  {
    /// <summary>
    /// A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
    /// </summary>
    public static readonly Coding Account = new Coding
    {
      Code = "Account",
      Display = "Account",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
    /// </summary>
    public static readonly Coding ActivityDefinition = new Coding
    {
      Code = "ActivityDefinition",
      Display = "ActivityDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).
    /// </summary>
    public static readonly Coding AdministrableProductDefinition = new Coding
    {
      Code = "AdministrableProductDefinition",
      Display = "AdministrableProductDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
    /// </summary>
    public static readonly Coding AdverseEvent = new Coding
    {
      Code = "AdverseEvent",
      Display = "AdverseEvent",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.
    /// </summary>
    public static readonly Coding AllergyIntolerance = new Coding
    {
      Code = "AllergyIntolerance",
      Display = "AllergyIntolerance",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
    /// </summary>
    public static readonly Coding Appointment = new Coding
    {
      Code = "Appointment",
      Display = "Appointment",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.
    /// </summary>
    public static readonly Coding AppointmentResponse = new Coding
    {
      Code = "AppointmentResponse",
      Display = "AppointmentResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
    /// </summary>
    public static readonly Coding AuditEvent = new Coding
    {
      Code = "AuditEvent",
      Display = "AuditEvent",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.
    /// </summary>
    public static readonly Coding Basic = new Coding
    {
      Code = "Basic",
      Display = "Basic",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.
    /// </summary>
    public static readonly Coding Binary = new Coding
    {
      Code = "Binary",
      Display = "Binary",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A material substance originating from a biological entity intended to be transplanted or infused
    /// into another (possibly the same) biological entity.
    /// </summary>
    public static readonly Coding BiologicallyDerivedProduct = new Coding
    {
      Code = "BiologicallyDerivedProduct",
      Display = "BiologicallyDerivedProduct",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
    /// </summary>
    public static readonly Coding BodyStructure = new Coding
    {
      Code = "BodyStructure",
      Display = "BodyStructure",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A container for a collection of resources.
    /// </summary>
    public static readonly Coding Bundle = new Coding
    {
      Code = "Bundle",
      Display = "Bundle",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
    /// </summary>
    public static readonly Coding CapabilityStatement = new Coding
    {
      Code = "CapabilityStatement",
      Display = "CapabilityStatement",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
    /// </summary>
    public static readonly Coding CarePlan = new Coding
    {
      Code = "CarePlan",
      Display = "CarePlan",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.
    /// </summary>
    public static readonly Coding CareTeam = new Coding
    {
      Code = "CareTeam",
      Display = "CareTeam",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Catalog entries are wrappers that contextualize items included in a catalog.
    /// </summary>
    public static readonly Coding CatalogEntry = new Coding
    {
      Code = "CatalogEntry",
      Display = "CatalogEntry",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.
    /// </summary>
    public static readonly Coding ChargeItem = new Coding
    {
      Code = "ChargeItem",
      Display = "ChargeItem",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.
    /// </summary>
    public static readonly Coding ChargeItemDefinition = new Coding
    {
      Code = "ChargeItemDefinition",
      Display = "ChargeItemDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.
    /// </summary>
    public static readonly Coding Citation = new Coding
    {
      Code = "Citation",
      Display = "Citation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.
    /// </summary>
    public static readonly Coding Claim = new Coding
    {
      Code = "Claim",
      Display = "Claim",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides the adjudication details from the processing of a Claim resource.
    /// </summary>
    public static readonly Coding ClaimResponse = new Coding
    {
      Code = "ClaimResponse",
      Display = "ClaimResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.
    /// </summary>
    public static readonly Coding ClinicalImpression = new Coding
    {
      Code = "ClinicalImpression",
      Display = "ClinicalImpression",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.
    /// </summary>
    public static readonly Coding ClinicalUseIssue = new Coding
    {
      Code = "ClinicalUseIssue",
      Display = "ClinicalUseIssue",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
    /// </summary>
    public static readonly Coding CodeSystem = new Coding
    {
      Code = "CodeSystem",
      Display = "CodeSystem",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.
    /// </summary>
    public static readonly Coding Communication = new Coding
    {
      Code = "Communication",
      Display = "Communication",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
    /// </summary>
    public static readonly Coding CommunicationRequest = new Coding
    {
      Code = "CommunicationRequest",
      Display = "CommunicationRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A compartment definition that defines how resources are accessed on a server.
    /// </summary>
    public static readonly Coding CompartmentDefinition = new Coding
    {
      Code = "CompartmentDefinition",
      Display = "CompartmentDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
    /// </summary>
    public static readonly Coding Composition = new Coding
    {
      Code = "Composition",
      Display = "Composition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.
    /// </summary>
    public static readonly Coding ConceptMap = new Coding
    {
      Code = "ConceptMap",
      Display = "ConceptMap",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
    /// </summary>
    public static readonly Coding Condition = new Coding
    {
      Code = "Condition",
      Display = "Condition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
    /// </summary>
    public static readonly Coding Consent = new Coding
    {
      Code = "Consent",
      Display = "Consent",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
    /// </summary>
    public static readonly Coding Contract = new Coding
    {
      Code = "Contract",
      Display = "Contract",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.
    /// </summary>
    public static readonly Coding Coverage = new Coding
    {
      Code = "Coverage",
      Display = "Coverage",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
    /// </summary>
    public static readonly Coding CoverageEligibilityRequest = new Coding
    {
      Code = "CoverageEligibilityRequest",
      Display = "CoverageEligibilityRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.
    /// </summary>
    public static readonly Coding CoverageEligibilityResponse = new Coding
    {
      Code = "CoverageEligibilityResponse",
      Display = "CoverageEligibilityResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.
    /// </summary>
    public static readonly Coding DetectedIssue = new Coding
    {
      Code = "DetectedIssue",
      Display = "DetectedIssue",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.
    /// </summary>
    public static readonly Coding Device = new Coding
    {
      Code = "Device",
      Display = "Device",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The characteristics, operational status and capabilities of a medical-related component of a medical device.
    /// </summary>
    public static readonly Coding DeviceDefinition = new Coding
    {
      Code = "DeviceDefinition",
      Display = "DeviceDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes a measurement, calculation or setting capability of a medical device.
    /// </summary>
    public static readonly Coding DeviceMetric = new Coding
    {
      Code = "DeviceMetric",
      Display = "DeviceMetric",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.
    /// </summary>
    public static readonly Coding DeviceRequest = new Coding
    {
      Code = "DeviceRequest",
      Display = "DeviceRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.
    /// </summary>
    public static readonly Coding DeviceUseStatement = new Coding
    {
      Code = "DeviceUseStatement",
      Display = "DeviceUseStatement",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.
    /// </summary>
    public static readonly Coding DiagnosticReport = new Coding
    {
      Code = "DiagnosticReport",
      Display = "DiagnosticReport",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A collection of documents compiled for a purpose together with metadata that applies to the collection.
    /// </summary>
    public static readonly Coding DocumentManifest = new Coding
    {
      Code = "DocumentManifest",
      Display = "DocumentManifest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.
    /// </summary>
    public static readonly Coding DocumentReference = new Coding
    {
      Code = "DocumentReference",
      Display = "DocumentReference",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A resource that includes narrative, extensions, and contained resources.
    /// </summary>
    public static readonly Coding DomainResource = new Coding
    {
      Code = "DomainResource",
      Display = "DomainResource",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
    /// </summary>
    public static readonly Coding Encounter = new Coding
    {
      Code = "Encounter",
      Display = "Encounter",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.
    /// </summary>
    public static readonly Coding Endpoint = new Coding
    {
      Code = "Endpoint",
      Display = "Endpoint",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
    /// </summary>
    public static readonly Coding EnrollmentRequest = new Coding
    {
      Code = "EnrollmentRequest",
      Display = "EnrollmentRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
    /// </summary>
    public static readonly Coding EnrollmentResponse = new Coding
    {
      Code = "EnrollmentResponse",
      Display = "EnrollmentResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
    /// </summary>
    public static readonly Coding EpisodeOfCare = new Coding
    {
      Code = "EpisodeOfCare",
      Display = "EpisodeOfCare",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The EventDefinition resource provides a reusable description of when a particular event can occur.
    /// </summary>
    public static readonly Coding EventDefinition = new Coding
    {
      Code = "EventDefinition",
      Display = "EventDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.
    /// </summary>
    public static readonly Coding Evidence = new Coding
    {
      Code = "Evidence",
      Display = "Evidence",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.
    /// </summary>
    public static readonly Coding EvidenceReport = new Coding
    {
      Code = "EvidenceReport",
      Display = "EvidenceReport",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The EvidenceVariable resource describes an element that knowledge (Evidence) is about.
    /// </summary>
    public static readonly Coding EvidenceVariable = new Coding
    {
      Code = "EvidenceVariable",
      Display = "EvidenceVariable",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Example of workflow instance.
    /// </summary>
    public static readonly Coding ExampleScenario = new Coding
    {
      Code = "ExampleScenario",
      Display = "ExampleScenario",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
    /// </summary>
    public static readonly Coding ExplanationOfBenefit = new Coding
    {
      Code = "ExplanationOfBenefit",
      Display = "ExplanationOfBenefit",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Significant health conditions for a person related to the patient relevant in the context of care for the patient.
    /// </summary>
    public static readonly Coding FamilyMemberHistory = new Coding
    {
      Code = "FamilyMemberHistory",
      Display = "FamilyMemberHistory",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Prospective warnings of potential issues when providing care to the patient.
    /// </summary>
    public static readonly Coding Flag = new Coding
    {
      Code = "Flag",
      Display = "Flag",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
    /// </summary>
    public static readonly Coding Goal = new Coding
    {
      Code = "Goal",
      Display = "Goal",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
    /// </summary>
    public static readonly Coding GraphDefinition = new Coding
    {
      Code = "GraphDefinition",
      Display = "GraphDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
    /// </summary>
    public static readonly Coding Group = new Coding
    {
      Code = "Group",
      Display = "Group",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.
    /// </summary>
    public static readonly Coding GuidanceResponse = new Coding
    {
      Code = "GuidanceResponse",
      Display = "GuidanceResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The details of a healthcare service available at a location.
    /// </summary>
    public static readonly Coding HealthcareService = new Coding
    {
      Code = "HealthcareService",
      Display = "HealthcareService",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
    /// </summary>
    public static readonly Coding ImagingStudy = new Coding
    {
      Code = "ImagingStudy",
      Display = "ImagingStudy",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
    /// </summary>
    public static readonly Coding Immunization = new Coding
    {
      Code = "Immunization",
      Display = "Immunization",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.
    /// </summary>
    public static readonly Coding ImmunizationEvaluation = new Coding
    {
      Code = "ImmunizationEvaluation",
      Display = "ImmunizationEvaluation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.
    /// </summary>
    public static readonly Coding ImmunizationRecommendation = new Coding
    {
      Code = "ImmunizationRecommendation",
      Display = "ImmunizationRecommendation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
    /// </summary>
    public static readonly Coding ImplementationGuide = new Coding
    {
      Code = "ImplementationGuide",
      Display = "ImplementationGuide",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An ingredient of a manufactured item or pharmaceutical product.
    /// </summary>
    public static readonly Coding Ingredient = new Coding
    {
      Code = "Ingredient",
      Display = "Ingredient",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Details of a Health Insurance product/plan provided by an organization.
    /// </summary>
    public static readonly Coding InsurancePlan = new Coding
    {
      Code = "InsurancePlan",
      Display = "InsurancePlan",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
    /// </summary>
    public static readonly Coding Invoice = new Coding
    {
      Code = "Invoice",
      Display = "Invoice",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.
    /// </summary>
    public static readonly Coding Library = new Coding
    {
      Code = "Library",
      Display = "Library",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Identifies two or more records (resource instances) that refer to the same real-world "occurrence".
    /// </summary>
    public static readonly Coding Linkage = new Coding
    {
      Code = "Linkage",
      Display = "Linkage",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A list is a curated collection of resources.
    /// </summary>
    public static readonly Coding List = new Coding
    {
      Code = "List",
      Display = "List",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
    /// </summary>
    public static readonly Coding Location = new Coding
    {
      Code = "Location",
      Display = "Location",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.
    /// </summary>
    public static readonly Coding ManufacturedItemDefinition = new Coding
    {
      Code = "ManufacturedItemDefinition",
      Display = "ManufacturedItemDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The Measure resource provides the definition of a quality measure.
    /// </summary>
    public static readonly Coding Measure = new Coding
    {
      Code = "Measure",
      Display = "Measure",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
    /// </summary>
    public static readonly Coding MeasureReport = new Coding
    {
      Code = "MeasureReport",
      Display = "MeasureReport",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
    /// </summary>
    public static readonly Coding Media = new Coding
    {
      Code = "Media",
      Display = "Media",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
    /// </summary>
    public static readonly Coding Medication = new Coding
    {
      Code = "Medication",
      Display = "Medication",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
    /// </summary>
    public static readonly Coding MedicationAdministration = new Coding
    {
      Code = "MedicationAdministration",
      Display = "MedicationAdministration",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
    /// </summary>
    public static readonly Coding MedicationDispense = new Coding
    {
      Code = "MedicationDispense",
      Display = "MedicationDispense",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Information about a medication that is used to support knowledge.
    /// </summary>
    public static readonly Coding MedicationKnowledge = new Coding
    {
      Code = "MedicationKnowledge",
      Display = "MedicationKnowledge",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
    /// </summary>
    public static readonly Coding MedicationRequest = new Coding
    {
      Code = "MedicationRequest",
      Display = "MedicationRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. 
    /// The primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.
    /// </summary>
    public static readonly Coding MedicationStatement = new Coding
    {
      Code = "MedicationStatement",
      Display = "MedicationStatement",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs).
    /// </summary>
    public static readonly Coding MedicinalProductDefinition = new Coding
    {
      Code = "MedicinalProductDefinition",
      Display = "MedicinalProductDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
    /// </summary>
    public static readonly Coding MessageDefinition = new Coding
    {
      Code = "MessageDefinition",
      Display = "MessageDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
    /// </summary>
    public static readonly Coding MessageHeader = new Coding
    {
      Code = "MessageHeader",
      Display = "MessageHeader",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Raw data describing a biological sequence.
    /// </summary>
    public static readonly Coding MolecularSequence = new Coding
    {
      Code = "MolecularSequence",
      Display = "MolecularSequence",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
    /// </summary>
    public static readonly Coding NamingSystem = new Coding
    {
      Code = "NamingSystem",
      Display = "NamingSystem",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
    /// </summary>
    public static readonly Coding NutritionOrder = new Coding
    {
      Code = "NutritionOrder",
      Display = "NutritionOrder",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A food or fluid product that is consumed by patients.
    /// </summary>
    public static readonly Coding NutritionProduct = new Coding
    {
      Code = "NutritionProduct",
      Display = "NutritionProduct",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Measurements and simple assertions made about a patient, device or other subject.
    /// </summary>
    public static readonly Coding Observation = new Coding
    {
      Code = "Observation",
      Display = "Observation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
    /// </summary>
    public static readonly Coding ObservationDefinition = new Coding
    {
      Code = "ObservationDefinition",
      Display = "ObservationDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
    /// </summary>
    public static readonly Coding OperationDefinition = new Coding
    {
      Code = "OperationDefinition",
      Display = "OperationDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A collection of error, warning, or information messages that result from a system action.
    /// </summary>
    public static readonly Coding OperationOutcome = new Coding
    {
      Code = "OperationOutcome",
      Display = "OperationOutcome",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.
    /// </summary>
    public static readonly Coding Organization = new Coding
    {
      Code = "Organization",
      Display = "Organization",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.
    /// </summary>
    public static readonly Coding OrganizationAffiliation = new Coding
    {
      Code = "OrganizationAffiliation",
      Display = "OrganizationAffiliation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A medically related item or items, in a container or package.
    /// </summary>
    public static readonly Coding PackagedProductDefinition = new Coding
    {
      Code = "PackagedProductDefinition",
      Display = "PackagedProductDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.
    /// </summary>
    public static readonly Coding Parameters = new Coding
    {
      Code = "Parameters",
      Display = "Parameters",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Demographics and other administrative information about an individual or animal receiving care or other health-related services.
    /// </summary>
    public static readonly Coding Patient = new Coding
    {
      Code = "Patient",
      Display = "Patient",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides the status of the payment for goods and services rendered, and the request and response resource references.
    /// </summary>
    public static readonly Coding PaymentNotice = new Coding
    {
      Code = "PaymentNotice",
      Display = "PaymentNotice",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource provides the details including amount of a payment and allocates the payment items being paid.
    /// </summary>
    public static readonly Coding PaymentReconciliation = new Coding
    {
      Code = "PaymentReconciliation",
      Display = "PaymentReconciliation",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Demographics and administrative information about a person independent of a specific health-related context.
    /// </summary>
    public static readonly Coding Person = new Coding
    {
      Code = "Person",
      Display = "Person",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.
    /// </summary>
    public static readonly Coding PlanDefinition = new Coding
    {
      Code = "PlanDefinition",
      Display = "PlanDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A person who is directly or indirectly involved in the provisioning of healthcare.
    /// </summary>
    public static readonly Coding Practitioner = new Coding
    {
      Code = "Practitioner",
      Display = "Practitioner",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
    /// </summary>
    public static readonly Coding PractitionerRole = new Coding
    {
      Code = "PractitionerRole",
      Display = "PractitionerRole",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.
    /// </summary>
    public static readonly Coding Procedure = new Coding
    {
      Code = "Procedure",
      Display = "Procedure",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
    /// </summary>
    public static readonly Coding Provenance = new Coding
    {
      Code = "Provenance",
      Display = "Provenance",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
    /// </summary>
    public static readonly Coding Questionnaire = new Coding
    {
      Code = "Questionnaire",
      Display = "Questionnaire",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
    /// </summary>
    public static readonly Coding QuestionnaireResponse = new Coding
    {
      Code = "QuestionnaireResponse",
      Display = "QuestionnaireResponse",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.
    /// </summary>
    public static readonly Coding RegulatedAuthorization = new Coding
    {
      Code = "RegulatedAuthorization",
      Display = "RegulatedAuthorization",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.
    /// </summary>
    public static readonly Coding RelatedPerson = new Coding
    {
      Code = "RelatedPerson",
      Display = "RelatedPerson",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
    /// </summary>
    public static readonly Coding RequestGroup = new Coding
    {
      Code = "RequestGroup",
      Display = "RequestGroup",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.
    /// </summary>
    public static readonly Coding ResearchDefinition = new Coding
    {
      Code = "ResearchDefinition",
      Display = "ResearchDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
    /// </summary>
    public static readonly Coding ResearchElementDefinition = new Coding
    {
      Code = "ResearchElementDefinition",
      Display = "ResearchElementDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.
    /// </summary>
    public static readonly Coding ResearchStudy = new Coding
    {
      Code = "ResearchStudy",
      Display = "ResearchStudy",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A physical entity which is the primary unit of operational and/or administrative interest in a study.
    /// </summary>
    public static readonly Coding ResearchSubject = new Coding
    {
      Code = "ResearchSubject",
      Display = "ResearchSubject",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// This is the base resource type for everything.
    /// </summary>
    public static readonly Coding Resource = new Coding
    {
      Code = "Resource",
      Display = "Resource",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.
    /// </summary>
    public static readonly Coding RiskAssessment = new Coding
    {
      Code = "RiskAssessment",
      Display = "RiskAssessment",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A container for slots of time that may be available for booking appointments.
    /// </summary>
    public static readonly Coding Schedule = new Coding
    {
      Code = "Schedule",
      Display = "Schedule",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A search parameter that defines a named search item that can be used to search/filter on a resource.
    /// </summary>
    public static readonly Coding SearchParameter = new Coding
    {
      Code = "SearchParameter",
      Display = "SearchParameter",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.
    /// </summary>
    public static readonly Coding ServiceRequest = new Coding
    {
      Code = "ServiceRequest",
      Display = "ServiceRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A slot of time on a schedule that may be available for booking appointments.
    /// </summary>
    public static readonly Coding Slot = new Coding
    {
      Code = "Slot",
      Display = "Slot",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A sample to be used for analysis.
    /// </summary>
    public static readonly Coding Specimen = new Coding
    {
      Code = "Specimen",
      Display = "Specimen",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A kind of specimen with associated set of requirements.
    /// </summary>
    public static readonly Coding SpecimenDefinition = new Coding
    {
      Code = "SpecimenDefinition",
      Display = "SpecimenDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
    /// </summary>
    public static readonly Coding StructureDefinition = new Coding
    {
      Code = "StructureDefinition",
      Display = "StructureDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A Map of relationships between 2 structures that can be used to transform data.
    /// </summary>
    public static readonly Coding StructureMap = new Coding
    {
      Code = "StructureMap",
      Display = "StructureMap",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.
    /// </summary>
    public static readonly Coding Subscription = new Coding
    {
      Code = "Subscription",
      Display = "Subscription",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The SubscriptionStatus resource describes the state of a Subscription during notifications.
    /// </summary>
    public static readonly Coding SubscriptionStatus = new Coding
    {
      Code = "SubscriptionStatus",
      Display = "SubscriptionStatus",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.
    /// </summary>
    public static readonly Coding SubscriptionTopic = new Coding
    {
      Code = "SubscriptionTopic",
      Display = "SubscriptionTopic",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A homogeneous material with a definite composition.
    /// </summary>
    public static readonly Coding Substance = new Coding
    {
      Code = "Substance",
      Display = "Substance",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// The detailed description of a substance, typically at a level beyond what is used for prescribing.
    /// </summary>
    public static readonly Coding SubstanceDefinition = new Coding
    {
      Code = "SubstanceDefinition",
      Display = "SubstanceDefinition",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Record of delivery of what is supplied.
    /// </summary>
    public static readonly Coding SupplyDelivery = new Coding
    {
      Code = "SupplyDelivery",
      Display = "SupplyDelivery",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A record of a request for a medication, substance or device used in the healthcare setting.
    /// </summary>
    public static readonly Coding SupplyRequest = new Coding
    {
      Code = "SupplyRequest",
      Display = "SupplyRequest",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A task to be performed.
    /// </summary>
    public static readonly Coding Task = new Coding
    {
      Code = "Task",
      Display = "Task",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
    /// </summary>
    public static readonly Coding TerminologyCapabilities = new Coding
    {
      Code = "TerminologyCapabilities",
      Display = "TerminologyCapabilities",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A summary of information based on the results of executing a TestScript.
    /// </summary>
    public static readonly Coding TestReport = new Coding
    {
      Code = "TestReport",
      Display = "TestReport",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
    /// </summary>
    public static readonly Coding TestScript = new Coding
    {
      Code = "TestScript",
      Display = "TestScript",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).
    /// </summary>
    public static readonly Coding ValueSet = new Coding
    {
      Code = "ValueSet",
      Display = "ValueSet",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// Describes validation requirements, source(s), status and dates for one or more elements.
    /// </summary>
    public static readonly Coding VerificationResult = new Coding
    {
      Code = "VerificationResult",
      Display = "VerificationResult",
      System = "http://hl7.org/fhir/resource-types"
    };
    /// <summary>
    /// An authorization for the provision of glasses and/or contact lenses to a patient.
    /// </summary>
    public static readonly Coding VisionPrescription = new Coding
    {
      Code = "VisionPrescription",
      Display = "VisionPrescription",
      System = "http://hl7.org/fhir/resource-types"
    };

    /// <summary>
    /// Literal for code: Account
    /// </summary>
    public const string LiteralAccount = "Account";

    /// <summary>
    /// Literal for code: ActivityDefinition
    /// </summary>
    public const string LiteralActivityDefinition = "ActivityDefinition";

    /// <summary>
    /// Literal for code: AdministrableProductDefinition
    /// </summary>
    public const string LiteralAdministrableProductDefinition = "AdministrableProductDefinition";

    /// <summary>
    /// Literal for code: AdverseEvent
    /// </summary>
    public const string LiteralAdverseEvent = "AdverseEvent";

    /// <summary>
    /// Literal for code: AllergyIntolerance
    /// </summary>
    public const string LiteralAllergyIntolerance = "AllergyIntolerance";

    /// <summary>
    /// Literal for code: Appointment
    /// </summary>
    public const string LiteralAppointment = "Appointment";

    /// <summary>
    /// Literal for code: AppointmentResponse
    /// </summary>
    public const string LiteralAppointmentResponse = "AppointmentResponse";

    /// <summary>
    /// Literal for code: AuditEvent
    /// </summary>
    public const string LiteralAuditEvent = "AuditEvent";

    /// <summary>
    /// Literal for code: Basic
    /// </summary>
    public const string LiteralBasic = "Basic";

    /// <summary>
    /// Literal for code: Binary
    /// </summary>
    public const string LiteralBinary = "Binary";

    /// <summary>
    /// Literal for code: BiologicallyDerivedProduct
    /// </summary>
    public const string LiteralBiologicallyDerivedProduct = "BiologicallyDerivedProduct";

    /// <summary>
    /// Literal for code: BodyStructure
    /// </summary>
    public const string LiteralBodyStructure = "BodyStructure";

    /// <summary>
    /// Literal for code: Bundle
    /// </summary>
    public const string LiteralBundle = "Bundle";

    /// <summary>
    /// Literal for code: CapabilityStatement
    /// </summary>
    public const string LiteralCapabilityStatement = "CapabilityStatement";

    /// <summary>
    /// Literal for code: CarePlan
    /// </summary>
    public const string LiteralCarePlan = "CarePlan";

    /// <summary>
    /// Literal for code: CareTeam
    /// </summary>
    public const string LiteralCareTeam = "CareTeam";

    /// <summary>
    /// Literal for code: CatalogEntry
    /// </summary>
    public const string LiteralCatalogEntry = "CatalogEntry";

    /// <summary>
    /// Literal for code: ChargeItem
    /// </summary>
    public const string LiteralChargeItem = "ChargeItem";

    /// <summary>
    /// Literal for code: ChargeItemDefinition
    /// </summary>
    public const string LiteralChargeItemDefinition = "ChargeItemDefinition";

    /// <summary>
    /// Literal for code: Citation
    /// </summary>
    public const string LiteralCitation = "Citation";

    /// <summary>
    /// Literal for code: Claim
    /// </summary>
    public const string LiteralClaim = "Claim";

    /// <summary>
    /// Literal for code: ClaimResponse
    /// </summary>
    public const string LiteralClaimResponse = "ClaimResponse";

    /// <summary>
    /// Literal for code: ClinicalImpression
    /// </summary>
    public const string LiteralClinicalImpression = "ClinicalImpression";

    /// <summary>
    /// Literal for code: ClinicalUseIssue
    /// </summary>
    public const string LiteralClinicalUseIssue = "ClinicalUseIssue";

    /// <summary>
    /// Literal for code: CodeSystem
    /// </summary>
    public const string LiteralCodeSystem = "CodeSystem";

    /// <summary>
    /// Literal for code: Communication
    /// </summary>
    public const string LiteralCommunication = "Communication";

    /// <summary>
    /// Literal for code: CommunicationRequest
    /// </summary>
    public const string LiteralCommunicationRequest = "CommunicationRequest";

    /// <summary>
    /// Literal for code: CompartmentDefinition
    /// </summary>
    public const string LiteralCompartmentDefinition = "CompartmentDefinition";

    /// <summary>
    /// Literal for code: Composition
    /// </summary>
    public const string LiteralComposition = "Composition";

    /// <summary>
    /// Literal for code: ConceptMap
    /// </summary>
    public const string LiteralConceptMap = "ConceptMap";

    /// <summary>
    /// Literal for code: Condition
    /// </summary>
    public const string LiteralCondition = "Condition";

    /// <summary>
    /// Literal for code: Consent
    /// </summary>
    public const string LiteralConsent = "Consent";

    /// <summary>
    /// Literal for code: Contract
    /// </summary>
    public const string LiteralContract = "Contract";

    /// <summary>
    /// Literal for code: Coverage
    /// </summary>
    public const string LiteralCoverage = "Coverage";

    /// <summary>
    /// Literal for code: CoverageEligibilityRequest
    /// </summary>
    public const string LiteralCoverageEligibilityRequest = "CoverageEligibilityRequest";

    /// <summary>
    /// Literal for code: CoverageEligibilityResponse
    /// </summary>
    public const string LiteralCoverageEligibilityResponse = "CoverageEligibilityResponse";

    /// <summary>
    /// Literal for code: DetectedIssue
    /// </summary>
    public const string LiteralDetectedIssue = "DetectedIssue";

    /// <summary>
    /// Literal for code: Device
    /// </summary>
    public const string LiteralDevice = "Device";

    /// <summary>
    /// Literal for code: DeviceDefinition
    /// </summary>
    public const string LiteralDeviceDefinition = "DeviceDefinition";

    /// <summary>
    /// Literal for code: DeviceMetric
    /// </summary>
    public const string LiteralDeviceMetric = "DeviceMetric";

    /// <summary>
    /// Literal for code: DeviceRequest
    /// </summary>
    public const string LiteralDeviceRequest = "DeviceRequest";

    /// <summary>
    /// Literal for code: DeviceUseStatement
    /// </summary>
    public const string LiteralDeviceUseStatement = "DeviceUseStatement";

    /// <summary>
    /// Literal for code: DiagnosticReport
    /// </summary>
    public const string LiteralDiagnosticReport = "DiagnosticReport";

    /// <summary>
    /// Literal for code: DocumentManifest
    /// </summary>
    public const string LiteralDocumentManifest = "DocumentManifest";

    /// <summary>
    /// Literal for code: DocumentReference
    /// </summary>
    public const string LiteralDocumentReference = "DocumentReference";

    /// <summary>
    /// Literal for code: DomainResource
    /// </summary>
    public const string LiteralDomainResource = "DomainResource";

    /// <summary>
    /// Literal for code: Encounter
    /// </summary>
    public const string LiteralEncounter = "Encounter";

    /// <summary>
    /// Literal for code: Endpoint
    /// </summary>
    public const string LiteralEndpoint = "Endpoint";

    /// <summary>
    /// Literal for code: EnrollmentRequest
    /// </summary>
    public const string LiteralEnrollmentRequest = "EnrollmentRequest";

    /// <summary>
    /// Literal for code: EnrollmentResponse
    /// </summary>
    public const string LiteralEnrollmentResponse = "EnrollmentResponse";

    /// <summary>
    /// Literal for code: EpisodeOfCare
    /// </summary>
    public const string LiteralEpisodeOfCare = "EpisodeOfCare";

    /// <summary>
    /// Literal for code: EventDefinition
    /// </summary>
    public const string LiteralEventDefinition = "EventDefinition";

    /// <summary>
    /// Literal for code: Evidence
    /// </summary>
    public const string LiteralEvidence = "Evidence";

    /// <summary>
    /// Literal for code: EvidenceReport
    /// </summary>
    public const string LiteralEvidenceReport = "EvidenceReport";

    /// <summary>
    /// Literal for code: EvidenceVariable
    /// </summary>
    public const string LiteralEvidenceVariable = "EvidenceVariable";

    /// <summary>
    /// Literal for code: ExampleScenario
    /// </summary>
    public const string LiteralExampleScenario = "ExampleScenario";

    /// <summary>
    /// Literal for code: ExplanationOfBenefit
    /// </summary>
    public const string LiteralExplanationOfBenefit = "ExplanationOfBenefit";

    /// <summary>
    /// Literal for code: FamilyMemberHistory
    /// </summary>
    public const string LiteralFamilyMemberHistory = "FamilyMemberHistory";

    /// <summary>
    /// Literal for code: Flag
    /// </summary>
    public const string LiteralFlag = "Flag";

    /// <summary>
    /// Literal for code: Goal
    /// </summary>
    public const string LiteralGoal = "Goal";

    /// <summary>
    /// Literal for code: GraphDefinition
    /// </summary>
    public const string LiteralGraphDefinition = "GraphDefinition";

    /// <summary>
    /// Literal for code: Group
    /// </summary>
    public const string LiteralGroup = "Group";

    /// <summary>
    /// Literal for code: GuidanceResponse
    /// </summary>
    public const string LiteralGuidanceResponse = "GuidanceResponse";

    /// <summary>
    /// Literal for code: HealthcareService
    /// </summary>
    public const string LiteralHealthcareService = "HealthcareService";

    /// <summary>
    /// Literal for code: ImagingStudy
    /// </summary>
    public const string LiteralImagingStudy = "ImagingStudy";

    /// <summary>
    /// Literal for code: Immunization
    /// </summary>
    public const string LiteralImmunization = "Immunization";

    /// <summary>
    /// Literal for code: ImmunizationEvaluation
    /// </summary>
    public const string LiteralImmunizationEvaluation = "ImmunizationEvaluation";

    /// <summary>
    /// Literal for code: ImmunizationRecommendation
    /// </summary>
    public const string LiteralImmunizationRecommendation = "ImmunizationRecommendation";

    /// <summary>
    /// Literal for code: ImplementationGuide
    /// </summary>
    public const string LiteralImplementationGuide = "ImplementationGuide";

    /// <summary>
    /// Literal for code: Ingredient
    /// </summary>
    public const string LiteralIngredient = "Ingredient";

    /// <summary>
    /// Literal for code: InsurancePlan
    /// </summary>
    public const string LiteralInsurancePlan = "InsurancePlan";

    /// <summary>
    /// Literal for code: Invoice
    /// </summary>
    public const string LiteralInvoice = "Invoice";

    /// <summary>
    /// Literal for code: Library
    /// </summary>
    public const string LiteralLibrary = "Library";

    /// <summary>
    /// Literal for code: Linkage
    /// </summary>
    public const string LiteralLinkage = "Linkage";

    /// <summary>
    /// Literal for code: List
    /// </summary>
    public const string LiteralList = "List";

    /// <summary>
    /// Literal for code: Location
    /// </summary>
    public const string LiteralLocation = "Location";

    /// <summary>
    /// Literal for code: ManufacturedItemDefinition
    /// </summary>
    public const string LiteralManufacturedItemDefinition = "ManufacturedItemDefinition";

    /// <summary>
    /// Literal for code: Measure
    /// </summary>
    public const string LiteralMeasure = "Measure";

    /// <summary>
    /// Literal for code: MeasureReport
    /// </summary>
    public const string LiteralMeasureReport = "MeasureReport";

    /// <summary>
    /// Literal for code: Media
    /// </summary>
    public const string LiteralMedia = "Media";

    /// <summary>
    /// Literal for code: Medication
    /// </summary>
    public const string LiteralMedication = "Medication";

    /// <summary>
    /// Literal for code: MedicationAdministration
    /// </summary>
    public const string LiteralMedicationAdministration = "MedicationAdministration";

    /// <summary>
    /// Literal for code: MedicationDispense
    /// </summary>
    public const string LiteralMedicationDispense = "MedicationDispense";

    /// <summary>
    /// Literal for code: MedicationKnowledge
    /// </summary>
    public const string LiteralMedicationKnowledge = "MedicationKnowledge";

    /// <summary>
    /// Literal for code: MedicationRequest
    /// </summary>
    public const string LiteralMedicationRequest = "MedicationRequest";

    /// <summary>
    /// Literal for code: MedicationStatement
    /// </summary>
    public const string LiteralMedicationStatement = "MedicationStatement";

    /// <summary>
    /// Literal for code: MedicinalProductDefinition
    /// </summary>
    public const string LiteralMedicinalProductDefinition = "MedicinalProductDefinition";

    /// <summary>
    /// Literal for code: MessageDefinition
    /// </summary>
    public const string LiteralMessageDefinition = "MessageDefinition";

    /// <summary>
    /// Literal for code: MessageHeader
    /// </summary>
    public const string LiteralMessageHeader = "MessageHeader";

    /// <summary>
    /// Literal for code: MolecularSequence
    /// </summary>
    public const string LiteralMolecularSequence = "MolecularSequence";

    /// <summary>
    /// Literal for code: NamingSystem
    /// </summary>
    public const string LiteralNamingSystem = "NamingSystem";

    /// <summary>
    /// Literal for code: NutritionOrder
    /// </summary>
    public const string LiteralNutritionOrder = "NutritionOrder";

    /// <summary>
    /// Literal for code: NutritionProduct
    /// </summary>
    public const string LiteralNutritionProduct = "NutritionProduct";

    /// <summary>
    /// Literal for code: Observation
    /// </summary>
    public const string LiteralObservation = "Observation";

    /// <summary>
    /// Literal for code: ObservationDefinition
    /// </summary>
    public const string LiteralObservationDefinition = "ObservationDefinition";

    /// <summary>
    /// Literal for code: OperationDefinition
    /// </summary>
    public const string LiteralOperationDefinition = "OperationDefinition";

    /// <summary>
    /// Literal for code: OperationOutcome
    /// </summary>
    public const string LiteralOperationOutcome = "OperationOutcome";

    /// <summary>
    /// Literal for code: Organization
    /// </summary>
    public const string LiteralOrganization = "Organization";

    /// <summary>
    /// Literal for code: OrganizationAffiliation
    /// </summary>
    public const string LiteralOrganizationAffiliation = "OrganizationAffiliation";

    /// <summary>
    /// Literal for code: PackagedProductDefinition
    /// </summary>
    public const string LiteralPackagedProductDefinition = "PackagedProductDefinition";

    /// <summary>
    /// Literal for code: Parameters
    /// </summary>
    public const string LiteralParameters = "Parameters";

    /// <summary>
    /// Literal for code: Patient
    /// </summary>
    public const string LiteralPatient = "Patient";

    /// <summary>
    /// Literal for code: PaymentNotice
    /// </summary>
    public const string LiteralPaymentNotice = "PaymentNotice";

    /// <summary>
    /// Literal for code: PaymentReconciliation
    /// </summary>
    public const string LiteralPaymentReconciliation = "PaymentReconciliation";

    /// <summary>
    /// Literal for code: Person
    /// </summary>
    public const string LiteralPerson = "Person";

    /// <summary>
    /// Literal for code: PlanDefinition
    /// </summary>
    public const string LiteralPlanDefinition = "PlanDefinition";

    /// <summary>
    /// Literal for code: Practitioner
    /// </summary>
    public const string LiteralPractitioner = "Practitioner";

    /// <summary>
    /// Literal for code: PractitionerRole
    /// </summary>
    public const string LiteralPractitionerRole = "PractitionerRole";

    /// <summary>
    /// Literal for code: Procedure
    /// </summary>
    public const string LiteralProcedure = "Procedure";

    /// <summary>
    /// Literal for code: Provenance
    /// </summary>
    public const string LiteralProvenance = "Provenance";

    /// <summary>
    /// Literal for code: Questionnaire
    /// </summary>
    public const string LiteralQuestionnaire = "Questionnaire";

    /// <summary>
    /// Literal for code: QuestionnaireResponse
    /// </summary>
    public const string LiteralQuestionnaireResponse = "QuestionnaireResponse";

    /// <summary>
    /// Literal for code: RegulatedAuthorization
    /// </summary>
    public const string LiteralRegulatedAuthorization = "RegulatedAuthorization";

    /// <summary>
    /// Literal for code: RelatedPerson
    /// </summary>
    public const string LiteralRelatedPerson = "RelatedPerson";

    /// <summary>
    /// Literal for code: RequestGroup
    /// </summary>
    public const string LiteralRequestGroup = "RequestGroup";

    /// <summary>
    /// Literal for code: ResearchDefinition
    /// </summary>
    public const string LiteralResearchDefinition = "ResearchDefinition";

    /// <summary>
    /// Literal for code: ResearchElementDefinition
    /// </summary>
    public const string LiteralResearchElementDefinition = "ResearchElementDefinition";

    /// <summary>
    /// Literal for code: ResearchStudy
    /// </summary>
    public const string LiteralResearchStudy = "ResearchStudy";

    /// <summary>
    /// Literal for code: ResearchSubject
    /// </summary>
    public const string LiteralResearchSubject = "ResearchSubject";

    /// <summary>
    /// Literal for code: Resource
    /// </summary>
    public const string LiteralResource = "Resource";

    /// <summary>
    /// Literal for code: RiskAssessment
    /// </summary>
    public const string LiteralRiskAssessment = "RiskAssessment";

    /// <summary>
    /// Literal for code: Schedule
    /// </summary>
    public const string LiteralSchedule = "Schedule";

    /// <summary>
    /// Literal for code: SearchParameter
    /// </summary>
    public const string LiteralSearchParameter = "SearchParameter";

    /// <summary>
    /// Literal for code: ServiceRequest
    /// </summary>
    public const string LiteralServiceRequest = "ServiceRequest";

    /// <summary>
    /// Literal for code: Slot
    /// </summary>
    public const string LiteralSlot = "Slot";

    /// <summary>
    /// Literal for code: Specimen
    /// </summary>
    public const string LiteralSpecimen = "Specimen";

    /// <summary>
    /// Literal for code: SpecimenDefinition
    /// </summary>
    public const string LiteralSpecimenDefinition = "SpecimenDefinition";

    /// <summary>
    /// Literal for code: StructureDefinition
    /// </summary>
    public const string LiteralStructureDefinition = "StructureDefinition";

    /// <summary>
    /// Literal for code: StructureMap
    /// </summary>
    public const string LiteralStructureMap = "StructureMap";

    /// <summary>
    /// Literal for code: Subscription
    /// </summary>
    public const string LiteralSubscription = "Subscription";

    /// <summary>
    /// Literal for code: SubscriptionStatus
    /// </summary>
    public const string LiteralSubscriptionStatus = "SubscriptionStatus";

    /// <summary>
    /// Literal for code: SubscriptionTopic
    /// </summary>
    public const string LiteralSubscriptionTopic = "SubscriptionTopic";

    /// <summary>
    /// Literal for code: Substance
    /// </summary>
    public const string LiteralSubstance = "Substance";

    /// <summary>
    /// Literal for code: SubstanceDefinition
    /// </summary>
    public const string LiteralSubstanceDefinition = "SubstanceDefinition";

    /// <summary>
    /// Literal for code: SupplyDelivery
    /// </summary>
    public const string LiteralSupplyDelivery = "SupplyDelivery";

    /// <summary>
    /// Literal for code: SupplyRequest
    /// </summary>
    public const string LiteralSupplyRequest = "SupplyRequest";

    /// <summary>
    /// Literal for code: Task
    /// </summary>
    public const string LiteralTask = "Task";

    /// <summary>
    /// Literal for code: TerminologyCapabilities
    /// </summary>
    public const string LiteralTerminologyCapabilities = "TerminologyCapabilities";

    /// <summary>
    /// Literal for code: TestReport
    /// </summary>
    public const string LiteralTestReport = "TestReport";

    /// <summary>
    /// Literal for code: TestScript
    /// </summary>
    public const string LiteralTestScript = "TestScript";

    /// <summary>
    /// Literal for code: ValueSet
    /// </summary>
    public const string LiteralValueSet = "ValueSet";

    /// <summary>
    /// Literal for code: VerificationResult
    /// </summary>
    public const string LiteralVerificationResult = "VerificationResult";

    /// <summary>
    /// Literal for code: VisionPrescription
    /// </summary>
    public const string LiteralVisionPrescription = "VisionPrescription";
  };
}
