// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.1.0
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// Codes specifying the type of probability distribution.
  /// </summary>
  public static class ProbabilityDistributionTypeCodes
  {
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Beta = new Coding
    {
      Code = "B",
      Display = "beta",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Exponential = new Coding
    {
      Code = "E",
      Display = "exponential",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding F = new Coding
    {
      Code = "F",
      Display = "F",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Gamma = new Coding
    {
      Code = "G",
      Display = "(gamma)",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding LogNormal = new Coding
    {
      Code = "LN",
      Display = "log-normal",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding NormalGaussian = new Coding
    {
      Code = "N",
      Display = "normal (Gaussian)",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding T = new Coding
    {
      Code = "T",
      Display = "T",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding Uniform = new Coding
    {
      Code = "U",
      Display = "uniform",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ChiSquare = new Coding
    {
      Code = "X2",
      Display = "chi square",
      System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
    };

    /// <summary>
    /// Literal for code: Beta
    /// </summary>
    public const string LiteralBeta = "B";

    /// <summary>
    /// Literal for code: Exponential
    /// </summary>
    public const string LiteralExponential = "E";

    /// <summary>
    /// Literal for code: F
    /// </summary>
    public const string LiteralF = "F";

    /// <summary>
    /// Literal for code: Gamma
    /// </summary>
    public const string LiteralGamma = "G";

    /// <summary>
    /// Literal for code: LogNormal
    /// </summary>
    public const string LiteralLogNormal = "LN";

    /// <summary>
    /// Literal for code: NormalGaussian
    /// </summary>
    public const string LiteralNormalGaussian = "N";

    /// <summary>
    /// Literal for code: T
    /// </summary>
    public const string LiteralT = "T";

    /// <summary>
    /// Literal for code: Uniform
    /// </summary>
    public const string LiteralUniform = "U";

    /// <summary>
    /// Literal for code: ChiSquare
    /// </summary>
    public const string LiteralChiSquare = "X2";
  };
}
